 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 1 - 9/26/2021 0:20:37


       1/       0 :                      PAGE $0
       2/    FFFC :                      org $FFFC
       3/    FFFC : 76 2C                FDB main
       4/       0 :                      org $0
       5/      20 :                      org $20
       6/      20 :                      
       7/      20 :                     dummy:
       8/      20 :                      DFS $2
       9/      22 :                      
      10/      22 :                     ret_val:
      11/      22 :                      DFS $2
      12/      24 :                      
      13/      24 :                     ret_address:
      14/      24 :                      DFS $2
      15/      26 :                      
      16/      26 :                     screen_ptr:
      17/      26 :                      DFS $2
      18/      28 :                      
      19/      28 :                     font_ptr:
      20/      28 :                      DFS $2
      21/      2A :                      
      22/      2A :                     dict_ptr:
      23/      2A :                      DFS $2
      24/      2C :                      
      25/      2C :                     new_dict_ptr:
      26/      2C :                      DFS $2
      27/      2E :                      
      28/      2E :                     dict_save:
      29/      2E :                      DFS $2
      30/      30 :                      
      31/      30 :                     exec_ptr:
      32/      30 :                      DFS $2
      33/      32 :                      
      34/      32 :                     obj_address:
      35/      32 :                      DFS $2
      36/      34 :                      
      37/      34 :                     math_ptr1:
      38/      34 :                      DFS $2
      39/      36 :                      
      40/      36 :                     math_ptr2:
      41/      36 :                      DFS $2
      42/      38 :                      
      43/      38 :                     R0:
      44/      38 :                      DFS $A
      45/      42 :                      
      46/      42 :                     R1:
      47/      42 :                      DFS $A
      48/      4C :                      
      49/      4C :                     R2:
      50/      4C :                      DFS $A
      51/      56 :                      
      52/      56 :                     R3:
      53/      56 :                      DFS $A
      54/      60 :                      
      55/      60 :                     R4:
      56/      60 :                      DFS $A
      57/      6A :                      
      58/      6A :                     R5:
      59/      6A :                      DFS $A
      60/      74 :                      
      61/      74 :                     R6:
      62/      74 :                      DFS $A
      63/      7E :                      
      64/      7E :                     R7:
      65/      7E :                      DFS $A
      66/      88 :                      
      67/      88 :                     R_ans:
      68/      88 :                      DFS $A
      69/      92 :                      
      70/      92 :                     Regs_end:
      71/     130 :                      org $130
      72/     130 :                      
      73/     130 :                     global_error:
      74/     130 :                      DFS $1
      75/     131 :                      
      76/     131 :                     input_buff_begin:
      77/     131 :                      DFS $1
      78/     132 :                      
      79/     132 :                     input_buff_end:
      80/     132 :                      DFS $1
      81/     133 :                      
      82/     133 :                     input_buff:
      83/     133 :                      DFS $40
      84/     173 :                      
      85/     173 :                     font_inverted:
      86/     173 :                      DFS $1
      87/     174 :                      
      88/     174 :                     stack_count:
      89/     174 :                      DFS $1
      90/     175 :                      
      91/     175 :                     mode:
      92/     175 :                      DFS $1
      93/     176 :                      
      94/     176 :                     test_count:
      95/     176 :                      DFS $2
      96/     178 :                      
      97/     178 :                     dict_begin:
      98/     800 :                      org $800
      99/     800 :                      
     100/     800 :                     dict_end:
     101/     800 :                      
     102/     800 :                     RIOT_mem_begin:
     103/     800 :                      
     104/     800 :                     temp_thread:
     105/     800 :                      DFS $4
     106/     804 :                      
     107/     804 :                     stack_X:
     108/     804 :                      DFS $1
     109/     805 :                      
     110/     805 :                     math_lo:
     111/     805 :                      DFS $1
     112/     806 :                      
     113/     806 :                     math_hi:
     114/     806 :                      DFS $1
     115/     807 :                      
     116/     807 :                     math_a:
     117/     807 :                      DFS $1
     118/     808 :                      
     119/     808 :                     math_b:
     120/     808 :                      DFS $1
     121/     809 :                      
     122/     809 :                     math_c:
     123/     809 :                      DFS $1
     124/     80A :                      
     125/     80A :                     math_d:
     126/     80A :                      DFS $1
     127/     80B :                      
     128/     80B :                     math_signs:
     129/     80B :                      DFS $1
     130/     80C :                      
     131/     80C :                     math_sticky:
     132/     80C :                      DFS $1
     133/     80D :                      
     134/     80D :                     math_max:
     135/     80D :                      DFS $1
     136/     80E :                      
     137/     80E :                     math_fill:
     138/     80E :                      DFS $1
     139/     80F :                      
     140/     80F :                     shift_counter:
     141/     80F :                      DFS $1
     142/     810 :                      
     143/     810 :                     CORDIC_sign:
     144/     810 :                      DFS $1
     145/     811 :                      
     146/     811 :                     CORDIC_halve:
     147/     811 :                      DFS $1
     148/     812 :                      
     149/     812 :                     CORDIC_loop_inner:
     150/     812 :                      DFS $1
     151/     813 :                      
     152/     813 :                     CORDIC_loop_outer:
     153/     813 :                      DFS $1
     154/     814 :                      
     155/     814 :                     CORDIC_shift_count:
     156/     814 :                      DFS $1
     157/     815 :                      
     158/     815 :                     CORDIC_sign_temp:
     159/     815 :                      DFS $1
     160/     816 :                      
     161/     816 :                     CORDIC_end_sign:
     162/     816 :                      DFS $1
     163/     817 :                      
     164/     817 :                     CORDIC_comparator:
     165/     817 :                      DFS $2
     166/     819 :                      
     167/     819 :                     new_word_len:
     168/     819 :                      DFS $1
     169/     81A :                      
     170/     81A :                     new_word_buff:
     171/     81A :                      DFS $13
     172/     82D :                      
     173/     82D :                     AUX_STACK:
     174/     82D :                      DFS $44
     175/     871 :                      
     176/     871 :                     aux_stack_ptr:
     177/     871 :                      DFS $1
     178/     872 :                      
     179/     872 :                     aux_stack_count:
     180/     872 :                      DFS $1
     181/     873 :                      
     182/     873 :                     aux_word_counter:
     183/     873 :                      DFS $1
     184/     874 :                      
     185/     874 :                     RIOT_mem_end:
     186/     880 :                      org $880
     187/    D000 :                      org $D000
     188/    D000 :                      
     189/    D000 :                     DebugText:
     190/    D000 : A0 00                LDY #$0
     191/    D002 :                      .loop:
     192/    D002 : B1 04                LDA ($4),Y ;msg
     193/    D004 : F0 07                BEQ .done
     194/    D006 : 8D E7 FF             STA $FFE7
     195/    D009 : C8                   INY
     196/    D00A : 4C 02 D0             JMP .loop
     197/    D00D :                      .done:
     198/    D00D : 60                   RTS
     199/    D00E :                      
     200/    D00E :                     halt_test:
     201/    D00E : A5 20                LDA dummy
     202/    D010 : CD 76 01             CMP test_count
     203/    D013 : D0 09                BNE .no_match
     204/    D015 : A5 21                LDA dummy+$1
     205/    D017 : CD 77 01             CMP test_count+$1
     206/    D01A : D0 02                BNE .no_match
     207/    D01C : 00                   BRK
     208/    D01D : 00                   BRK
     209/    D01E :                      .no_match:
     210/    D01E : 60                   RTS
     211/    D01F :                      
     212/    D01F :                     halt_no_test:
     213/    D01F : AD 76 01             LDA test_count
     214/    D022 : 2D 77 01             AND test_count+$1
     215/    D025 : C9 FF                CMP #$FF
     216/    D027 : F0 03                BEQ .._112.skip
     217/    D029 : 4C 2E D0             JMP .if0
     218/    D02C :                      .._112.skip:
     219/    D02C : 00                   BRK
     220/    D02D : 00                   BRK
     221/    D02E :                      .if0:
     222/    D02E : 60                   RTS
     223/    D02F :                     
     224/    D02F :                     font1:
     225/    D02F : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
     226/    D034 : 00 00 FA 00 00       FCB $0,$0,$FA,$0,$0
     227/    D039 : 00 C0 00 C0 00       FCB $0,$C0,$0,$C0,$0
     228/    D03E : 28 7C 28 7C 28       FCB $28,$7C,$28,$7C,$28
     229/    D043 : 5C 54 FE 54 74       FCB $5C,$54,$FE,$54,$74
     230/    D048 : 44 20 10 08 44       FCB $44,$20,$10,$8,$44
     231/    D04D : 0A 44 AA 92 6C       FCB $A,$44,$AA,$92,$6C
     232/    D052 : 00 00 C0 00 00       FCB $0,$0,$C0,$0,$0
     233/    D057 : 00 82 44 38 00       FCB $0,$82,$44,$38,$0
     234/    D05C : 00 38 44 82 00       FCB $0,$38,$44,$82,$0
     235/    D061 : 28 10 7C 10 28       FCB $28,$10,$7C,$10,$28
     236/    D066 : 10 10 7C 10 10       FCB $10,$10,$7C,$10,$10
     237/    D06B : 00 06 07 01 00       FCB $0,$6,$7,$1,$0
     238/    D070 : 10 10 10 10 10       FCB $10,$10,$10,$10,$10
     239/    D075 : 00 00 06 06 00       FCB $0,$0,$6,$6,$0
     240/    D07A : 40 20 10 08 04       FCB $40,$20,$10,$8,$4
     241/    D07F : 7C A2 92 8A 7C       FCB $7C,$A2,$92,$8A,$7C
     242/    D084 : 00 02 FE 42 00       FCB $0,$2,$FE,$42,$0
     243/    D089 : 62 92 8A 86 42       FCB $62,$92,$8A,$86,$42
     244/    D08E : 6C 92 92 82 44       FCB $6C,$92,$92,$82,$44
     245/    D093 : 08 FE 48 28 18       FCB $8,$FE,$48,$28,$18
     246/    D098 : 8C 92 92 92 F2       FCB $8C,$92,$92,$92,$F2
     247/    D09D : 4C 92 92 92 7C       FCB $4C,$92,$92,$92,$7C
     248/    D0A2 : C0 A0 90 8E 80       FCB $C0,$A0,$90,$8E,$80
     249/    D0A7 : 6C 92 92 92 6C       FCB $6C,$92,$92,$92,$6C
     250/    D0AC : 7C 92 92 92 64       FCB $7C,$92,$92,$92,$64
     251/    D0B1 : 00 00 6C 6C 00       FCB $0,$0,$6C,$6C,$0
     252/    D0B6 : 00 6C 6E 02 00       FCB $0,$6C,$6E,$2,$0
     253/    D0BB : 00 44 28 10 00       FCB $0,$44,$28,$10,$0
     254/    D0C0 : 28 28 28 28 28       FCB $28,$28,$28,$28,$28
     255/    D0C5 : 00 10 28 44 00       FCB $0,$10,$28,$44,$0
     256/    D0CA : 60 90 8A 80 60       FCB $60,$90,$8A,$80,$60
     257/    D0CF : 3C 42 5E 52 4C       FCB $3C,$42,$5E,$52,$4C
     258/    D0D4 : 7E 90 90 90 7E       FCB $7E,$90,$90,$90,$7E
     259/    D0D9 : 6C 92 92 92 FE       FCB $6C,$92,$92,$92,$FE
     260/    D0DE : 44 82 82 82 7C       FCB $44,$82,$82,$82,$7C
     261/    D0E3 : 38 44 82 82 FE       FCB $38,$44,$82,$82,$FE
     262/    D0E8 : 82 92 92 92 FE       FCB $82,$92,$92,$92,$FE
     263/    D0ED : 80 90 90 90 FE       FCB $80,$90,$90,$90,$FE
     264/    D0F2 : 5C 92 92 82 7C       FCB $5C,$92,$92,$82,$7C
     265/    D0F7 : FE 10 10 10 FE       FCB $FE,$10,$10,$10,$FE
     266/    D0FC : 82 82 FE 82 82       FCB $82,$82,$FE,$82,$82
     267/    D101 : FC 02 02 02 0C       FCB $FC,$2,$2,$2,$C
     268/    D106 : 82 44 28 10 FE       FCB $82,$44,$28,$10,$FE
     269/    D10B : 02 02 02 02 FE       FCB $2,$2,$2,$2,$FE
     270/    D110 : FE 40 30 40 FE       FCB $FE,$40,$30,$40,$FE
     271/    D115 : FE 10 20 40 FE       FCB $FE,$10,$20,$40,$FE
     272/    D11A : 7C 82 82 82 7C       FCB $7C,$82,$82,$82,$7C
     273/    D11F : 60 90 90 90 FE       FCB $60,$90,$90,$90,$FE
     274/    D124 : 7A 84 8A 82 7C       FCB $7A,$84,$8A,$82,$7C
     275/    D129 : 62 94 98 90 FE       FCB $62,$94,$98,$90,$FE
     276/    D12E : 4C 92 92 92 64       FCB $4C,$92,$92,$92,$64
     277/    D133 : 80 80 FE 80 80       FCB $80,$80,$FE,$80,$80
     278/    D138 : FC 02 02 02 FC       FCB $FC,$2,$2,$2,$FC
     279/    D13D : E0 18 06 18 E0       FCB $E0,$18,$6,$18,$E0
     280/    D142 : F8 06 18 06 F8       FCB $F8,$6,$18,$6,$F8
     281/    D147 : C6 28 10 28 C6       FCB $C6,$28,$10,$28,$C6
     282/    D14C : C0 20 1E 20 C0       FCB $C0,$20,$1E,$20,$C0
     283/    D151 : C2 A2 92 8A 86       FCB $C2,$A2,$92,$8A,$86
     284/    D156 : 00 82 82 FE 00       FCB $0,$82,$82,$FE,$0
     285/    D15B : 04 08 10 20 40       FCB $4,$8,$10,$20,$40
     286/    D160 : 00 FE 82 82 00       FCB $0,$FE,$82,$82,$0
     287/    D165 : 20 40 80 40 20       FCB $20,$40,$80,$40,$20
     288/    D16A : 01 01 01 01 01       FCB $1,$1,$1,$1,$1
     289/    D16F : 00 00 40 80 00       FCB $0,$0,$40,$80,$0
     290/    D174 : 00 FE 7C 38 10       FCB $0,$FE,$7C,$38,$10
     291/    D179 : F0 F0 F0 F0 F0       FCB $F0,$F0,$F0,$F0,$F0
     292/    D17E : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
     293/    D183 : 10 38 54 92 10       FCB $10,$38,$54,$92,$10
     294/    D188 : 18 2A 2A 2A 1C       FCB $18,$2A,$2A,$2A,$1C
     295/    D18D :                     
     296/    D18D :                     font2:
     297/    D18D : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
     298/    D192 : 00 00 FA 00 00       FCB $0,$0,$FA,$0,$0
     299/    D197 : 00 C0 00 C0 00       FCB $0,$C0,$0,$C0,$0
     300/    D19C : 28 7C 28 7C 28       FCB $28,$7C,$28,$7C,$28
     301/    D1A1 : 5C 54 FE 54 74       FCB $5C,$54,$FE,$54,$74
     302/    D1A6 : 44 20 10 08 44       FCB $44,$20,$10,$8,$44
     303/    D1AB : 0A 44 AA 92 6C       FCB $A,$44,$AA,$92,$6C
     304/    D1B0 : 00 00 C0 00 00       FCB $0,$0,$C0,$0,$0
     305/    D1B5 : 00 82 44 38 00       FCB $0,$82,$44,$38,$0
     306/    D1BA : 00 38 44 82 00       FCB $0,$38,$44,$82,$0
     307/    D1BF : 28 10 7C 10 28       FCB $28,$10,$7C,$10,$28
     308/    D1C4 : 10 10 7C 10 10       FCB $10,$10,$7C,$10,$10
     309/    D1C9 : 00 06 07 01 00       FCB $0,$6,$7,$1,$0
     310/    D1CE : 10 10 10 10 10       FCB $10,$10,$10,$10,$10
     311/    D1D3 : 00 00 06 06 00       FCB $0,$0,$6,$6,$0
     312/    D1D8 : 10 10 54 10 10       FCB $10,$10,$54,$10,$10
     313/    D1DD : FE A2 92 8A FE       FCB $FE,$A2,$92,$8A,$FE
     314/    D1E2 : 02 02 FE 82 82       FCB $2,$2,$FE,$82,$82
     315/    D1E7 : F2 92 92 92 9E       FCB $F2,$92,$92,$92,$9E
     316/    D1EC : FE 92 92 92 92       FCB $FE,$92,$92,$92,$92
     317/    D1F1 : FE 10 10 10 F0       FCB $FE,$10,$10,$10,$F0
     318/    D1F6 : 9E 92 92 92 F2       FCB $9E,$92,$92,$92,$F2
     319/    D1FB : 9E 92 92 92 FE       FCB $9E,$92,$92,$92,$FE
     320/    D200 : FE 80 80 80 80       FCB $FE,$80,$80,$80,$80
     321/    D205 : FE 92 92 92 FE       FCB $FE,$92,$92,$92,$FE
     322/    D20A : FE 92 92 92 F2       FCB $FE,$92,$92,$92,$F2
     323/    D20F : 00 00 6C 6C 00       FCB $0,$0,$6C,$6C,$0
     324/    D214 : 00 6C 6E 02 00       FCB $0,$6C,$6E,$2,$0
     325/    D219 : 00 44 28 10 00       FCB $0,$44,$28,$10,$0
     326/    D21E : 28 28 28 28 28       FCB $28,$28,$28,$28,$28
     327/    D223 : 00 10 28 44 00       FCB $0,$10,$28,$44,$0
     328/    D228 : 60 90 8A 80 60       FCB $60,$90,$8A,$80,$60
     329/    D22D : 3C 42 5E 52 4C       FCB $3C,$42,$5E,$52,$4C
     330/    D232 : FE 90 90 90 FE       FCB $FE,$90,$90,$90,$FE
     331/    D237 : 6C 92 92 92 FE       FCB $6C,$92,$92,$92,$FE
     332/    D23C : 82 82 82 82 FE       FCB $82,$82,$82,$82,$FE
     333/    D241 : 7C 82 82 82 FE       FCB $7C,$82,$82,$82,$FE
     334/    D246 : 92 92 92 92 FE       FCB $92,$92,$92,$92,$FE
     335/    D24B : 90 90 90 90 FE       FCB $90,$90,$90,$90,$FE
     336/    D250 : 9E 92 92 82 FE       FCB $9E,$92,$92,$82,$FE
     337/    D255 : FE 10 10 10 FE       FCB $FE,$10,$10,$10,$FE
     338/    D25A : 82 82 FE 82 82       FCB $82,$82,$FE,$82,$82
     339/    D25F : FE 02 02 02 0E       FCB $FE,$2,$2,$2,$E
     340/    D264 : 82 44 28 10 FE       FCB $82,$44,$28,$10,$FE
     341/    D269 : 02 02 02 02 FE       FCB $2,$2,$2,$2,$FE
     342/    D26E : FE 80 FE 80 FE       FCB $FE,$80,$FE,$80,$FE
     343/    D273 : FE 10 20 40 FE       FCB $FE,$10,$20,$40,$FE
     344/    D278 : FE 82 82 82 FE       FCB $FE,$82,$82,$82,$FE
     345/    D27D : F0 90 90 90 FE       FCB $F0,$90,$90,$90,$FE
     346/    D282 : FA 84 8A 82 FE       FCB $FA,$84,$8A,$82,$FE
     347/    D287 : 6E 90 90 90 FE       FCB $6E,$90,$90,$90,$FE
     348/    D28C : 8C 92 92 92 62       FCB $8C,$92,$92,$92,$62
     349/    D291 : 80 80 FE 80 80       FCB $80,$80,$FE,$80,$80
     350/    D296 : FE 02 02 02 FE       FCB $FE,$2,$2,$2,$FE
     351/    D29B : E0 18 06 18 E0       FCB $E0,$18,$6,$18,$E0
     352/    D2A0 : F8 06 18 06 F8       FCB $F8,$6,$18,$6,$F8
     353/    D2A5 : C6 28 10 28 C6       FCB $C6,$28,$10,$28,$C6
     354/    D2AA : C0 20 1E 20 C0       FCB $C0,$20,$1E,$20,$C0
     355/    D2AF : C2 A2 92 8A 86       FCB $C2,$A2,$92,$8A,$86
     356/    D2B4 : 00 82 82 FE 00       FCB $0,$82,$82,$FE,$0
     357/    D2B9 : 04 08 10 20 40       FCB $4,$8,$10,$20,$40
     358/    D2BE : 00 FE 82 82 00       FCB $0,$FE,$82,$82,$0
     359/    D2C3 : 20 40 80 40 20       FCB $20,$40,$80,$40,$20
     360/    D2C8 : 01 01 01 01 01       FCB $1,$1,$1,$1,$1
     361/    D2CD : 00 00 40 80 00       FCB $0,$0,$40,$80,$0
     362/    D2D2 : 00 FE 7C 38 10       FCB $0,$FE,$7C,$38,$10
     363/    D2D7 : F0 F0 F0 F0 F0       FCB $F0,$F0,$F0,$F0,$F0
     364/    D2DC : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
     365/    D2E1 : 10 38 54 92 10       FCB $10,$38,$54,$92,$10
     366/    D2E6 : 18 2A 2A 2A 1C       FCB $18,$2A,$2A,$2A,$1C
     367/    D2EB :                     
     368/    D2EB :                     font3:
     369/    D2EB : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
     370/    D2F0 : 00 00 FA 00 00       FCB $0,$0,$FA,$0,$0
     371/    D2F5 : 00 C0 00 C0 00       FCB $0,$C0,$0,$C0,$0
     372/    D2FA : 28 7C 28 7C 28       FCB $28,$7C,$28,$7C,$28
     373/    D2FF : 5C 54 FE 54 74       FCB $5C,$54,$FE,$54,$74
     374/    D304 : 44 20 10 08 44       FCB $44,$20,$10,$8,$44
     375/    D309 : 0A 44 AA 92 6C       FCB $A,$44,$AA,$92,$6C
     376/    D30E : 00 00 C0 00 00       FCB $0,$0,$C0,$0,$0
     377/    D313 : 00 82 44 38 00       FCB $0,$82,$44,$38,$0
     378/    D318 : 00 38 44 82 00       FCB $0,$38,$44,$82,$0
     379/    D31D : 28 10 7C 10 28       FCB $28,$10,$7C,$10,$28
     380/    D322 : 10 10 7C 10 10       FCB $10,$10,$7C,$10,$10
     381/    D327 : 00 06 07 01 00       FCB $0,$6,$7,$1,$0
     382/    D32C : 10 10 10 10 10       FCB $10,$10,$10,$10,$10
     383/    D331 : 00 00 06 06 00       FCB $0,$0,$6,$6,$0
     384/    D336 : 40 20 10 08 04       FCB $40,$20,$10,$8,$4
     385/    D33B : FE FE C6 FE FE       FCB $FE,$FE,$C6,$FE,$FE
     386/    D340 : 00 06 FE FE C6       FCB $0,$6,$FE,$FE,$C6
     387/    D345 : F6 F6 D6 DE DE       FCB $F6,$F6,$D6,$DE,$DE
     388/    D34A : FE FE D6 D6 D6       FCB $FE,$FE,$D6,$D6,$D6
     389/    D34F : FE FE 10 F0 F0       FCB $FE,$FE,$10,$F0,$F0
     390/    D354 : DE DE D6 F6 F6       FCB $DE,$DE,$D6,$F6,$F6
     391/    D359 : DE DE D6 FE FE       FCB $DE,$DE,$D6,$FE,$FE
     392/    D35E : FE FE C0 C0 C0       FCB $FE,$FE,$C0,$C0,$C0
     393/    D363 : FE FE D6 FE FE       FCB $FE,$FE,$D6,$FE,$FE
     394/    D368 : FE FE D6 F6 F6       FCB $FE,$FE,$D6,$F6,$F6
     395/    D36D : 00 00 6C 6C 00       FCB $0,$0,$6C,$6C,$0
     396/    D372 : 00 6C 6E 02 00       FCB $0,$6C,$6E,$2,$0
     397/    D377 : 00 44 28 10 00       FCB $0,$44,$28,$10,$0
     398/    D37C : 28 28 28 28 28       FCB $28,$28,$28,$28,$28
     399/    D381 : 00 10 28 44 00       FCB $0,$10,$28,$44,$0
     400/    D386 : 60 90 8A 80 60       FCB $60,$90,$8A,$80,$60
     401/    D38B : 3C 42 5E 52 4C       FCB $3C,$42,$5E,$52,$4C
     402/    D390 : 7E 90 90 90 7E       FCB $7E,$90,$90,$90,$7E
     403/    D395 : 6C 92 92 92 FE       FCB $6C,$92,$92,$92,$FE
     404/    D39A : 44 82 82 82 7C       FCB $44,$82,$82,$82,$7C
     405/    D39F : 38 44 82 82 FE       FCB $38,$44,$82,$82,$FE
     406/    D3A4 : 82 92 92 92 FE       FCB $82,$92,$92,$92,$FE
     407/    D3A9 : 80 90 90 90 FE       FCB $80,$90,$90,$90,$FE
     408/    D3AE : 5C 92 92 82 7C       FCB $5C,$92,$92,$82,$7C
     409/    D3B3 : FE 10 10 10 FE       FCB $FE,$10,$10,$10,$FE
     410/    D3B8 : 82 82 FE 82 82       FCB $82,$82,$FE,$82,$82
     411/    D3BD : FC 02 02 02 0C       FCB $FC,$2,$2,$2,$C
     412/    D3C2 : 82 44 28 10 FE       FCB $82,$44,$28,$10,$FE
     413/    D3C7 : 02 02 02 02 FE       FCB $2,$2,$2,$2,$FE
     414/    D3CC : FE 40 30 40 FE       FCB $FE,$40,$30,$40,$FE
     415/    D3D1 : FE 10 20 40 FE       FCB $FE,$10,$20,$40,$FE
     416/    D3D6 : 7C 82 82 82 7C       FCB $7C,$82,$82,$82,$7C
     417/    D3DB : 60 90 90 90 FE       FCB $60,$90,$90,$90,$FE
     418/    D3E0 : 7A 84 8A 82 7C       FCB $7A,$84,$8A,$82,$7C
     419/    D3E5 : 62 94 98 90 FE       FCB $62,$94,$98,$90,$FE
     420/    D3EA : 4C 92 92 92 64       FCB $4C,$92,$92,$92,$64
     421/    D3EF : 80 80 FE 80 80       FCB $80,$80,$FE,$80,$80
     422/    D3F4 : FC 02 02 02 FC       FCB $FC,$2,$2,$2,$FC
     423/    D3F9 : E0 18 06 18 E0       FCB $E0,$18,$6,$18,$E0
     424/    D3FE : F8 06 18 06 F8       FCB $F8,$6,$18,$6,$F8
     425/    D403 : C6 28 10 28 C6       FCB $C6,$28,$10,$28,$C6
     426/    D408 : C0 20 1E 20 C0       FCB $C0,$20,$1E,$20,$C0
     427/    D40D : C2 A2 92 8A 86       FCB $C2,$A2,$92,$8A,$86
     428/    D412 : 00 82 82 FE 00       FCB $0,$82,$82,$FE,$0
     429/    D417 : 04 08 10 20 40       FCB $4,$8,$10,$20,$40
     430/    D41C : 00 FE 82 82 00       FCB $0,$FE,$82,$82,$0
     431/    D421 : 20 40 80 40 20       FCB $20,$40,$80,$40,$20
     432/    D426 : 01 01 01 01 01       FCB $1,$1,$1,$1,$1
     433/    D42B : 00 00 40 80 00       FCB $0,$0,$40,$80,$0
     434/    D430 : 00 FE 7C 38 10       FCB $0,$FE,$7C,$38,$10
     435/    D435 : F0 F0 F0 F0 F0       FCB $F0,$F0,$F0,$F0,$F0
     436/    D43A : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
     437/    D43F : 10 38 54 92 10       FCB $10,$38,$54,$92,$10
     438/    D444 : 18 2A 2A 2A 1C       FCB $18,$2A,$2A,$2A,$1C
     439/    D449 :                     
     440/    D449 :                     font4:
     441/    D449 : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
     442/    D44E : 00 00 FA 00 00       FCB $0,$0,$FA,$0,$0
     443/    D453 : 00 C0 00 C0 00       FCB $0,$C0,$0,$C0,$0
     444/    D458 : 28 7C 28 7C 28       FCB $28,$7C,$28,$7C,$28
     445/    D45D : 5C 54 FE 54 74       FCB $5C,$54,$FE,$54,$74
     446/    D462 : 44 20 10 08 44       FCB $44,$20,$10,$8,$44
     447/    D467 : 0A 44 AA 92 6C       FCB $A,$44,$AA,$92,$6C
     448/    D46C : 00 00 C0 00 00       FCB $0,$0,$C0,$0,$0
     449/    D471 : 00 82 44 38 00       FCB $0,$82,$44,$38,$0
     450/    D476 : 00 38 44 82 00       FCB $0,$38,$44,$82,$0
     451/    D47B : 28 10 7C 10 28       FCB $28,$10,$7C,$10,$28
     452/    D480 : 10 10 7C 10 10       FCB $10,$10,$7C,$10,$10
     453/    D485 : 00 06 07 01 00       FCB $0,$6,$7,$1,$0
     454/    D48A : 10 10 10 10 10       FCB $10,$10,$10,$10,$10
     455/    D48F : 00 00 06 06 00       FCB $0,$0,$6,$6,$0
     456/    D494 : 40 20 10 08 04       FCB $40,$20,$10,$8,$4
     457/    D499 : 7C FE C6 FE 7C       FCB $7C,$FE,$C6,$FE,$7C
     458/    D49E : 00 06 FE FE C6       FCB $0,$6,$FE,$FE,$C6
     459/    D4A3 : 66 F6 D6 DE CE       FCB $66,$F6,$D6,$DE,$CE
     460/    D4A8 : 6C FE D6 D6 D6       FCB $6C,$FE,$D6,$D6,$D6
     461/    D4AD : FE FE 10 F0 F0       FCB $FE,$FE,$10,$F0,$F0
     462/    D4B2 : CC DE D6 F6 F6       FCB $CC,$DE,$D6,$F6,$F6
     463/    D4B7 : CC DE D6 FE 7C       FCB $CC,$DE,$D6,$FE,$7C
     464/    D4BC : FE FE C0 C0 C0       FCB $FE,$FE,$C0,$C0,$C0
     465/    D4C1 : 6C FE D6 FE 6C       FCB $6C,$FE,$D6,$FE,$6C
     466/    D4C6 : 7C FE D6 F6 76       FCB $7C,$FE,$D6,$F6,$76
     467/    D4CB : 00 00 6C 6C 00       FCB $0,$0,$6C,$6C,$0
     468/    D4D0 : 00 6C 6E 02 00       FCB $0,$6C,$6E,$2,$0
     469/    D4D5 : 00 44 28 10 00       FCB $0,$44,$28,$10,$0
     470/    D4DA : 28 28 28 28 28       FCB $28,$28,$28,$28,$28
     471/    D4DF : 00 10 28 44 00       FCB $0,$10,$28,$44,$0
     472/    D4E4 : 60 90 8A 80 60       FCB $60,$90,$8A,$80,$60
     473/    D4E9 : 3C 42 5E 52 4C       FCB $3C,$42,$5E,$52,$4C
     474/    D4EE : 7E 90 90 90 7E       FCB $7E,$90,$90,$90,$7E
     475/    D4F3 : 6C 92 92 92 FE       FCB $6C,$92,$92,$92,$FE
     476/    D4F8 : 44 82 82 82 7C       FCB $44,$82,$82,$82,$7C
     477/    D4FD : 38 44 82 82 FE       FCB $38,$44,$82,$82,$FE
     478/    D502 : 82 92 92 92 FE       FCB $82,$92,$92,$92,$FE
     479/    D507 : 80 90 90 90 FE       FCB $80,$90,$90,$90,$FE
     480/    D50C : 5C 92 92 82 7C       FCB $5C,$92,$92,$82,$7C
     481/    D511 : FE 10 10 10 FE       FCB $FE,$10,$10,$10,$FE
     482/    D516 : 82 82 FE 82 82       FCB $82,$82,$FE,$82,$82
     483/    D51B : FC 02 02 02 0C       FCB $FC,$2,$2,$2,$C
     484/    D520 : 82 44 28 10 FE       FCB $82,$44,$28,$10,$FE
     485/    D525 : 02 02 02 02 FE       FCB $2,$2,$2,$2,$FE
     486/    D52A : FE 40 30 40 FE       FCB $FE,$40,$30,$40,$FE
     487/    D52F : FE 10 20 40 FE       FCB $FE,$10,$20,$40,$FE
     488/    D534 : 7C 82 82 82 7C       FCB $7C,$82,$82,$82,$7C
     489/    D539 : 60 90 90 90 FE       FCB $60,$90,$90,$90,$FE
     490/    D53E : 7A 84 8A 82 7C       FCB $7A,$84,$8A,$82,$7C
     491/    D543 : 62 94 98 90 FE       FCB $62,$94,$98,$90,$FE
     492/    D548 : 4C 92 92 92 64       FCB $4C,$92,$92,$92,$64
     493/    D54D : 80 80 FE 80 80       FCB $80,$80,$FE,$80,$80
     494/    D552 : FC 02 02 02 FC       FCB $FC,$2,$2,$2,$FC
     495/    D557 : E0 18 06 18 E0       FCB $E0,$18,$6,$18,$E0
     496/    D55C : F8 06 18 06 F8       FCB $F8,$6,$18,$6,$F8
     497/    D561 : C6 28 10 28 C6       FCB $C6,$28,$10,$28,$C6
     498/    D566 : C0 20 1E 20 C0       FCB $C0,$20,$1E,$20,$C0
     499/    D56B : C2 A2 92 8A 86       FCB $C2,$A2,$92,$8A,$86
     500/    D570 : 00 82 82 FE 00       FCB $0,$82,$82,$FE,$0
     501/    D575 : 04 08 10 20 40       FCB $4,$8,$10,$20,$40
     502/    D57A : 00 FE 82 82 00       FCB $0,$FE,$82,$82,$0
     503/    D57F : 20 40 80 40 20       FCB $20,$40,$80,$40,$20
     504/    D584 : 01 01 01 01 01       FCB $1,$1,$1,$1,$1
     505/    D589 : 00 00 40 80 00       FCB $0,$0,$40,$80,$0
     506/    D58E : 00 FE 7C 38 10       FCB $0,$FE,$7C,$38,$10
     507/    D593 : F0 F0 F0 F0 F0       FCB $F0,$F0,$F0,$F0,$F0
     508/    D598 : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
     509/    D59D : 10 38 54 92 10       FCB $10,$38,$54,$92,$10
     510/    D5A2 : 18 2A 2A 2A 1C       FCB $18,$2A,$2A,$2A,$1C
     511/    D5A7 :                     
     512/    D5A7 :                     font_counter:
     513/    D5A7 : 00                   FCB $0
     514/    D5A8 :                     
     515/    D5A8 :                     debug_fonts:
     516/    D5A8 : 2F                   FCB font1 # $100
     517/    D5A9 : D0                   FCB font1/$100
     518/    D5AA : 8D                   FCB font2 # $100
     519/    D5AB : D1                   FCB font2/$100
     520/    D5AC : EB                   FCB font3 # $100
     521/    D5AD : D2                   FCB font3/$100
     522/    D5AE : 49                   FCB font4 # $100
     523/    D5AF : D4                   FCB font4/$100
     524/    8900 :                      org $8900
     525/    8900 :                      
     526/    8900 :                     test_buff:
     527/    8900 :                      DFS $A
     528/    890A :                      
     529/    890A :                     InputTest:
     530/    890A : A0 00                LDY #$0
     531/    890C :                      .loop:
     532/    890C : B1 20                LDA (dummy),Y
     533/    890E : F0 07                BEQ .loop_done
     534/    8910 : 99 1A 08             STA new_word_buff,Y
     535/    8913 : C8                   INY
     536/    8914 : 4C 0C 89             JMP .loop
     537/    8917 :                      .loop_done:
     538/    8917 : 8C 19 08             STY new_word_len
     539/    891A : 20 EC 1A             JSR CheckData
     540/    891D : A0 00                LDY #$0
     541/    891F : 84 20                STY dummy
     542/    8921 : 84 20                STY dummy
     543/    8923 :                      .check_loop:
     544/    8923 : A4 20                LDY dummy
     545/    8925 : B1 20                LDA (dummy),Y
     546/    8927 : C9 41                CMP #$41
     547/    8929 : B0 06                BCS .letter
     548/    892B : 38                   SEC
     549/    892C : E9 30                SBC #$30
     550/    892E : 4C 34 89             JMP .letter_done
     551/    8931 :                      .letter:
     552/    8931 : 38                   SEC
     553/    8932 : E9 37                SBC #$37
     554/    8934 :                      .letter_done:
     555/    8934 : 0A                   ASL
     556/    8935 : 0A                   ASL
     557/    8936 : 0A                   ASL
     558/    8937 : 0A                   ASL
     559/    8938 : 85 20                STA dummy
     560/    893A : C8                   INY
     561/    893B : B1 20                LDA (dummy),Y
     562/    893D : C9 41                CMP #$41
     563/    893F : B0 06                BCS .letter2
     564/    8941 : 38                   SEC
     565/    8942 : E9 30                SBC #$30
     566/    8944 : 4C 4A 89             JMP .letter_done2
     567/    8947 :                      .letter2:
     568/    8947 : 38                   SEC
     569/    8948 : E9 37                SBC #$37
     570/    894A :                      .letter_done2:
     571/    894A : 05 20                ORA dummy
     572/    894C : 85 20                STA dummy
     573/    894E : C8                   INY
     574/    894F : 84 20                STY dummy
     575/    8951 : A4 20                LDY dummy
     576/    8953 : B9 88 00             LDA R_ans,Y
     577/    8956 : C5 20                CMP dummy
     578/    8958 : D0 12                BNE .failed
     579/    895A : C8                   INY
     580/    895B : 84 20                STY dummy
     581/    895D : A4 20                LDY dummy
     582/    895F : B1 20                LDA (dummy),Y
     583/    8961 : D0 03                BNE .continue
     584/    8963 : 4C 01 8A             JMP .done
     585/    8966 :                      .continue:
     586/    8966 : C8                   INY
     587/    8967 : 84 20                STY dummy
     588/    8969 : 4C 23 89             JMP .check_loop
     589/    896C :                      .failed:
     590/    896C : 4C 77 89             JMP .._137.str_skip
     591/    896F :                      .._137.str_addr:
     592/    896F : 5C 72 54 65 73 74    FCB "\\rTest ",$0
                    20 00             
     593/    8977 :                      .._137.str_skip:
     594/    8977 : A9 6F                LDA # (.._137.str_addr) # $100
     595/    8979 : 85 04                STA $4 ;DebugText.msg
     596/    897B : A9 89                LDA # (.._137.str_addr)/$100
     597/    897D : 85 05                STA $5 ;DebugText.msg
     598/    897F : 20 00 D0             JSR DebugText
     599/    8982 : AE 77 01             LDX test_count+$1
     600/    8985 : AD 76 01             LDA test_count
     601/    8988 : 8D EA FF             STA $FFEA
     602/    898B : 4C 9A 89             JMP .._161.str_skip
     603/    898E :                      .._161.str_addr:
     604/    898E : 3A 20 46 41 49 4C    FCB ": FAILED!\\n",$0
                    45 44 21 5C 6E 00 
     605/    899A :                      .._161.str_skip:
     606/    899A : A9 8E                LDA # (.._161.str_addr) # $100
     607/    899C : 85 04                STA $4 ;DebugText.msg
     608/    899E : A9 89                LDA # (.._161.str_addr)/$100
     609/    89A0 : 85 05                STA $5 ;DebugText.msg
     610/    89A2 : 20 00 D0             JSR DebugText
     611/    89A5 : 4C B6 89             JMP .._185.str_skip
     612/    89A8 :                      .._185.str_addr:
     613/    89A8 : 20 20 20 45 78 70    FCB "   Expected: ",$0
                    65 63 74 65 64 3A 
                    20 00             
     614/    89B6 :                      .._185.str_skip:
     615/    89B6 : A9 A8                LDA # (.._185.str_addr) # $100
     616/    89B8 : 85 04                STA $4 ;DebugText.msg
     617/    89BA : A9 89                LDA # (.._185.str_addr)/$100
     618/    89BC : 85 05                STA $5 ;DebugText.msg
     619/    89BE : 20 00 D0             JSR DebugText
     620/    89C1 : A5 20                LDA dummy
     621/    89C3 : 85 04                STA $4 ;DebugText.msg
     622/    89C5 : A5 21                LDA dummy+$1
     623/    89C7 : 85 05                STA $5 ;DebugText.msg
     624/    89C9 : 20 00 D0             JSR DebugText
     625/    89CC : 4C DF 89             JMP .._237.str_skip
     626/    89CF :                      .._237.str_addr:
     627/    89CF : 5C 6E 20 20 20 46    FCB "\\n   Found:    ",$0
                    6F 75 6E 64 3A 20 
                    20 20 20 00       
     628/    89DF :                      .._237.str_skip:
     629/    89DF : A9 CF                LDA # (.._237.str_addr) # $100
     630/    89E1 : 85 04                STA $4 ;DebugText.msg
     631/    89E3 : A9 89                LDA # (.._237.str_addr)/$100
     632/    89E5 : 85 05                STA $5 ;DebugText.msg
     633/    89E7 : 20 00 D0             JSR DebugText
     634/    89EA : A0 00                LDY #$0
     635/    89EC :                      .fail_loop:
     636/    89EC : B9 88 00             LDA R_ans,Y
     637/    89EF : 8D E8 FF             STA $FFE8
     638/    89F2 : A9 20                LDA #$20
     639/    89F4 : 8D E7 FF             STA $FFE7
     640/    89F7 : C8                   INY
     641/    89F8 : C0 09                CPY #$9
     642/    89FA : D0 F0                BNE .fail_loop
     643/    89FC : 00                   BRK
     644/    89FD : 00                   BRK
     645/    89FE : 4C 6C 89             JMP .failed
     646/    8A01 :                      .done:
     647/    8A01 : 4C 0C 8A             JMP .._262.str_skip
     648/    8A04 :                      .._262.str_addr:
     649/    8A04 : 5C 67 54 65 73 74    FCB "\\gTest ",$0
                    20 00             
     650/    8A0C :                      .._262.str_skip:
     651/    8A0C : A9 04                LDA # (.._262.str_addr) # $100
     652/    8A0E : 85 04                STA $4 ;DebugText.msg
     653/    8A10 : A9 8A                LDA # (.._262.str_addr)/$100
     654/    8A12 : 85 05                STA $5 ;DebugText.msg
     655/    8A14 : 20 00 D0             JSR DebugText
     656/    8A17 : AE 77 01             LDX test_count+$1
     657/    8A1A : AD 76 01             LDA test_count
     658/    8A1D : 8D EA FF             STA $FFEA
     659/    8A20 : 4C 2E 8A             JMP .._286.str_skip
     660/    8A23 :                      .._286.str_addr:
     661/    8A23 : 3A 20 70 61 73 73    FCB ": passed\\n",$0
                    65 64 5C 6E 00    
     662/    8A2E :                      .._286.str_skip:
     663/    8A2E : A9 23                LDA # (.._286.str_addr) # $100
     664/    8A30 : 85 04                STA $4 ;DebugText.msg
     665/    8A32 : A9 8A                LDA # (.._286.str_addr)/$100
     666/    8A34 : 85 05                STA $5 ;DebugText.msg
     667/    8A36 : 20 00 D0             JSR DebugText
     668/    8A39 : EE 76 01             INC test_count
     669/    8A3C : D0 03                BNE .._307.no_carry
     670/    8A3E : EE 77 01             INC test_count+$1
     671/    8A41 :                      .._307.no_carry:
     672/    8A41 : 60                   RTS
     673/    8A42 :                      
     674/    8A42 :                     NewToR:
     675/    8A42 : A0 01                LDY #$1
     676/    8A44 :                      .loop:
     677/    8A44 : B9 88 00             LDA R_ans,Y
     678/    8A47 : 91 04                STA ($4),Y ;Rx
     679/    8A49 : C8                   INY
     680/    8A4A : C0 09                CPY #$9
     681/    8A4C : D0 F6                BNE .loop
     682/    8A4E : 60                   RTS
     683/    8A4F :                      
     684/    8A4F :                     CopyNew:
     685/    8A4F : A0 00                LDY #$0
     686/    8A51 :                      .loop:
     687/    8A51 : B1 20                LDA (dummy),Y
     688/    8A53 : F0 07                BEQ .loop_done
     689/    8A55 : 99 1A 08             STA new_word_buff,Y
     690/    8A58 : C8                   INY
     691/    8A59 : 4C 51 8A             JMP .loop
     692/    8A5C :                      .loop_done:
     693/    8A5C : 8C 19 08             STY new_word_len
     694/    8A5F : 20 EC 1A             JSR CheckData
     695/    8A62 : 60                   RTS
     696/    8A63 :                      
     697/    8A63 :                     DebugRans:
     698/    8A63 : 8A                   TXA
     699/    8A64 : 48                   PHA
     700/    8A65 : A2 06                LDX #$6
     701/    8A67 :                      .loop:
     702/    8A67 : B5 88                LDA R_ans,X
     703/    8A69 : 8D E8 FF             STA $FFE8
     704/    8A6C : CA                   DEX
     705/    8A6D : D0 F8                BNE .loop
     706/    8A6F : A9 20                LDA #$20
     707/    8A71 : 8D E7 FF             STA $FFE7
     708/    8A74 : 4C 79 8A             JMP .._338.str_skip
     709/    8A77 :                      .._338.str_addr:
     710/    8A77 : 45 00                FCB "E",$0
     711/    8A79 :                      .._338.str_skip:
     712/    8A79 : A9 77                LDA # (.._338.str_addr) # $100
     713/    8A7B : 85 04                STA $4 ;DebugText.msg
     714/    8A7D : A9 8A                LDA # (.._338.str_addr)/$100
     715/    8A7F : 85 05                STA $5 ;DebugText.msg
     716/    8A81 : 20 00 D0             JSR DebugText
     717/    8A84 : A5 90                LDA R_ans+$C/$2+$2
     718/    8A86 : 8D E8 FF             STA $FFE8
     719/    8A89 : A5 8F                LDA R_ans+$C/$2+$1
     720/    8A8B : 8D E8 FF             STA $FFE8
     721/    8A8E : 68                   PLA
     722/    8A8F : AA                   TAX
     723/    8A90 : 60                   RTS
     724/    8A91 :                      
     725/    8A91 :                     DebugBuff:
     726/    8A91 : 8A                   TXA
     727/    8A92 : 48                   PHA
     728/    8A93 : A2 06                LDX #$6
     729/    8A95 :                      .loop:
     730/    8A95 : BD 00 89             LDA test_buff,X
     731/    8A98 : 8D E8 FF             STA $FFE8
     732/    8A9B : CA                   DEX
     733/    8A9C : D0 F7                BNE .loop
     734/    8A9E : A9 20                LDA #$20
     735/    8AA0 : 8D E7 FF             STA $FFE7
     736/    8AA3 : 4C A8 8A             JMP .._362.str_skip
     737/    8AA6 :                      .._362.str_addr:
     738/    8AA6 : 45 00                FCB "E",$0
     739/    8AA8 :                      .._362.str_skip:
     740/    8AA8 : A9 A6                LDA # (.._362.str_addr) # $100
     741/    8AAA : 85 04                STA $4 ;DebugText.msg
     742/    8AAC : A9 8A                LDA # (.._362.str_addr)/$100
     743/    8AAE : 85 05                STA $5 ;DebugText.msg
     744/    8AB0 : 20 00 D0             JSR DebugText
     745/    8AB3 : AD 08 89             LDA test_buff+$C/$2+$2
     746/    8AB6 : 8D E8 FF             STA $FFE8
     747/    8AB9 : AD 07 89             LDA test_buff+$C/$2+$1
     748/    8ABC : 8D E8 FF             STA $FFE8
     749/    8ABF : 68                   PLA
     750/    8AC0 : AA                   TAX
     751/    8AC1 : 60                   RTS
     752/    8AC2 :                      
     753/    8AC2 :                     RansToBuff:
     754/    8AC2 : A0 00                LDY #$0
     755/    8AC4 :                      .loop:
     756/    8AC4 : B9 88 00             LDA R_ans,Y
     757/    8AC7 : 99 00 89             STA test_buff,Y
     758/    8ACA : C8                   INY
     759/    8ACB : C0 09                CPY #$9
     760/    8ACD : D0 F5                BNE .loop
     761/    8ACF : 60                   RTS
     762/    8AD0 :                      
     763/    8AD0 :                     CompareRans:
     764/    8AD0 : A0 08                LDY #$8
     765/    8AD2 :                      .loop:
     766/    8AD2 : B9 88 00             LDA R_ans,Y
     767/    8AD5 : D9 00 89             CMP test_buff,Y
     768/    8AD8 : D0 05                BNE .failed
     769/    8ADA : 88                   DEY
     770/    8ADB : D0 F5                BNE .loop
     771/    8ADD : 18                   CLC
     772/    8ADE : 60                   RTS
     773/    8ADF :                      .failed:
     774/    8ADF : 38                   SEC
     775/    8AE0 : 60                   RTS
     776/    8AE1 :                      
     777/    8AE1 :                     TestFail:
     778/    8AE1 :                      .loop:
     779/    8AE1 : 4C EC 8A             JMP .._401.str_skip
     780/    8AE4 :                      .._401.str_addr:
     781/    8AE4 : 5C 72 54 65 73 74    FCB "\\rTest ",$0
                    20 00             
     782/    8AEC :                      .._401.str_skip:
     783/    8AEC : A9 E4                LDA # (.._401.str_addr) # $100
     784/    8AEE : 85 04                STA $4 ;DebugText.msg
     785/    8AF0 : A9 8A                LDA # (.._401.str_addr)/$100
     786/    8AF2 : 85 05                STA $5 ;DebugText.msg
     787/    8AF4 : 20 00 D0             JSR DebugText
     788/    8AF7 : AE 77 01             LDX test_count+$1
     789/    8AFA : AD 76 01             LDA test_count
     790/    8AFD : 8D EA FF             STA $FFEA
     791/    8B00 : 4C 0F 8B             JMP .._421.str_skip
     792/    8B03 :                      .._421.str_addr:
     793/    8B03 : 3A 20 46 41 49 4C    FCB ": FAILED!\\n",$0
                    45 44 21 5C 6E 00 
     794/    8B0F :                      .._421.str_skip:
     795/    8B0F : A9 03                LDA # (.._421.str_addr) # $100
     796/    8B11 : 85 04                STA $4 ;DebugText.msg
     797/    8B13 : A9 8B                LDA # (.._421.str_addr)/$100
     798/    8B15 : 85 05                STA $5 ;DebugText.msg
     799/    8B17 : 20 00 D0             JSR DebugText
     800/    8B1A : 4C 2B 8B             JMP .._441.str_skip
     801/    8B1D :                      .._441.str_addr:
     802/    8B1D : 20 20 20 45 78 70    FCB "   Expected: ",$0
                    65 63 74 65 64 3A 
                    20 00             
     803/    8B2B :                      .._441.str_skip:
     804/    8B2B : A9 1D                LDA # (.._441.str_addr) # $100
     805/    8B2D : 85 04                STA $4 ;DebugText.msg
     806/    8B2F : A9 8B                LDA # (.._441.str_addr)/$100
     807/    8B31 : 85 05                STA $5 ;DebugText.msg
     808/    8B33 : 20 00 D0             JSR DebugText
     809/    8B36 : A5 20                LDA dummy
     810/    8B38 : 85 04                STA $4 ;DebugText.msg
     811/    8B3A : A5 21                LDA dummy+$1
     812/    8B3C : 85 05                STA $5 ;DebugText.msg
     813/    8B3E : 20 00 D0             JSR DebugText
     814/    8B41 : 4C 54 8B             JMP .._482.str_skip
     815/    8B44 :                      .._482.str_addr:
     816/    8B44 : 5C 6E 20 20 20 46    FCB "\\n   Found:    ",$0
                    6F 75 6E 64 3A 20 
                    20 20 20 00       
     817/    8B54 :                      .._482.str_skip:
     818/    8B54 : A9 44                LDA # (.._482.str_addr) # $100
     819/    8B56 : 85 04                STA $4 ;DebugText.msg
     820/    8B58 : A9 8B                LDA # (.._482.str_addr)/$100
     821/    8B5A : 85 05                STA $5 ;DebugText.msg
     822/    8B5C : 20 00 D0             JSR DebugText
     823/    8B5F : 20 91 8A             JSR DebugBuff
     824/    8B62 : 4C 6A 8B             JMP .._504.str_skip
     825/    8B65 :                      .._504.str_addr:
     826/    8B65 : 5C 6E 5C 6E 00       FCB "\\n\\n",$0
     827/    8B6A :                      .._504.str_skip:
     828/    8B6A : A9 65                LDA # (.._504.str_addr) # $100
     829/    8B6C : 85 04                STA $4 ;DebugText.msg
     830/    8B6E : A9 8B                LDA # (.._504.str_addr)/$100
     831/    8B70 : 85 05                STA $5 ;DebugText.msg
     832/    8B72 : 20 00 D0             JSR DebugText
     833/    8B75 : 00                   BRK
     834/    8B76 : 00                   BRK
     835/    8B77 : 4C E1 8A             JMP .loop
     836/    8B7A : 60                   RTS
     837/    8B7B :                      
     838/    8B7B :                     TestsPassed:
     839/    8B7B : 4C 86 8B             JMP .._530.str_skip
     840/    8B7E :                      .._530.str_addr:
     841/    8B7E : 5C 67 54 65 73 74    FCB "\\gTest ",$0
                    20 00             
     842/    8B86 :                      .._530.str_skip:
     843/    8B86 : A9 7E                LDA # (.._530.str_addr) # $100
     844/    8B88 : 85 04                STA $4 ;DebugText.msg
     845/    8B8A : A9 8B                LDA # (.._530.str_addr)/$100
     846/    8B8C : 85 05                STA $5 ;DebugText.msg
     847/    8B8E : 20 00 D0             JSR DebugText
     848/    8B91 : AE 77 01             LDX test_count+$1
     849/    8B94 : AD 76 01             LDA test_count
     850/    8B97 : 8D EA FF             STA $FFEA
     851/    8B9A : 4C A9 8B             JMP .._549.str_skip
     852/    8B9D :                      .._549.str_addr:
     853/    8B9D : 3A 20 70 61 73 73    FCB ": passed - ",$0
                    65 64 20 2D 20 00 
     854/    8BA9 :                      .._549.str_skip:
     855/    8BA9 : A9 9D                LDA # (.._549.str_addr) # $100
     856/    8BAB : 85 04                STA $4 ;DebugText.msg
     857/    8BAD : A9 8B                LDA # (.._549.str_addr)/$100
     858/    8BAF : 85 05                STA $5 ;DebugText.msg
     859/    8BB1 : 20 00 D0             JSR DebugText
     860/    8BB4 : 20 63 8A             JSR DebugRans
     861/    8BB7 : 4C BD 8B             JMP .._570.str_skip
     862/    8BBA :                      .._570.str_addr:
     863/    8BBA : 5C 6E 00             FCB "\\n",$0
     864/    8BBD :                      .._570.str_skip:
     865/    8BBD : A9 BA                LDA # (.._570.str_addr) # $100
     866/    8BBF : 85 04                STA $4 ;DebugText.msg
     867/    8BC1 : A9 8B                LDA # (.._570.str_addr)/$100
     868/    8BC3 : 85 05                STA $5 ;DebugText.msg
     869/    8BC5 : 20 00 D0             JSR DebugText
     870/    8BC8 : EE 76 01             INC test_count
     871/    8BCB : D0 03                BNE .._586.no_carry
     872/    8BCD : EE 77 01             INC test_count+$1
     873/    8BD0 :                      .._586.no_carry:
     874/    8BD0 : 60                   RTS
     875/    8BD1 :                      
     876/    8BD1 :                     AddTest:
     877/    8BD1 : A5 20                LDA dummy
     878/    8BD3 : 85 20                STA dummy
     879/    8BD5 : A5 21                LDA dummy+$1
     880/    8BD7 : 85 21                STA dummy+$1
     881/    8BD9 : 20 4F 8A             JSR CopyNew
     882/    8BDC : A9 42                LDA # (R1) # $100
     883/    8BDE : 85 04                STA $4 ;NewToR.Rx
     884/    8BE0 : A9 00                LDA # (R1)/$100
     885/    8BE2 : 85 05                STA $5 ;NewToR.Rx
     886/    8BE4 : 20 42 8A             JSR NewToR
     887/    8BE7 : A5 20                LDA dummy
     888/    8BE9 : 85 20                STA dummy
     889/    8BEB : A5 21                LDA dummy+$1
     890/    8BED : 85 21                STA dummy+$1
     891/    8BEF : 20 4F 8A             JSR CopyNew
     892/    8BF2 : A9 38                LDA # (R0) # $100
     893/    8BF4 : 85 04                STA $4 ;NewToR.Rx
     894/    8BF6 : A9 00                LDA # (R0)/$100
     895/    8BF8 : 85 05                STA $5 ;NewToR.Rx
     896/    8BFA : 20 42 8A             JSR NewToR
     897/    8BFD : 20 9F 0E             JSR BCD_Add
     898/    8C00 : 20 C2 8A             JSR RansToBuff
     899/    8C03 : A5 20                LDA dummy
     900/    8C05 : 85 20                STA dummy
     901/    8C07 : A5 21                LDA dummy+$1
     902/    8C09 : 85 21                STA dummy+$1
     903/    8C0B : 20 4F 8A             JSR CopyNew
     904/    8C0E : 20 D0 8A             JSR CompareRans
     905/    8C11 : 90 0B                BCC .done
     906/    8C13 : A5 20                LDA dummy
     907/    8C15 : 85 20                STA dummy
     908/    8C17 : A5 21                LDA dummy+$1
     909/    8C19 : 85 21                STA dummy+$1
     910/    8C1B : 20 E1 8A             JSR TestFail
     911/    8C1E :                      .done:
     912/    8C1E : 20 7B 8B             JSR TestsPassed
     913/    8C21 : 60                   RTS
     914/    8C22 :                      
     915/    8C22 :                     MultTest:
     916/    8C22 : A5 20                LDA dummy
     917/    8C24 : 85 20                STA dummy
     918/    8C26 : A5 21                LDA dummy+$1
     919/    8C28 : 85 21                STA dummy+$1
     920/    8C2A : 20 4F 8A             JSR CopyNew
     921/    8C2D : A9 42                LDA # (R1) # $100
     922/    8C2F : 85 04                STA $4 ;NewToR.Rx
     923/    8C31 : A9 00                LDA # (R1)/$100
     924/    8C33 : 85 05                STA $5 ;NewToR.Rx
     925/    8C35 : 20 42 8A             JSR NewToR
     926/    8C38 : A5 20                LDA dummy
     927/    8C3A : 85 20                STA dummy
     928/    8C3C : A5 21                LDA dummy+$1
     929/    8C3E : 85 21                STA dummy+$1
     930/    8C40 : 20 4F 8A             JSR CopyNew
     931/    8C43 : A9 38                LDA # (R0) # $100
     932/    8C45 : 85 04                STA $4 ;NewToR.Rx
     933/    8C47 : A9 00                LDA # (R0)/$100
     934/    8C49 : 85 05                STA $5 ;NewToR.Rx
     935/    8C4B : 20 42 8A             JSR NewToR
     936/    8C4E : 20 86 0F             JSR BCD_Mult
     937/    8C51 : 20 C2 8A             JSR RansToBuff
     938/    8C54 : A5 20                LDA dummy
     939/    8C56 : 85 20                STA dummy
     940/    8C58 : A5 21                LDA dummy+$1
     941/    8C5A : 85 21                STA dummy+$1
     942/    8C5C : 20 4F 8A             JSR CopyNew
     943/    8C5F : 20 D0 8A             JSR CompareRans
     944/    8C62 : 90 0B                BCC .done
     945/    8C64 : A5 20                LDA dummy
     946/    8C66 : 85 20                STA dummy
     947/    8C68 : A5 21                LDA dummy+$1
     948/    8C6A : 85 21                STA dummy+$1
     949/    8C6C : 20 E1 8A             JSR TestFail
     950/    8C6F :                      .done:
     951/    8C6F : 20 7B 8B             JSR TestsPassed
     952/    8C72 : 60                   RTS
     953/    8C73 :                      
     954/    8C73 :                     DivTest:
     955/    8C73 : A5 20                LDA dummy
     956/    8C75 : 85 20                STA dummy
     957/    8C77 : A5 21                LDA dummy+$1
     958/    8C79 : 85 21                STA dummy+$1
     959/    8C7B : 20 4F 8A             JSR CopyNew
     960/    8C7E : A9 42                LDA # (R1) # $100
     961/    8C80 : 85 04                STA $4 ;NewToR.Rx
     962/    8C82 : A9 00                LDA # (R1)/$100
     963/    8C84 : 85 05                STA $5 ;NewToR.Rx
     964/    8C86 : 20 42 8A             JSR NewToR
     965/    8C89 : A5 20                LDA dummy
     966/    8C8B : 85 20                STA dummy
     967/    8C8D : A5 21                LDA dummy+$1
     968/    8C8F : 85 21                STA dummy+$1
     969/    8C91 : 20 4F 8A             JSR CopyNew
     970/    8C94 : A9 38                LDA # (R0) # $100
     971/    8C96 : 85 04                STA $4 ;NewToR.Rx
     972/    8C98 : A9 00                LDA # (R0)/$100
     973/    8C9A : 85 05                STA $5 ;NewToR.Rx
     974/    8C9C : 20 42 8A             JSR NewToR
     975/    8C9F : 20 33 10             JSR BCD_Div
     976/    8CA2 : 20 C2 8A             JSR RansToBuff
     977/    8CA5 : A5 20                LDA dummy
     978/    8CA7 : 85 20                STA dummy
     979/    8CA9 : A5 21                LDA dummy+$1
     980/    8CAB : 85 21                STA dummy+$1
     981/    8CAD : 20 4F 8A             JSR CopyNew
     982/    8CB0 : 20 D0 8A             JSR CompareRans
     983/    8CB3 : 90 0B                BCC .done
     984/    8CB5 : A5 20                LDA dummy
     985/    8CB7 : 85 20                STA dummy
     986/    8CB9 : A5 21                LDA dummy+$1
     987/    8CBB : 85 21                STA dummy+$1
     988/    8CBD : 20 E1 8A             JSR TestFail
     989/    8CC0 :                      .done:
     990/    8CC0 : 20 7B 8B             JSR TestsPassed
     991/    8CC3 : 60                   RTS
     992/    8CC4 :                      
     993/    8CC4 :                     tests:
     994/    8CC4 : A9 01                LDA #$1
     995/    8CC6 : 8D 76 01             STA test_count
     996/    8CC9 : A9 00                LDA #$0
     997/    8CCB : 8D 77 01             STA test_count+$1
     998/    8CCE : A9 F5                LDA #$F5
     999/    8CD0 : 8D 76 01             STA test_count
    1000/    8CD3 : A9 01                LDA #$1
    1001/    8CD5 : 8D 77 01             STA test_count+$1
    1002/    8CD8 : A9 59                LDA #$59
    1003/    8CDA : 8D 76 01             STA test_count
    1004/    8CDD : A9 02                LDA #$2
    1005/    8CDF : 8D 77 01             STA test_count+$1
    1006/    8CE2 : A9 BD                LDA #$BD
    1007/    8CE4 : 8D 76 01             STA test_count
    1008/    8CE7 : A9 02                LDA #$2
    1009/    8CE9 : 8D 77 01             STA test_count+$1
    1010/    8CEC : 4C 0D 8D             JMP .._1100.str_skip
    1011/    8CEF :                      .._1100.str_addr:
    1012/    8CEF : 5C 6E 5C 67 41 6C    FCB "\\n\\gAll specific tests passed",$0
                    6C 20 73 70 65 63 
                    69 66 69 63 20 74 
                    65 73 74 73 20 70 
                    61 73 73 65 64 00 
    1013/    8D0D :                      .._1100.str_skip:
    1014/    8D0D : A9 EF                LDA # (.._1100.str_addr) # $100
    1015/    8D0F : 85 04                STA $4 ;DebugText.msg
    1016/    8D11 : A9 8C                LDA # (.._1100.str_addr)/$100
    1017/    8D13 : 85 05                STA $5 ;DebugText.msg
    1018/    8D15 : 20 00 D0             JSR DebugText
    1019/    8D18 : A9 00                LDA #$0
    1020/    8D1A : 8D 76 01             STA test_count
    1021/    8D1D : A9 00                LDA #$0
    1022/    8D1F : 8D 77 01             STA test_count+$1
    1023/    8D22 : A9 FF                LDA #$FF
    1024/    8D24 : 8D 76 01             STA test_count
    1025/    8D27 : A9 FF                LDA #$FF
    1026/    8D29 : 8D 77 01             STA test_count+$1
    1027/    8D2C : 60                   RTS
    1028/    8D2D :                      
    1029/    8D2D :                     counter1:
    1030/    8D2D :                      DFS $2
    1031/    8D2F :                      
    1032/    8D2F :                     counter2:
    1033/    8D2F :                      DFS $2
    1034/    8D31 :                      
    1035/    8D31 :                     failed1:
    1036/    8D31 :                      DFS $2
    1037/    8D33 :                      
    1038/    8D33 :                     failed2:
    1039/    8D33 :                      DFS $2
    1040/    8D35 :                      
    1041/    8D35 :                     line_num:
    1042/    8D35 : 4C 3B 8D             JMP .._1143.str_skip
    1043/    8D38 :                      .._1143.str_addr:
    1044/    8D38 : 5C 6C 00             FCB "\\l",$0
    1045/    8D3B :                      .._1143.str_skip:
    1046/    8D3B : A9 38                LDA # (.._1143.str_addr) # $100
    1047/    8D3D : 85 04                STA $4 ;DebugText.msg
    1048/    8D3F : A9 8D                LDA # (.._1143.str_addr)/$100
    1049/    8D41 : 85 05                STA $5 ;DebugText.msg
    1050/    8D43 : 20 00 D0             JSR DebugText
    1051/    8D46 : A9 0D                LDA #$D
    1052/    8D48 : 8D E7 FF             STA $FFE7
    1053/    8D4B : AD 30 8D             LDA counter2+$1
    1054/    8D4E : 8D E8 FF             STA $FFE8
    1055/    8D51 : AD 2F 8D             LDA counter2
    1056/    8D54 : 8D E8 FF             STA $FFE8
    1057/    8D57 : AD 2E 8D             LDA counter1+$1
    1058/    8D5A : 8D E8 FF             STA $FFE8
    1059/    8D5D : AD 2D 8D             LDA counter1
    1060/    8D60 : 8D E8 FF             STA $FFE8
    1061/    8D63 : 60                   RTS
    1062/    8D64 :                      
    1063/    8D64 :                     inc_line:
    1064/    8D64 : EE 2D 8D             INC counter1
    1065/    8D67 : D0 10                BNE .carry_done
    1066/    8D69 : EE 2E 8D             INC counter1+$1
    1067/    8D6C : D0 0B                BNE .carry_done
    1068/    8D6E : 20 35 8D             JSR line_num
    1069/    8D71 : EE 2F 8D             INC counter2
    1070/    8D74 : D0 03                BNE .carry_done
    1071/    8D76 : EE 30 8D             INC counter2+$1
    1072/    8D79 :                      .carry_done:
    1073/    8D79 : 60                   RTS
    1074/    8D7A :                      
    1075/    8D7A :                     read_file_line:
    1076/    8D7A : 20 64 8D             JSR inc_line
    1077/    8D7D : A0 00                LDY #$0
    1078/    8D7F :                      .loop:
    1079/    8D7F : AD F0 FF             LDA $FFF0
    1080/    8D82 : F0 0B                BEQ .loop_done
    1081/    8D84 : C9 0A                CMP #$A
    1082/    8D86 : F0 07                BEQ .loop_done
    1083/    8D88 : 99 1A 08             STA new_word_buff,Y
    1084/    8D8B : C8                   INY
    1085/    8D8C : 4C 7F 8D             JMP .loop
    1086/    8D8F :                      .loop_done:
    1087/    8D8F : 8C 19 08             STY new_word_len
    1088/    8D92 : 20 EC 1A             JSR CheckData
    1089/    8D95 : 60                   RTS
    1090/    8D96 :                      
    1091/    8D96 :                     FileInputTest:
    1092/    8D96 : 20 7A 8D             JSR read_file_line
    1093/    8D99 : A0 00                LDY #$0
    1094/    8D9B :                      .check_loop:
    1095/    8D9B : AD F0 FF             LDA $FFF0
    1096/    8D9E : C9 41                CMP #$41
    1097/    8DA0 : B0 06                BCS .letter
    1098/    8DA2 : 38                   SEC
    1099/    8DA3 : E9 30                SBC #$30
    1100/    8DA5 : 4C AB 8D             JMP .letter_done
    1101/    8DA8 :                      .letter:
    1102/    8DA8 : 38                   SEC
    1103/    8DA9 : E9 37                SBC #$37
    1104/    8DAB :                      .letter_done:
    1105/    8DAB : 0A                   ASL
    1106/    8DAC : 0A                   ASL
    1107/    8DAD : 0A                   ASL
    1108/    8DAE : 0A                   ASL
    1109/    8DAF : 85 14                STA $14 ;value
    1110/    8DB1 : AD F0 FF             LDA $FFF0
    1111/    8DB4 : C9 41                CMP #$41
    1112/    8DB6 : B0 06                BCS .letter2
    1113/    8DB8 : 38                   SEC
    1114/    8DB9 : E9 30                SBC #$30
    1115/    8DBB : 4C C1 8D             JMP .letter_done2
    1116/    8DBE :                      .letter2:
    1117/    8DBE : 38                   SEC
    1118/    8DBF : E9 37                SBC #$37
    1119/    8DC1 :                      .letter_done2:
    1120/    8DC1 : 05 14                ORA $14 ;value
    1121/    8DC3 : 85 14                STA $14 ;value
    1122/    8DC5 : B9 88 00             LDA R_ans,Y
    1123/    8DC8 : C5 14                CMP $14 ;value
    1124/    8DCA : D0 0E                BNE .failed_input
    1125/    8DCC : C8                   INY
    1126/    8DCD : AD F0 FF             LDA $FFF0
    1127/    8DD0 : C9 0A                CMP #$A
    1128/    8DD2 : D0 03                BNE .continue
    1129/    8DD4 : 4C 59 8E             JMP .done
    1130/    8DD7 :                      .continue:
    1131/    8DD7 : 4C 9B 8D             JMP .check_loop
    1132/    8DDA :                      .failed_input:
    1133/    8DDA : 4C E9 8D             JMP .._1190.str_skip
    1134/    8DDD :                      .._1190.str_addr:
    1135/    8DDD : 5C 6E 5C 6E 5C 72    FCB "\\n\\n\\rLine ",$0
                    4C 69 6E 65 20 00 
    1136/    8DE9 :                      .._1190.str_skip:
    1137/    8DE9 : A9 DD                LDA # (.._1190.str_addr) # $100
    1138/    8DEB : 85 04                STA $4 ;DebugText.msg
    1139/    8DED : A9 8D                LDA # (.._1190.str_addr)/$100
    1140/    8DEF : 85 05                STA $5 ;DebugText.msg
    1141/    8DF1 : 20 00 D0             JSR DebugText
    1142/    8DF4 : AD 30 8D             LDA counter2+$1
    1143/    8DF7 : 8D E8 FF             STA $FFE8
    1144/    8DFA : AD 2F 8D             LDA counter2
    1145/    8DFD : 8D E8 FF             STA $FFE8
    1146/    8E00 : AD 2E 8D             LDA counter1+$1
    1147/    8E03 : 8D E8 FF             STA $FFE8
    1148/    8E06 : AD 2D 8D             LDA counter1
    1149/    8E09 : 8D E8 FF             STA $FFE8
    1150/    8E0C : 4C 1B 8E             JMP .._1210.str_skip
    1151/    8E0F :                      .._1210.str_addr:
    1152/    8E0F : 3A 20 46 41 49 4C    FCB ": FAILED!\\n",$0
                    45 44 21 5C 6E 00 
    1153/    8E1B :                      .._1210.str_skip:
    1154/    8E1B : A9 0F                LDA # (.._1210.str_addr) # $100
    1155/    8E1D : 85 04                STA $4 ;DebugText.msg
    1156/    8E1F : A9 8E                LDA # (.._1210.str_addr)/$100
    1157/    8E21 : 85 05                STA $5 ;DebugText.msg
    1158/    8E23 : 20 00 D0             JSR DebugText
    1159/    8E26 : 4C 37 8E             JMP .._1230.str_skip
    1160/    8E29 :                      .._1230.str_addr:
    1161/    8E29 : 20 20 20 46 6F 75    FCB "   Found:    ",$0
                    6E 64 3A 20 20 20 
                    20 00             
    1162/    8E37 :                      .._1230.str_skip:
    1163/    8E37 : A9 29                LDA # (.._1230.str_addr) # $100
    1164/    8E39 : 85 04                STA $4 ;DebugText.msg
    1165/    8E3B : A9 8E                LDA # (.._1230.str_addr)/$100
    1166/    8E3D : 85 05                STA $5 ;DebugText.msg
    1167/    8E3F : 20 00 D0             JSR DebugText
    1168/    8E42 : A0 00                LDY #$0
    1169/    8E44 :                      .fail_loop:
    1170/    8E44 : B9 88 00             LDA R_ans,Y
    1171/    8E47 : 8D E8 FF             STA $FFE8
    1172/    8E4A : A9 20                LDA #$20
    1173/    8E4C : 8D E7 FF             STA $FFE7
    1174/    8E4F : C8                   INY
    1175/    8E50 : C0 09                CPY #$9
    1176/    8E52 : D0 F0                BNE .fail_loop
    1177/    8E54 : 00                   BRK
    1178/    8E55 : 00                   BRK
    1179/    8E56 : 4C DA 8D             JMP .failed_input
    1180/    8E59 :                      .done:
    1181/    8E59 : 20 64 8D             JSR inc_line
    1182/    8E5C : EE 76 01             INC test_count
    1183/    8E5F : D0 03                BNE .._1250.no_carry
    1184/    8E61 : EE 77 01             INC test_count+$1
    1185/    8E64 :                      .._1250.no_carry:
    1186/    8E64 : 60                   RTS
    1187/    8E65 :                      
    1188/    8E65 :                     read2:
    1189/    8E65 : 20 7A 8D             JSR read_file_line
    1190/    8E68 : A9 42                LDA # (R1) # $100
    1191/    8E6A : 85 04                STA $4 ;NewToR.Rx
    1192/    8E6C : A9 00                LDA # (R1)/$100
    1193/    8E6E : 85 05                STA $5 ;NewToR.Rx
    1194/    8E70 : 20 42 8A             JSR NewToR
    1195/    8E73 : 20 7A 8D             JSR read_file_line
    1196/    8E76 : A9 38                LDA # (R0) # $100
    1197/    8E78 : 85 04                STA $4 ;NewToR.Rx
    1198/    8E7A : A9 00                LDA # (R0)/$100
    1199/    8E7C : 85 05                STA $5 ;NewToR.Rx
    1200/    8E7E : 20 42 8A             JSR NewToR
    1201/    8E81 : 60                   RTS
    1202/    8E82 :                      
    1203/    8E82 :                     file_tests:
    1204/    8E82 : A9 00                LDA #$0
    1205/    8E84 : 8D 2D 8D             STA counter1
    1206/    8E87 : A9 00                LDA #$0
    1207/    8E89 : 8D 2E 8D             STA counter1+$1
    1208/    8E8C : A9 00                LDA #$0
    1209/    8E8E : 8D 2F 8D             STA counter2
    1210/    8E91 : A9 00                LDA #$0
    1211/    8E93 : 8D 30 8D             STA counter2+$1
    1212/    8E96 : A9 00                LDA #$0
    1213/    8E98 : 8D 31 8D             STA failed1
    1214/    8E9B : A9 00                LDA #$0
    1215/    8E9D : 8D 32 8D             STA failed1+$1
    1216/    8EA0 : A9 00                LDA #$0
    1217/    8EA2 : 8D 33 8D             STA failed2
    1218/    8EA5 : A9 00                LDA #$0
    1219/    8EA7 : 8D 34 8D             STA failed2+$1
    1220/    8EAA : A9 00                LDA #$0
    1221/    8EAC : 8D 76 01             STA test_count
    1222/    8EAF : A9 00                LDA #$0
    1223/    8EB1 : 8D 77 01             STA test_count+$1
    1224/    8EB4 : 4C DA 8E             JMP .._1346.str_skip
    1225/    8EB7 :                      .._1346.str_addr:
    1226/    8EB7 : 5C 6E 5C 6E 5C 6C    FCB "\\n\\n\\lBeginning file-based tests\\n",$0
                    42 65 67 69 6E 6E 
                    69 6E 67 20 66 69 
                    6C 65 2D 62 61 73 
                    65 64 20 74 65 73 
                    74 73 5C 6E 00    
    1227/    8EDA :                      .._1346.str_skip:
    1228/    8EDA : A9 B7                LDA # (.._1346.str_addr) # $100
    1229/    8EDC : 85 04                STA $4 ;DebugText.msg
    1230/    8EDE : A9 8E                LDA # (.._1346.str_addr)/$100
    1231/    8EE0 : 85 05                STA $5 ;DebugText.msg
    1232/    8EE2 : 20 00 D0             JSR DebugText
    1233/    8EE5 :                      .loop:
    1234/    8EE5 : 20 64 8D             JSR inc_line
    1235/    8EE8 : AD F0 FF             LDA $FFF0
    1236/    8EEB : D0 03                BNE .._1364.skip
    1237/    8EED : 4C B1 8F             JMP .done
    1238/    8EF0 :                      .._1364.skip:
    1239/    8EF0 : C9 49                CMP #$49
    1240/    8EF2 : D0 09                BNE .not_I
    1241/    8EF4 : AD F0 FF             LDA $FFF0
    1242/    8EF7 : 20 96 8D             JSR FileInputTest
    1243/    8EFA : 4C E5 8E             JMP .loop
    1244/    8EFD :                      .not_I:
    1245/    8EFD : C9 41                CMP #$41
    1246/    8EFF : D0 17                BNE .not_A
    1247/    8F01 : AD F0 FF             LDA $FFF0
    1248/    8F04 : 20 65 8E             JSR read2
    1249/    8F07 : 20 9F 0E             JSR BCD_Add
    1250/    8F0A : 20 C2 8A             JSR RansToBuff
    1251/    8F0D : 20 7A 8D             JSR read_file_line
    1252/    8F10 : 20 D0 8A             JSR CompareRans
    1253/    8F13 : 90 D0                BCC .loop
    1254/    8F15 : 4C 75 90             JMP .failed
    1255/    8F18 :                      .not_A:
    1256/    8F18 : C9 4D                CMP #$4D
    1257/    8F1A : D0 17                BNE .not_M
    1258/    8F1C : AD F0 FF             LDA $FFF0
    1259/    8F1F : 20 65 8E             JSR read2
    1260/    8F22 : 20 86 0F             JSR BCD_Mult
    1261/    8F25 : 20 C2 8A             JSR RansToBuff
    1262/    8F28 : 20 7A 8D             JSR read_file_line
    1263/    8F2B : 20 D0 8A             JSR CompareRans
    1264/    8F2E : 90 B5                BCC .loop
    1265/    8F30 : 4C 75 90             JMP .failed
    1266/    8F33 :                      .not_M:
    1267/    8F33 : C9 3B                CMP #$3B
    1268/    8F35 : D0 0D                BNE .not_comment
    1269/    8F37 :                      .loop_comment:
    1270/    8F37 : AD F0 FF             LDA $FFF0
    1271/    8F3A : F0 06                BEQ .file_end
    1272/    8F3C : C9 0A                CMP #$A
    1273/    8F3E : F0 A5                BEQ .loop
    1274/    8F40 : D0 F5                BNE .loop_comment
    1275/    8F42 :                      .file_end:
    1276/    8F42 : 00                   BRK
    1277/    8F43 : 00                   BRK
    1278/    8F44 :                      .not_comment:
    1279/    8F44 : C9 0A                CMP #$A
    1280/    8F46 : D0 03                BNE .not_newline
    1281/    8F48 : 4C E5 8E             JMP .loop
    1282/    8F4B :                      .not_newline:
    1283/    8F4B : C9 5A                CMP #$5A
    1284/    8F4D : D0 03                BNE .not_Z
    1285/    8F4F : 4C B1 8F             JMP .done
    1286/    8F52 :                      .not_Z:
    1287/    8F52 : 48                   PHA
    1288/    8F53 : 4C 75 8F             JMP .._1391.str_skip
    1289/    8F56 :                      .._1391.str_addr:
    1290/    8F56 : 5C 6E 5C 72 55 6E    FCB "\\n\\rUnrecognized input code: $",$0
                    72 65 63 6F 67 6E 
                    69 7A 65 64 20 69 
                    6E 70 75 74 20 63 
                    6F 64 65 3A 20 24 
                    00                
    1291/    8F75 :                      .._1391.str_skip:
    1292/    8F75 : A9 56                LDA # (.._1391.str_addr) # $100
    1293/    8F77 : 85 04                STA $4 ;DebugText.msg
    1294/    8F79 : A9 8F                LDA # (.._1391.str_addr)/$100
    1295/    8F7B : 85 05                STA $5 ;DebugText.msg
    1296/    8F7D : 20 00 D0             JSR DebugText
    1297/    8F80 : 68                   PLA
    1298/    8F81 : 8D E8 FF             STA $FFE8
    1299/    8F84 : 4C 8C 8F             JMP .._1410.str_skip
    1300/    8F87 :                      .._1410.str_addr:
    1301/    8F87 : 5C 6E 5C 6C 00       FCB "\\n\\l",$0
    1302/    8F8C :                      .._1410.str_skip:
    1303/    8F8C : A9 87                LDA # (.._1410.str_addr) # $100
    1304/    8F8E : 85 04                STA $4 ;DebugText.msg
    1305/    8F90 : A9 8F                LDA # (.._1410.str_addr)/$100
    1306/    8F92 : 85 05                STA $5 ;DebugText.msg
    1307/    8F94 : 20 00 D0             JSR DebugText
    1308/    8F97 : AD 30 8D             LDA counter2+$1
    1309/    8F9A : 8D E8 FF             STA $FFE8
    1310/    8F9D : AD 2F 8D             LDA counter2
    1311/    8FA0 : 8D E8 FF             STA $FFE8
    1312/    8FA3 : AD 2E 8D             LDA counter1+$1
    1313/    8FA6 : 8D E8 FF             STA $FFE8
    1314/    8FA9 : AD 2D 8D             LDA counter1
    1315/    8FAC : 8D E8 FF             STA $FFE8
    1316/    8FAF : 00                   BRK
    1317/    8FB0 : 00                   BRK
    1318/    8FB1 :                      .done:
    1319/    8FB1 : AD 31 8D             LDA failed1
    1320/    8FB4 : 0D 32 8D             ORA failed1+$1
    1321/    8FB7 : 0D 33 8D             ORA failed2
    1322/    8FBA : 0D 34 8D             ORA failed2+$1
    1323/    8FBD : D0 34                BNE .some_failed
    1324/    8FBF : 4C E5 8F             JMP .._1430.str_skip
    1325/    8FC2 :                      .._1430.str_addr:
    1326/    8FC2 : 5C 6E 5C 6E 5C 67    FCB "\\n\\n\\gAll filed-based tests passed",$0
                    41 6C 6C 20 66 69 
                    6C 65 64 2D 62 61 
                    73 65 64 20 74 65 
                    73 74 73 20 70 61 
                    73 73 65 64 00    
    1327/    8FE5 :                      .._1430.str_skip:
    1328/    8FE5 : A9 C2                LDA # (.._1430.str_addr) # $100
    1329/    8FE7 : 85 04                STA $4 ;DebugText.msg
    1330/    8FE9 : A9 8F                LDA # (.._1430.str_addr)/$100
    1331/    8FEB : 85 05                STA $5 ;DebugText.msg
    1332/    8FED : 20 00 D0             JSR DebugText
    1333/    8FF0 : 4C 39 90             JMP .failed_done
    1334/    8FF3 :                      .some_failed:
    1335/    8FF3 : 4C 16 90             JMP .._1449.str_skip
    1336/    8FF6 :                      .._1449.str_addr:
    1337/    8FF6 : 5C 6E 5C 6E 5C 72    FCB "\\n\\n\\rFile-based tests failed: ",$0
                    46 69 6C 65 2D 62 
                    61 73 65 64 20 74 
                    65 73 74 73 20 66 
                    61 69 6C 65 64 3A 
                    20 00             
    1338/    9016 :                      .._1449.str_skip:
    1339/    9016 : A9 F6                LDA # (.._1449.str_addr) # $100
    1340/    9018 : 85 04                STA $4 ;DebugText.msg
    1341/    901A : A9 8F                LDA # (.._1449.str_addr)/$100
    1342/    901C : 85 05                STA $5 ;DebugText.msg
    1343/    901E : 20 00 D0             JSR DebugText
    1344/    9021 : AD 34 8D             LDA failed2+$1
    1345/    9024 : 8D E8 FF             STA $FFE8
    1346/    9027 : AD 33 8D             LDA failed2
    1347/    902A : 8D E8 FF             STA $FFE8
    1348/    902D : AD 32 8D             LDA failed1+$1
    1349/    9030 : 8D E8 FF             STA $FFE8
    1350/    9033 : AD 31 8D             LDA failed1
    1351/    9036 : 8D E8 FF             STA $FFE8
    1352/    9039 :                      .failed_done:
    1353/    9039 : 4C 4E 90             JMP .._1468.str_skip
    1354/    903C :                      .._1468.str_addr:
    1355/    903C : 5C 6E 5C 6C 54 6F    FCB "\\n\\lTotal lines: ",$0
                    74 61 6C 20 6C 69 
                    6E 65 73 3A 20 00 
    1356/    904E :                      .._1468.str_skip:
    1357/    904E : A9 3C                LDA # (.._1468.str_addr) # $100
    1358/    9050 : 85 04                STA $4 ;DebugText.msg
    1359/    9052 : A9 90                LDA # (.._1468.str_addr)/$100
    1360/    9054 : 85 05                STA $5 ;DebugText.msg
    1361/    9056 : 20 00 D0             JSR DebugText
    1362/    9059 : AD 30 8D             LDA counter2+$1
    1363/    905C : 8D E8 FF             STA $FFE8
    1364/    905F : AD 2F 8D             LDA counter2
    1365/    9062 : 8D E8 FF             STA $FFE8
    1366/    9065 : AD 2E 8D             LDA counter1+$1
    1367/    9068 : 8D E8 FF             STA $FFE8
    1368/    906B : AD 2D 8D             LDA counter1
    1369/    906E : 8D E8 FF             STA $FFE8
    1370/    9071 : 8D F1 FF             STA $FFF1
    1371/    9074 : 60                   RTS
    1372/    9075 :                      .failed:
    1373/    9075 : EE 31 8D             INC failed1
    1374/    9078 : D0 0D                BNE .failed_carry_done
    1375/    907A : EE 32 8D             INC failed1+$1
    1376/    907D : D0 08                BNE .failed_carry_done
    1377/    907F : EE 33 8D             INC failed2
    1378/    9082 : D0 03                BNE .failed_carry_done
    1379/    9084 : EE 34 8D             INC failed2+$1
    1380/    9087 :                      .failed_carry_done:
    1381/    9087 :                      .fail_loop:
    1382/    9087 : 4C 96 90             JMP .._1487.str_skip
    1383/    908A :                      .._1487.str_addr:
    1384/    908A : 5C 6E 5C 6E 5C 72    FCB "\\n\\n\\rLine ",$0
                    4C 69 6E 65 20 00 
    1385/    9096 :                      .._1487.str_skip:
    1386/    9096 : A9 8A                LDA # (.._1487.str_addr) # $100
    1387/    9098 : 85 04                STA $4 ;DebugText.msg
    1388/    909A : A9 90                LDA # (.._1487.str_addr)/$100
    1389/    909C : 85 05                STA $5 ;DebugText.msg
    1390/    909E : 20 00 D0             JSR DebugText
    1391/    90A1 : AD 30 8D             LDA counter2+$1
    1392/    90A4 : 8D E8 FF             STA $FFE8
    1393/    90A7 : AD 2F 8D             LDA counter2
    1394/    90AA : 8D E8 FF             STA $FFE8
    1395/    90AD : AD 2E 8D             LDA counter1+$1
    1396/    90B0 : 8D E8 FF             STA $FFE8
    1397/    90B3 : AD 2D 8D             LDA counter1
    1398/    90B6 : 8D E8 FF             STA $FFE8
    1399/    90B9 : 4C C8 90             JMP .._1506.str_skip
    1400/    90BC :                      .._1506.str_addr:
    1401/    90BC : 3A 20 46 41 49 4C    FCB ": FAILED!\\n",$0
                    45 44 21 5C 6E 00 
    1402/    90C8 :                      .._1506.str_skip:
    1403/    90C8 : A9 BC                LDA # (.._1506.str_addr) # $100
    1404/    90CA : 85 04                STA $4 ;DebugText.msg
    1405/    90CC : A9 90                LDA # (.._1506.str_addr)/$100
    1406/    90CE : 85 05                STA $5 ;DebugText.msg
    1407/    90D0 : 20 00 D0             JSR DebugText
    1408/    90D3 : 4C E4 90             JMP .._1525.str_skip
    1409/    90D6 :                      .._1525.str_addr:
    1410/    90D6 : 20 20 20 45 78 70    FCB "   Expected: ",$0
                    65 63 74 65 64 3A 
                    20 00             
    1411/    90E4 :                      .._1525.str_skip:
    1412/    90E4 : A9 D6                LDA # (.._1525.str_addr) # $100
    1413/    90E6 : 85 04                STA $4 ;DebugText.msg
    1414/    90E8 : A9 90                LDA # (.._1525.str_addr)/$100
    1415/    90EA : 85 05                STA $5 ;DebugText.msg
    1416/    90EC : 20 00 D0             JSR DebugText
    1417/    90EF : 20 63 8A             JSR DebugRans
    1418/    90F2 : 4C 05 91             JMP .._1546.str_skip
    1419/    90F5 :                      .._1546.str_addr:
    1420/    90F5 : 5C 6E 20 20 20 46    FCB "\\n   Found:    ",$0
                    6F 75 6E 64 3A 20 
                    20 20 20 00       
    1421/    9105 :                      .._1546.str_skip:
    1422/    9105 : A9 F5                LDA # (.._1546.str_addr) # $100
    1423/    9107 : 85 04                STA $4 ;DebugText.msg
    1424/    9109 : A9 90                LDA # (.._1546.str_addr)/$100
    1425/    910B : 85 05                STA $5 ;DebugText.msg
    1426/    910D : 20 00 D0             JSR DebugText
    1427/    9110 : A0 06                LDY #$6
    1428/    9112 :                      .floop:
    1429/    9112 : B9 00 89             LDA test_buff,Y
    1430/    9115 : 8D E8 FF             STA $FFE8
    1431/    9118 : 88                   DEY
    1432/    9119 : D0 F7                BNE .floop
    1433/    911B : A9 20                LDA #$20
    1434/    911D : 8D E7 FF             STA $FFE7
    1435/    9120 : 4C 25 91             JMP .._1565.str_skip
    1436/    9123 :                      .._1565.str_addr:
    1437/    9123 : 45 00                FCB "E",$0
    1438/    9125 :                      .._1565.str_skip:
    1439/    9125 : A9 23                LDA # (.._1565.str_addr) # $100
    1440/    9127 : 85 04                STA $4 ;DebugText.msg
    1441/    9129 : A9 91                LDA # (.._1565.str_addr)/$100
    1442/    912B : 85 05                STA $5 ;DebugText.msg
    1443/    912D : 20 00 D0             JSR DebugText
    1444/    9130 : AD 08 89             LDA test_buff+$8
    1445/    9133 : 8D E8 FF             STA $FFE8
    1446/    9136 : AD 07 89             LDA test_buff+$7
    1447/    9139 : 8D E8 FF             STA $FFE8
    1448/    913C : 00                   BRK
    1449/    913D : 00                   BRK
    1450/    913E : 4C 87 90             JMP .fail_loop
    1451/    9141 : 60                   RTS
    1452/    9142 :                      
    1453/    9142 :                     stats:
    1454/    9142 : 4C 5B 91             JMP .._1592.str_skip
    1455/    9145 :                      .._1592.str_addr:
    1456/    9145 : 5C 6E 5C 6E 5C 6C    FCB "\\n\\n\\lFree zp bytes: ",$0
                    46 72 65 65 20 7A 
                    70 20 62 79 74 65 
                    73 3A 20 00       
    1457/    915B :                      .._1592.str_skip:
    1458/    915B : A9 45                LDA # (.._1592.str_addr) # $100
    1459/    915D : 85 04                STA $4 ;DebugText.msg
    1460/    915F : A9 91                LDA # (.._1592.str_addr)/$100
    1461/    9161 : 85 05                STA $5 ;DebugText.msg
    1462/    9163 : 20 00 D0             JSR DebugText
    1463/    9166 : A9 0B                LDA # ($100- ( ($8+$3)*$9)-Regs_end)
    1464/    9168 : 8D E9 FF             STA $FFE9
    1465/    916B : 4C 84 91             JMP .._1611.str_skip
    1466/    916E :                      .._1611.str_addr:
    1467/    916E : 5C 6E 5C 6C 46 72    FCB "\\n\\lFree RIOT bytes: ",$0
                    65 65 20 52 49 4F 
                    54 20 62 79 74 65 
                    73 3A 20 00       
    1468/    9184 :                      .._1611.str_skip:
    1469/    9184 : A9 6E                LDA # (.._1611.str_addr) # $100
    1470/    9186 : 85 04                STA $4 ;DebugText.msg
    1471/    9188 : A9 91                LDA # (.._1611.str_addr)/$100
    1472/    918A : 85 05                STA $5 ;DebugText.msg
    1473/    918C : 20 00 D0             JSR DebugText
    1474/    918F : A9 0C                LDA # ($880-RIOT_mem_end)
    1475/    9191 : 8D E9 FF             STA $FFE9
    1476/    9194 : 4C 9A 91             JMP .._1630.str_skip
    1477/    9197 :                      .._1630.str_addr:
    1478/    9197 : 5C 6E 00             FCB "\\n",$0
    1479/    919A :                      .._1630.str_skip:
    1480/    919A : A9 97                LDA # (.._1630.str_addr) # $100
    1481/    919C : 85 04                STA $4 ;DebugText.msg
    1482/    919E : A9 91                LDA # (.._1630.str_addr)/$100
    1483/    91A0 : 85 05                STA $5 ;DebugText.msg
    1484/    91A2 : 20 00 D0             JSR DebugText
    1485/    91A5 : 60                   RTS
    1486/     900 :                      org $900
    1487/     900 :                      
    1488/     900 :                     code_begin:
    1489/     900 : 4C 76 2C             JMP main
    1490/     903 :                      
    1491/     903 :                     font_table:
    1492/     903 : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
    1493/     908 : 00 00 FA 00 00       FCB $0,$0,$FA,$0,$0
    1494/     90D : 00 C0 00 C0 00       FCB $0,$C0,$0,$C0,$0
    1495/     912 : 28 7C 28 7C 28       FCB $28,$7C,$28,$7C,$28
    1496/     917 : 5C 54 FE 54 74       FCB $5C,$54,$FE,$54,$74
    1497/     91C : 44 20 10 08 44       FCB $44,$20,$10,$8,$44
    1498/     921 : 0A 44 AA 92 6C       FCB $A,$44,$AA,$92,$6C
    1499/     926 : 00 00 C0 00 00       FCB $0,$0,$C0,$0,$0
    1500/     92B : 00 82 44 38 00       FCB $0,$82,$44,$38,$0
    1501/     930 : 00 38 44 82 00       FCB $0,$38,$44,$82,$0
    1502/     935 : 28 10 7C 10 28       FCB $28,$10,$7C,$10,$28
    1503/     93A : 10 10 7C 10 10       FCB $10,$10,$7C,$10,$10
    1504/     93F : 00 06 07 01 00       FCB $0,$6,$7,$1,$0
    1505/     944 : 10 10 10 10 10       FCB $10,$10,$10,$10,$10
    1506/     949 : 00 00 06 06 00       FCB $0,$0,$6,$6,$0
    1507/     94E : 10 10 54 10 10       FCB $10,$10,$54,$10,$10
    1508/     953 : FE A2 92 8A FE       FCB $FE,$A2,$92,$8A,$FE
    1509/     958 : 02 02 FE 82 82       FCB $2,$2,$FE,$82,$82
    1510/     95D : F2 92 92 92 9E       FCB $F2,$92,$92,$92,$9E
    1511/     962 : FE 92 92 92 92       FCB $FE,$92,$92,$92,$92
    1512/     967 : FE 10 10 10 F0       FCB $FE,$10,$10,$10,$F0
    1513/     96C : 9E 92 92 92 F2       FCB $9E,$92,$92,$92,$F2
    1514/     971 : 9E 92 92 92 FE       FCB $9E,$92,$92,$92,$FE
    1515/     976 : FE 80 80 80 80       FCB $FE,$80,$80,$80,$80
    1516/     97B : FE 92 92 92 FE       FCB $FE,$92,$92,$92,$FE
    1517/     980 : FE 92 92 92 F2       FCB $FE,$92,$92,$92,$F2
    1518/     985 : 00 00 6C 6C 00       FCB $0,$0,$6C,$6C,$0
    1519/     98A : 00 6C 6E 02 00       FCB $0,$6C,$6E,$2,$0
    1520/     98F : 00 44 28 10 00       FCB $0,$44,$28,$10,$0
    1521/     994 : 28 28 28 28 28       FCB $28,$28,$28,$28,$28
    1522/     999 : 00 10 28 44 00       FCB $0,$10,$28,$44,$0
    1523/     99E : 60 90 8A 80 60       FCB $60,$90,$8A,$80,$60
    1524/     9A3 : 3C 42 5E 52 4C       FCB $3C,$42,$5E,$52,$4C
    1525/     9A8 : FE 90 90 90 FE       FCB $FE,$90,$90,$90,$FE
    1526/     9AD : 6C 92 92 92 FE       FCB $6C,$92,$92,$92,$FE
    1527/     9B2 : 82 82 82 82 FE       FCB $82,$82,$82,$82,$FE
    1528/     9B7 : 7C 82 82 82 FE       FCB $7C,$82,$82,$82,$FE
    1529/     9BC : 92 92 92 92 FE       FCB $92,$92,$92,$92,$FE
    1530/     9C1 : 90 90 90 90 FE       FCB $90,$90,$90,$90,$FE
    1531/     9C6 : 9E 92 92 82 FE       FCB $9E,$92,$92,$82,$FE
    1532/     9CB : FE 10 10 10 FE       FCB $FE,$10,$10,$10,$FE
    1533/     9D0 : 82 82 FE 82 82       FCB $82,$82,$FE,$82,$82
    1534/     9D5 : FE 02 02 02 0E       FCB $FE,$2,$2,$2,$E
    1535/     9DA : 82 44 28 10 FE       FCB $82,$44,$28,$10,$FE
    1536/     9DF : 02 02 02 02 FE       FCB $2,$2,$2,$2,$FE
    1537/     9E4 : FE 80 FE 80 FE       FCB $FE,$80,$FE,$80,$FE
    1538/     9E9 : FE 10 20 40 FE       FCB $FE,$10,$20,$40,$FE
    1539/     9EE : FE 82 82 82 FE       FCB $FE,$82,$82,$82,$FE
    1540/     9F3 : F0 90 90 90 FE       FCB $F0,$90,$90,$90,$FE
    1541/     9F8 : FA 84 8A 82 FE       FCB $FA,$84,$8A,$82,$FE
    1542/     9FD : 6E 90 90 90 FE       FCB $6E,$90,$90,$90,$FE
    1543/     A02 : 8C 92 92 92 62       FCB $8C,$92,$92,$92,$62
    1544/     A07 : 80 80 FE 80 80       FCB $80,$80,$FE,$80,$80
    1545/     A0C : FE 02 02 02 FE       FCB $FE,$2,$2,$2,$FE
    1546/     A11 : E0 18 06 18 E0       FCB $E0,$18,$6,$18,$E0
    1547/     A16 : F8 06 18 06 F8       FCB $F8,$6,$18,$6,$F8
    1548/     A1B : C6 28 10 28 C6       FCB $C6,$28,$10,$28,$C6
    1549/     A20 : C0 20 1E 20 C0       FCB $C0,$20,$1E,$20,$C0
    1550/     A25 : C2 A2 92 8A 86       FCB $C2,$A2,$92,$8A,$86
    1551/     A2A : 00 82 82 FE 00       FCB $0,$82,$82,$FE,$0
    1552/     A2F : 04 08 10 20 40       FCB $4,$8,$10,$20,$40
    1553/     A34 : 00 FE 82 82 00       FCB $0,$FE,$82,$82,$0
    1554/     A39 : 20 40 80 40 20       FCB $20,$40,$80,$40,$20
    1555/     A3E : 01 01 01 01 01       FCB $1,$1,$1,$1,$1
    1556/     A43 : 00 00 40 80 00       FCB $0,$0,$40,$80,$0
    1557/     A48 : 00 FE 7C 38 10       FCB $0,$FE,$7C,$38,$10
    1558/     A4D : F0 F0 F0 F0 F0       FCB $F0,$F0,$F0,$F0,$F0
    1559/     A52 : 00 00 00 00 00       FCB $0,$0,$0,$0,$0
    1560/     A57 : 10 38 54 92 10       FCB $10,$38,$54,$92,$10
    1561/     A5C : 18 2A 2A 2A 1C       FCB $18,$2A,$2A,$2A,$1C
    1562/     A61 :                      
    1563/     A61 :                     setup:
    1564/     A61 : 78                   SEI
    1565/     A62 : D8                   CLD
    1566/     A63 : 68                   PLA
    1567/     A64 : 85 02                STA $2
    1568/     A66 : 68                   PLA
    1569/     A67 : 85 03                STA $3
    1570/     A69 : A9 00                LDA #$0
    1571/     A6B : 85 00                STA $0
    1572/     A6D : 85 01                STA $1
    1573/     A6F : A0 04                LDY #$4
    1574/     A71 :                      .loop_begin:
    1575/     A71 : A9 FF                LDA #$FF
    1576/     A73 :                      .loop:
    1577/     A73 : 91 00                STA ($0),Y
    1578/     A75 : C8                   INY
    1579/     A76 : D0 FB                BNE .loop
    1580/     A78 : E6 01                INC $1
    1581/     A7A : A5 01                LDA $1
    1582/     A7C : C9 09                CMP #$9
    1583/     A7E : D0 F1                BNE .loop_begin
    1584/     A80 : A2 2F                LDX #$2F
    1585/     A82 : 9A                   TXS
    1586/     A83 : A5 03                LDA $3
    1587/     A85 : 48                   PHA
    1588/     A86 : A5 02                LDA $2
    1589/     A88 : 48                   PHA
    1590/     A89 : A2 00                LDX #$0
    1591/     A8B : 8E 74 01             STX stack_count
    1592/     A8E : A9 00                LDA #$0
    1593/     A90 : 8D 73 01             STA font_inverted
    1594/     A93 : A9 03                LDA # (font_table) # $100
    1595/     A95 : 85 28                STA font_ptr
    1596/     A97 : A9 09                LDA # (font_table)/$100
    1597/     A99 : 85 29                STA font_ptr+$1
    1598/     A9B : A9 78                LDA #dict_begin # $100
    1599/     A9D : 85 2A                STA dict_ptr
    1600/     A9F : 85 2E                STA dict_save
    1601/     AA1 : A9 01                LDA #dict_begin/$100
    1602/     AA3 : 85 2B                STA dict_ptr+$1
    1603/     AA5 : 85 2F                STA dict_save+$1
    1604/     AA7 : A9 00                LDA #$0
    1605/     AA9 : 8D 78 01             STA dict_begin
    1606/     AAC : 8D 79 01             STA dict_begin+$1
    1607/     AAF : 8D 7A 01             STA dict_begin+$2
    1608/     AB2 : A9 40                LDA #$40
    1609/     AB4 : 8D 75 01             STA mode
    1610/     AB7 : A9 01                LDA #$1
    1611/     AB9 : 8D E1 FF             STA $FFE1
    1612/     ABC : A9 02                LDA #$2
    1613/     ABE : 8D E2 FF             STA $FFE2
    1614/     AC1 : 60                   RTS
    1615/     AC2 :                      
    1616/     AC2 :                     GfxSetup:
    1617/     AC2 : A9 04                LDA #$4
    1618/     AC4 : 8D E1 FF             STA $FFE1
    1619/     AC7 : A9 05                LDA #$5
    1620/     AC9 : 8D E2 FF             STA $FFE2
    1621/     ACC : 60                   RTS
    1622/     ACD :                      
    1623/     ACD :                     ReadKey:
    1624/     ACD : AD E4 FF             LDA $FFE4
    1625/     AD0 : 60                   RTS
    1626/     AD1 :                      
    1627/     AD1 :                     LCD_clrscr:
    1628/     AD1 : A9 00                LDA #$0
    1629/     AD3 : 85 26                STA screen_ptr
    1630/     AD5 : A9 40                LDA #$40
    1631/     AD7 : 85 27                STA screen_ptr+$1
    1632/     AD9 : A9 80                LDA #$80
    1633/     ADB : 85 08                STA $8 ;counter
    1634/     ADD : A9 2A                LDA #$2A
    1635/     ADF : A0 00                LDY #$0
    1636/     AE1 :                      .loop:
    1637/     AE1 : 91 26                STA (screen_ptr),Y
    1638/     AE3 : C8                   INY
    1639/     AE4 : D0 FB                BNE .loop
    1640/     AE6 : E6 27                INC screen_ptr+$1
    1641/     AE8 : C6 08                DEC $8 ;counter
    1642/     AEA : D0 F5                BNE .loop
    1643/     AEC : A9 00                LDA #$0
    1644/     AEE : 85 26                STA screen_ptr
    1645/     AF0 : A9 40                LDA #$40
    1646/     AF2 : 85 27                STA screen_ptr+$1
    1647/     AF4 : 60                   RTS
    1648/     AF5 :                      
    1649/     AF5 :                     LCD_char:
    1650/     AF5 : A5 10                LDA $10 ;c_out
    1651/     AF7 : C9 20                CMP #$20
    1652/     AF9 : 90 03                BCC .._1765.skip
    1653/     AFB : 4C FF 0A             JMP .if1
    1654/     AFE :                      .._1765.skip:
    1655/     AFE : 60                   RTS
    1656/     AFF :                      .if1:
    1657/     AFF : C9 66                CMP #$66
    1658/     B01 : B0 03                BCS .._1770.skip
    1659/     B03 : 4C 07 0B             JMP .if2
    1660/     B06 :                      .._1770.skip:
    1661/     B06 : 60                   RTS
    1662/     B07 :                      .if2:
    1663/     B07 : 38                   SEC
    1664/     B08 : E9 20                SBC #$20
    1665/     B0A : 85 11                STA $11 ;pixel_ptr
    1666/     B0C : A9 00                LDA #$0
    1667/     B0E : 85 12                STA $12 ;pixel_ptr
    1668/     B10 : A5 11                LDA $11 ;pixel_ptr
    1669/     B12 : 06 11                ASL $11 ;pixel_ptr
    1670/     B14 : 06 11                ASL $11 ;pixel_ptr
    1671/     B16 : 26 12                ROL $12 ;pixel_ptr
    1672/     B18 : 65 11                ADC $11 ;pixel_ptr
    1673/     B1A : 85 11                STA $11 ;pixel_ptr
    1674/     B1C : 90 02                BCC .no_C
    1675/     B1E : E6 12                INC $12 ;pixel_ptr
    1676/     B20 :                      .no_C:
    1677/     B20 : 18                   CLC
    1678/     B21 : A5 28                LDA font_ptr
    1679/     B23 : 65 11                ADC $11 ;pixel_ptr
    1680/     B25 : 85 11                STA $11 ;pixel_ptr
    1681/     B27 : A5 29                LDA font_ptr+$1
    1682/     B29 : 65 12                ADC $12 ;pixel_ptr
    1683/     B2B : 85 12                STA $12 ;pixel_ptr
    1684/     B2D : A9 05                LDA #$5
    1685/     B2F : 85 15                STA $15 ;lc1
    1686/     B31 : 85 13                STA $13 ;pixel_index
    1687/     B33 :                      .loop:
    1688/     B33 : A9 08                LDA #$8
    1689/     B35 : 85 16                STA $16 ;lc2
    1690/     B37 : C6 13                DEC $13 ;pixel_index
    1691/     B39 : A4 13                LDY $13 ;pixel_index
    1692/     B3B : B1 11                LDA ($11),Y ;pixel_ptr
    1693/     B3D : 4D 73 01             EOR font_inverted
    1694/     B40 : 85 14                STA $14 ;pixel
    1695/     B42 : A0 00                LDY #$0
    1696/     B44 :                      .loop.inner:
    1697/     B44 : 06 14                ASL $14 ;pixel
    1698/     B46 : A9 00                LDA #$0
    1699/     B48 : B0 02                BCS .color
    1700/     B4A : A9 2A                LDA #$2A
    1701/     B4C :                      .color:
    1702/     B4C : 91 26                STA (screen_ptr),Y
    1703/     B4E : C8                   INY
    1704/     B4F : 91 26                STA (screen_ptr),Y
    1705/     B51 : E6 27                INC screen_ptr+$1
    1706/     B53 : 91 26                STA (screen_ptr),Y
    1707/     B55 : 88                   DEY
    1708/     B56 : 91 26                STA (screen_ptr),Y
    1709/     B58 : E6 27                INC screen_ptr+$1
    1710/     B5A : C6 16                DEC $16 ;lc2
    1711/     B5C : D0 E6                BNE .loop.inner
    1712/     B5E : E6 26                INC screen_ptr
    1713/     B60 : E6 26                INC screen_ptr
    1714/     B62 : A5 27                LDA screen_ptr+$1
    1715/     B64 : 38                   SEC
    1716/     B65 : E9 10                SBC #$10
    1717/     B67 : 85 27                STA screen_ptr+$1
    1718/     B69 : C6 15                DEC $15 ;lc1
    1719/     B6B : D0 C6                BNE .loop
    1720/     B6D : A9 10                LDA #$10
    1721/     B6F : 85 15                STA $15 ;lc1
    1722/     B71 : A9 2A                LDA #$2A
    1723/     B73 : AC 73 01             LDY font_inverted
    1724/     B76 : F0 02                BEQ .no_inv
    1725/     B78 : A9 00                LDA #$0
    1726/     B7A :                      .no_inv:
    1727/     B7A : A0 00                LDY #$0
    1728/     B7C :                      .blank_loop:
    1729/     B7C : 91 26                STA (screen_ptr),Y
    1730/     B7E : C8                   INY
    1731/     B7F : 91 26                STA (screen_ptr),Y
    1732/     B81 : 88                   DEY
    1733/     B82 : E6 27                INC screen_ptr+$1
    1734/     B84 : C6 15                DEC $15 ;lc1
    1735/     B86 : D0 F4                BNE .blank_loop
    1736/     B88 : E6 26                INC screen_ptr
    1737/     B8A : E6 26                INC screen_ptr
    1738/     B8C : A5 27                LDA screen_ptr+$1
    1739/     B8E : 38                   SEC
    1740/     B8F : E9 10                SBC #$10
    1741/     B91 : 85 27                STA screen_ptr+$1
    1742/     B93 : 60                   RTS
    1743/     B94 :                      
    1744/     B94 :                     LCD_print:
    1745/     B94 : A9 00                LDA #$0
    1746/     B96 : 85 0A                STA $A ;index
    1747/     B98 :                      .loop:
    1748/     B98 : A4 0A                LDY $A ;index
    1749/     B9A : B1 08                LDA ($8),Y ;source
    1750/     B9C : F0 0E                BEQ .done
    1751/     B9E : 85 0B                STA $B ;arg
    1752/     BA0 : A5 0B                LDA $B ;arg
    1753/     BA2 : 85 10                STA $10 ;LCD_char.c_out
    1754/     BA4 : 20 F5 0A             JSR LCD_char
    1755/     BA7 : E6 0A                INC $A ;index
    1756/     BA9 : 4C 98 0B             JMP .loop
    1757/     BAC :                      .done:
    1758/     BAC : 60                   RTS
    1759/     BAD :                      
    1760/     BAD :                     MemCopy:
    1761/     BAD : A0 00                LDY #$0
    1762/     BAF :                      .loop:
    1763/     BAF : B1 0F                LDA ($F),Y ;source
    1764/     BB1 : 91 11                STA ($11),Y ;dest
    1765/     BB3 : C8                   INY
    1766/     BB4 : C4 13                CPY $13 ;count
    1767/     BB6 : D0 F7                BNE .loop
    1768/     BB8 : 60                   RTS
    1769/     BB9 :                      
    1770/     BB9 :                     hex_table:
    1771/     BB9 : 00 01 02 03 04 05    FCB $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$A,$B,$C,$D,$E,$F
                    06 07 08 09 10 11 
                    12 13 14 15 0A 0B 
                    0C 0D 0E 0F       
    1772/     BCF :                      
    1773/     BCF :                     BCD_Reverse:
    1774/     BCF : A0 00                LDY #$0
    1775/     BD1 : 08                   PHP
    1776/     BD2 : F8                   SED
    1777/     BD3 : 38                   SEC
    1778/     BD4 :                      .loop:
    1779/     BD4 : A9 00                LDA #$0
    1780/     BD6 : F1 11                SBC ($11),Y ;source
    1781/     BD8 : 91 11                STA ($11),Y ;source
    1782/     BDA : C8                   INY
    1783/     BDB : C6 13                DEC $13 ;count
    1784/     BDD : D0 F5                BNE .loop
    1785/     BDF : 28                   PLP
    1786/     BE0 : 60                   RTS
    1787/     BE1 :                      
    1788/     BE1 :                     BCD_RevExp:
    1789/     BE1 : 38                   SEC
    1790/     BE2 : A9 00                LDA #$0
    1791/     BE4 : F5 07                SBC $7,X
    1792/     BE6 : 95 07                STA $7,X
    1793/     BE8 : A9 00                LDA #$0
    1794/     BEA : F5 08                SBC $8,X
    1795/     BEC : 95 08                STA $8,X
    1796/     BEE : 60                   RTS
    1797/     BEF :                      
    1798/     BEF :                     BCD_RevSig:
    1799/     BEF : A0 07                LDY #$7
    1800/     BF1 : 38                   SEC
    1801/     BF2 :                      .loop:
    1802/     BF2 : A9 00                LDA #$0
    1803/     BF4 : F5 00                SBC $0,X
    1804/     BF6 : 95 00                STA $0,X
    1805/     BF8 : E8                   INX
    1806/     BF9 : 88                   DEY
    1807/     BFA : D0 F6                BNE .loop
    1808/     BFC : 60                   RTS
    1809/     BFD :                      
    1810/     BFD :                     ZeroReg:
    1811/     BFD : A0 09                LDY #$9
    1812/     BFF : A9 00                LDA #$0
    1813/     C01 :                      .loop:
    1814/     C01 : 95 01                STA $1,X
    1815/     C03 : E8                   INX
    1816/     C04 : 88                   DEY
    1817/     C05 : D0 FA                BNE .loop
    1818/     C07 : 60                   RTS
    1819/     C08 :                      
    1820/     C08 :                     MaxReg:
    1821/     C08 : A0 07                LDY #$7
    1822/     C0A : A9 99                LDA #$99
    1823/     C0C :                      .loop:
    1824/     C0C : 95 01                STA $1,X
    1825/     C0E : E8                   INX
    1826/     C0F : 88                   DEY
    1827/     C10 : D0 FA                BNE .loop
    1828/     C12 : A9 09                LDA #$9
    1829/     C14 : 0D 0D 08             ORA math_max
    1830/     C17 : 95 01                STA $1,X
    1831/     C19 : 60                   RTS
    1832/     C1A :                      
    1833/     C1A :                     IncRansExp:
    1834/     C1A : A5 8F                LDA R_ans+$7
    1835/     C1C : 18                   CLC
    1836/     C1D : 69 01                ADC #$1
    1837/     C1F : 85 8F                STA R_ans+$7
    1838/     C21 : A5 90                LDA R_ans+$8
    1839/     C23 : 69 00                ADC #$0
    1840/     C25 : 85 90                STA R_ans+$8
    1841/     C27 : 60                   RTS
    1842/     C28 :                      
    1843/     C28 :                     SwapR0R1:
    1844/     C28 : A2 01                LDX #$1
    1845/     C2A :                      .swap_loop:
    1846/     C2A : B5 38                LDA R0,X
    1847/     C2C : 48                   PHA
    1848/     C2D : B5 42                LDA R1,X
    1849/     C2F : 95 38                STA R0,X
    1850/     C31 : 68                   PLA
    1851/     C32 : 95 42                STA R1,X
    1852/     C34 : E8                   INX
    1853/     C35 : E0 0A                CPX #$A
    1854/     C37 : D0 F1                BNE .swap_loop
    1855/     C39 : 60                   RTS
    1856/     C3A :                      
    1857/     C3A :                     CopyRegs:
    1858/     C3A : 85 34                STA math_ptr1
    1859/     C3C : 84 36                STY math_ptr2
    1860/     C3E : A9 00                LDA #$0
    1861/     C40 : 85 35                STA math_ptr1+$1
    1862/     C42 : 85 37                STA math_ptr2+$1
    1863/     C44 : A0 01                LDY #$1
    1864/     C46 :                      .swap_loop:
    1865/     C46 : B1 34                LDA (math_ptr1),Y
    1866/     C48 : 91 36                STA (math_ptr2),Y
    1867/     C4A : C8                   INY
    1868/     C4B : C0 0A                CPY #$A
    1869/     C4D : D0 F7                BNE .swap_loop
    1870/     C4F : 60                   RTS
    1871/     C50 :                      
    1872/     C50 :                     TosR0R1:
    1873/     C50 : 8A                   TXA
    1874/     C51 : 48                   PHA
    1875/     C52 : A0 01                LDY #$1
    1876/     C54 :                      .loop:
    1877/     C54 : E8                   INX
    1878/     C55 : B5 00                LDA $0,X
    1879/     C57 : 99 38 00             STA R0,Y
    1880/     C5A : B5 09                LDA $9,X
    1881/     C5C : 99 42 00             STA R1,Y
    1882/     C5F : C8                   INY
    1883/     C60 : C0 09                CPY #$9
    1884/     C62 : D0 F0                BNE .loop
    1885/     C64 : 68                   PLA
    1886/     C65 : AA                   TAX
    1887/     C66 : 60                   RTS
    1888/     C67 :                      
    1889/     C67 :                     RansTos:
    1890/     C67 : 8A                   TXA
    1891/     C68 : 48                   PHA
    1892/     C69 : A9 01                LDA #$1
    1893/     C6B : 95 00                STA $0,X
    1894/     C6D : E8                   INX
    1895/     C6E : A0 01                LDY #$1
    1896/     C70 :                      .loop:
    1897/     C70 : B9 88 00             LDA R_ans,Y
    1898/     C73 : 95 00                STA $0,X
    1899/     C75 : E8                   INX
    1900/     C76 : C8                   INY
    1901/     C77 : C0 09                CPY #$9
    1902/     C79 : D0 F5                BNE .loop
    1903/     C7B : 68                   PLA
    1904/     C7C : AA                   TAX
    1905/     C7D : 60                   RTS
    1906/     C7E :                      
    1907/     C7E :                     HalfShift:
    1908/     C7E : 8C 0F 08             STY shift_counter
    1909/     C81 : A0 04                LDY #$4
    1910/     C83 :                      .half_loop:
    1911/     C83 : 56 06                LSR $6,X
    1912/     C85 : 76 05                ROR $5,X
    1913/     C87 : 76 04                ROR $4,X
    1914/     C89 : 76 03                ROR $3,X
    1915/     C8B : 76 02                ROR $2,X
    1916/     C8D : 76 01                ROR $1,X
    1917/     C8F : 76 00                ROR $0,X
    1918/     C91 : 88                   DEY
    1919/     C92 : D0 EF                BNE .half_loop
    1920/     C94 : 15 06                ORA $6,X
    1921/     C96 : 95 06                STA $6,X
    1922/     C98 : 60                   RTS
    1923/     C99 :                      
    1924/     C99 :                     HalfShiftForward:
    1925/     C99 : A0 04                LDY #$4
    1926/     C9B :                      .half_loop:
    1927/     C9B : 16 00                ASL $0,X
    1928/     C9D : 36 01                ROL $1,X
    1929/     C9F : 36 02                ROL $2,X
    1930/     CA1 : 36 03                ROL $3,X
    1931/     CA3 : 36 04                ROL $4,X
    1932/     CA5 : 36 05                ROL $5,X
    1933/     CA7 : 36 06                ROL $6,X
    1934/     CA9 : 88                   DEY
    1935/     CAA : D0 EF                BNE .half_loop
    1936/     CAC : 60                   RTS
    1937/     CAD :                      
    1938/     CAD :                     HalfShiftBackward:
    1939/     CAD : A0 04                LDY #$4
    1940/     CAF :                      .half_loop:
    1941/     CAF : 56 06                LSR $6,X
    1942/     CB1 : 76 05                ROR $5,X
    1943/     CB3 : 76 04                ROR $4,X
    1944/     CB5 : 76 03                ROR $3,X
    1945/     CB7 : 76 02                ROR $2,X
    1946/     CB9 : 76 01                ROR $1,X
    1947/     CBB : 88                   DEY
    1948/     CBC : D0 F1                BNE .half_loop
    1949/     CBE : 60                   RTS
    1950/     CBF :                      
    1951/     CBF :                     HalfShiftWide:
    1952/     CBF : A0 04                LDY #$4
    1953/     CC1 :                      .half_loop:
    1954/     CC1 : 56 0D                LSR $D,X
    1955/     CC3 : 76 0C                ROR $C,X
    1956/     CC5 : 76 0B                ROR $B,X
    1957/     CC7 : 76 0A                ROR $A,X
    1958/     CC9 : 76 09                ROR $9,X
    1959/     CCB : 76 08                ROR $8,X
    1960/     CCD : 76 07                ROR $7,X
    1961/     CCF : 76 06                ROR $6,X
    1962/     CD1 : 76 05                ROR $5,X
    1963/     CD3 : 76 04                ROR $4,X
    1964/     CD5 : 76 03                ROR $3,X
    1965/     CD7 : 76 02                ROR $2,X
    1966/     CD9 : 76 01                ROR $1,X
    1967/     CDB : 88                   DEY
    1968/     CDC : D0 E3                BNE .half_loop
    1969/     CDE : 60                   RTS
    1970/     CDF :                      
    1971/     CDF :                     HalfShiftWideForward:
    1972/     CDF : A0 04                LDY #$4
    1973/     CE1 :                      .half_loop:
    1974/     CE1 : 16 01                ASL $1,X
    1975/     CE3 : 36 02                ROL $2,X
    1976/     CE5 : 36 03                ROL $3,X
    1977/     CE7 : 36 04                ROL $4,X
    1978/     CE9 : 36 05                ROL $5,X
    1979/     CEB : 36 06                ROL $6,X
    1980/     CED : 36 07                ROL $7,X
    1981/     CEF : 36 08                ROL $8,X
    1982/     CF1 : 36 09                ROL $9,X
    1983/     CF3 : 36 0A                ROL $A,X
    1984/     CF5 : 36 0B                ROL $B,X
    1985/     CF7 : 36 0C                ROL $C,X
    1986/     CF9 : 88                   DEY
    1987/     CFA : D0 E5                BNE .half_loop
    1988/     CFC : 60                   RTS
    1989/     CFD :                      
    1990/     CFD :                     ShiftR0:
    1991/     CFD : A0 00                LDY #$0
    1992/     CFF : 8C 0E 08             STY math_fill
    1993/     D02 : A8                   TAY
    1994/     D03 : B9 B9 0B             LDA hex_table,Y
    1995/     D06 : 8D 07 08             STA math_a
    1996/     D09 : A8                   TAY
    1997/     D0A : 88                   DEY
    1998/     D0B : 88                   DEY
    1999/     D0C : 88                   DEY
    2000/     D0D : 30 15                BMI .sticky_done
    2001/     D0F : A2 39                LDX #R0+$1
    2002/     D11 :                      .sticky_loop:
    2003/     D11 : B5 00                LDA $0,X
    2004/     D13 : C0 00                CPY #$0
    2005/     D15 : D0 02                BNE .both_digits
    2006/     D17 : 29 0F                AND #$F
    2007/     D19 :                      .both_digits:
    2008/     D19 : 0D 0C 08             ORA math_sticky
    2009/     D1C : 8D 0C 08             STA math_sticky
    2010/     D1F : E8                   INX
    2011/     D20 : 88                   DEY
    2012/     D21 : 88                   DEY
    2013/     D22 : 10 ED                BPL .sticky_loop
    2014/     D24 :                      .sticky_done:
    2015/     D24 : AD 07 08             LDA math_a
    2016/     D27 :                      .CORDIC:
    2017/     D27 : 4A                   LSR
    2018/     D28 : 8D 07 08             STA math_a
    2019/     D2B : 90 0A                BCC .no_half_shift
    2020/     D2D : A2 38                LDX #R0
    2021/     D2F : AD 0E 08             LDA math_fill
    2022/     D32 : 29 F0                AND #$F0
    2023/     D34 : 20 7E 0C             JSR HalfShift
    2024/     D37 :                      .no_half_shift:
    2025/     D37 : AD 07 08             LDA math_a
    2026/     D3A : F0 2E                BEQ .done
    2027/     D3C : 48                   PHA
    2028/     D3D : A9 07                LDA #$7
    2029/     D3F : 38                   SEC
    2030/     D40 : ED 07 08             SBC math_a
    2031/     D43 : A8                   TAY
    2032/     D44 : A9 00                LDA #$0
    2033/     D46 : 8D 08 08             STA math_b
    2034/     D49 :                      .loop:
    2035/     D49 : AE 07 08             LDX math_a
    2036/     D4C : B5 38                LDA R0,X
    2037/     D4E : AE 08 08             LDX math_b
    2038/     D51 : 95 38                STA R0,X
    2039/     D53 : EE 07 08             INC math_a
    2040/     D56 : EE 08 08             INC math_b
    2041/     D59 : 88                   DEY
    2042/     D5A : D0 ED                BNE .loop
    2043/     D5C : AE 08 08             LDX math_b
    2044/     D5F : 68                   PLA
    2045/     D60 : A8                   TAY
    2046/     D61 : AD 0E 08             LDA math_fill
    2047/     D64 :                      .fill_loop:
    2048/     D64 : 95 38                STA R0,X
    2049/     D66 : E8                   INX
    2050/     D67 : 88                   DEY
    2051/     D68 : D0 FA                BNE .fill_loop
    2052/     D6A :                      .done:
    2053/     D6A : 60                   RTS
    2054/     D6B :                      
    2055/     D6B :                     NormRans:
    2056/     D6B : A0 06                LDY #$6
    2057/     D6D : A9 00                LDA #$0
    2058/     D6F : 8D 07 08             STA math_a
    2059/     D72 :                      .loop:
    2060/     D72 : B9 88 00             LDA R_ans,Y
    2061/     D75 : F0 09                BEQ .c2
    2062/     D77 : 29 F0                AND #$F0
    2063/     D79 : D0 0E                BNE .done
    2064/     D7B : EE 07 08             INC math_a
    2065/     D7E : D0 09                BNE .done
    2066/     D80 :                      .c2:
    2067/     D80 : EE 07 08             INC math_a
    2068/     D83 : EE 07 08             INC math_a
    2069/     D86 : 88                   DEY
    2070/     D87 : D0 E9                BNE .loop
    2071/     D89 :                      .done:
    2072/     D89 : AD 07 08             LDA math_a
    2073/     D8C : C9 0C                CMP #$C
    2074/     D8E : 90 09                BCC .not_0
    2075/     D90 : A9 00                LDA #$0
    2076/     D92 : 85 88                STA R_ans
    2077/     D94 : 85 90                STA R_ans+$9-$1
    2078/     D96 : 85 8F                STA R_ans+$9-$2
    2079/     D98 : 60                   RTS
    2080/     D99 :                      .not_0:
    2081/     D99 : AD 07 08             LDA math_a
    2082/     D9C : F0 51                BEQ .return
    2083/     D9E : 48                   PHA
    2084/     D9F : 4A                   LSR
    2085/     DA0 : 8D 07 08             STA math_a
    2086/     DA3 : 90 05                BCC .even_shift
    2087/     DA5 : A2 88                LDX #R_ans
    2088/     DA7 : 20 99 0C             JSR HalfShiftForward
    2089/     DAA :                      .even_shift:
    2090/     DAA : AD 07 08             LDA math_a
    2091/     DAD : F0 2A                BEQ .adjust_exp
    2092/     DAF : 48                   PHA
    2093/     DB0 : A9 06                LDA #$6
    2094/     DB2 : 8D 09 08             STA math_c
    2095/     DB5 : 38                   SEC
    2096/     DB6 : ED 07 08             SBC math_a
    2097/     DB9 : 8D 07 08             STA math_a
    2098/     DBC :                      .shift_loop:
    2099/     DBC : AE 07 08             LDX math_a
    2100/     DBF : B5 88                LDA R_ans,X
    2101/     DC1 : AE 09 08             LDX math_c
    2102/     DC4 : 95 88                STA R_ans,X
    2103/     DC6 : CE 09 08             DEC math_c
    2104/     DC9 : CE 07 08             DEC math_a
    2105/     DCC : 10 EE                BPL .shift_loop
    2106/     DCE : A2 00                LDX #$0
    2107/     DD0 : 68                   PLA
    2108/     DD1 : A8                   TAY
    2109/     DD2 : 8A                   TXA
    2110/     DD3 :                      .fill_loop:
    2111/     DD3 : 95 88                STA R_ans,X
    2112/     DD5 : E8                   INX
    2113/     DD6 : 88                   DEY
    2114/     DD7 : D0 FA                BNE .fill_loop
    2115/     DD9 :                      .adjust_exp:
    2116/     DD9 : 68                   PLA
    2117/     DDA : A8                   TAY
    2118/     DDB : B9 B9 0B             LDA hex_table,Y
    2119/     DDE : 8D 07 08             STA math_a
    2120/     DE1 : A5 8F                LDA R_ans+$7
    2121/     DE3 : 38                   SEC
    2122/     DE4 : ED 07 08             SBC math_a
    2123/     DE7 : 85 8F                STA R_ans+$7
    2124/     DE9 : A5 90                LDA R_ans+$8
    2125/     DEB : E9 00                SBC #$0
    2126/     DED : 85 90                STA R_ans+$8
    2127/     DEF :                      .return:
    2128/     DEF : 60                   RTS
    2129/     DF0 :                      
    2130/     DF0 :                     BCD_Round:
    2131/     DF0 : B5 00                LDA $0,X
    2132/     DF2 : C9 50                CMP #$50
    2133/     DF4 : 90 22                BCC .no_round
    2134/     DF6 : 08                   PHP
    2135/     DF7 : F8                   SED
    2136/     DF8 : A0 06                LDY #$6
    2137/     DFA : 38                   SEC
    2138/     DFB :                      .round_loop:
    2139/     DFB : B5 01                LDA $1,X
    2140/     DFD : 69 00                ADC #$0
    2141/     DFF : 95 01                STA $1,X
    2142/     E01 : E8                   INX
    2143/     E02 : 88                   DEY
    2144/     E03 : D0 F6                BNE .round_loop
    2145/     E05 : 90 10                BCC .no_carry
    2146/     E07 : A9 10                LDA #$10
    2147/     E09 : 95 00                STA $0,X
    2148/     E0B : B5 01                LDA $1,X
    2149/     E0D : 69 00                ADC #$0
    2150/     E0F : 95 01                STA $1,X
    2151/     E11 : B5 02                LDA $2,X
    2152/     E13 : 69 00                ADC #$0
    2153/     E15 : 95 02                STA $2,X
    2154/     E17 :                      .no_carry:
    2155/     E17 : 28                   PLP
    2156/     E18 :                      .no_round:
    2157/     E18 : 60                   RTS
    2158/     E19 :                      
    2159/     E19 :                     BCD_Unpack:
    2160/     E19 : A9 00                LDA #$0
    2161/     E1B : 95 00                STA $0,X
    2162/     E1D : B5 08                LDA $8,X
    2163/     E1F : 95 09                STA $9,X
    2164/     E21 : 29 0F                AND #$F
    2165/     E23 : 95 08                STA $8,X
    2166/     E25 : B5 09                LDA $9,X
    2167/     E27 : 29 40                AND #$40
    2168/     E29 : F0 03                BEQ .no_reverse
    2169/     E2B : 20 E1 0B             JSR BCD_RevExp
    2170/     E2E :                      .no_reverse:
    2171/     E2E : B5 09                LDA $9,X
    2172/     E30 : 29 80                AND #$80
    2173/     E32 : 95 09                STA $9,X
    2174/     E34 : 60                   RTS
    2175/     E35 :                      
    2176/     E35 :                     BCD_Pack:
    2177/     E35 : B5 08                LDA $8,X
    2178/     E37 : 10 07                BPL .no_rev
    2179/     E39 : 20 E1 0B             JSR BCD_RevExp
    2180/     E3C : 09 40                ORA #$40
    2181/     E3E : 95 08                STA $8,X
    2182/     E40 :                      .no_rev:
    2183/     E40 : C9 50                CMP #$50
    2184/     E42 : 90 03                BCC .no_underflow
    2185/     E44 : 4C FD 0B             JMP ZeroReg
    2186/     E47 :                      .no_underflow:
    2187/     E47 : 29 BF                AND #$BF
    2188/     E49 : C9 10                CMP #$10
    2189/     E4B : 90 03                BCC .overflow_done
    2190/     E4D : 4C 08 0C             JMP MaxReg
    2191/     E50 :                      .overflow_done:
    2192/     E50 : B5 08                LDA $8,X
    2193/     E52 : 15 09                ORA $9,X
    2194/     E54 : 95 08                STA $8,X
    2195/     E56 : 60                   RTS
    2196/     E57 :                      
    2197/     E57 :                     BCD_Exp_diff:
    2198/     E57 : A5 49                LDA R1+$7
    2199/     E59 : 38                   SEC
    2200/     E5A : E5 3F                SBC R0+$7
    2201/     E5C : 8D 05 08             STA math_lo
    2202/     E5F : A5 4A                LDA R1+$8
    2203/     E61 : E5 40                SBC R0+$8
    2204/     E63 : 8D 06 08             STA math_hi
    2205/     E66 : 60                   RTS
    2206/     E67 :                      
    2207/     E67 :                     BCD_StickyRound:
    2208/     E67 : A5 88                LDA R_ans
    2209/     E69 : C9 50                CMP #$50
    2210/     E6B : D0 14                BNE .not_50
    2211/     E6D : AD 0C 08             LDA math_sticky
    2212/     E70 : F0 07                BEQ .round_even
    2213/     E72 : AD 0B 08             LDA math_signs
    2214/     E75 : D0 27                BNE .no_round
    2215/     E77 : F0 0A                BEQ .round
    2216/     E79 :                      .round_even:
    2217/     E79 : A5 89                LDA R_ans+$1
    2218/     E7B : 29 01                AND #$1
    2219/     E7D : D0 04                BNE .round
    2220/     E7F : F0 1D                BEQ .no_round
    2221/     E81 :                      .not_50:
    2222/     E81 : 90 1B                BCC .no_round
    2223/     E83 :                      .round:
    2224/     E83 : A2 00                LDX #$0
    2225/     E85 : A0 06                LDY #$6
    2226/     E87 : 38                   SEC
    2227/     E88 :                      .round_loop:
    2228/     E88 : B5 89                LDA R_ans+$1,X
    2229/     E8A : 69 00                ADC #$0
    2230/     E8C : 95 89                STA R_ans+$1,X
    2231/     E8E : E8                   INX
    2232/     E8F : 88                   DEY
    2233/     E90 : D0 F6                BNE .round_loop
    2234/     E92 : 90 0A                BCC .round_done
    2235/     E94 : 20 1A 0C             JSR IncRansExp
    2236/     E97 : A2 88                LDX #R_ans
    2237/     E99 : A9 10                LDA #$10
    2238/     E9B : 20 7E 0C             JSR HalfShift
    2239/     E9E :                      .round_done:
    2240/     E9E :                      .no_round:
    2241/     E9E : 60                   RTS
    2242/     E9F :                      
    2243/     E9F :                     BCD_Add:
    2244/     E9F : 08                   PHP
    2245/     EA0 : F8                   SED
    2246/     EA1 : 8A                   TXA
    2247/     EA2 : 48                   PHA
    2248/     EA3 : A5 3E                LDA R0+$1+$C/$2-$1
    2249/     EA5 : D0 0A                BNE .no_zero_exit
    2250/     EA7 : A9 42                LDA #R1
    2251/     EA9 :                      .zero_copy_exit:
    2252/     EA9 : A0 88                LDY #R_ans
    2253/     EAB : 20 3A 0C             JSR CopyRegs
    2254/     EAE : 4C 82 0F             JMP .zero_exit
    2255/     EB1 :                      .no_zero_exit:
    2256/     EB1 : A5 48                LDA R1+$1+$C/$2-$1
    2257/     EB3 : D0 04                BNE .R1_good
    2258/     EB5 : A9 38                LDA #R0
    2259/     EB7 : D0 F0                BNE .zero_copy_exit
    2260/     EB9 :                      .R1_good:
    2261/     EB9 : A0 00                LDY #$0
    2262/     EBB : 8C 0C 08             STY math_sticky
    2263/     EBE : A2 38                LDX #R0
    2264/     EC0 : 20 19 0E             JSR BCD_Unpack
    2265/     EC3 : A2 42                LDX #R1
    2266/     EC5 : 20 19 0E             JSR BCD_Unpack
    2267/     EC8 : 20 57 0E             JSR BCD_Exp_diff
    2268/     ECB : AD 05 08             LDA math_lo
    2269/     ECE : 0D 06 08             ORA math_hi
    2270/     ED1 : F0 31                BEQ .do_sign
    2271/     ED3 : AD 06 08             LDA math_hi
    2272/     ED6 : C9 99                CMP #$99
    2273/     ED8 : D0 13                BNE .not_neg
    2274/     EDA : AD 05 08             LDA math_lo
    2275/     EDD : C9 87                CMP #$87
    2276/     EDF : B0 03                BCS .._1961.skip
    2277/     EE1 : 4C 6A 0F             JMP .ignore
    2278/     EE4 :                      .._1961.skip:
    2279/     EE4 : 20 28 0C             JSR SwapR0R1
    2280/     EE7 : 20 57 0E             JSR BCD_Exp_diff
    2281/     EEA : 4C FE 0E             JMP .do_shift
    2282/     EED :                      .not_neg:
    2283/     EED : C9 00                CMP #$0
    2284/     EEF : F0 03                BEQ .._1964.skip
    2285/     EF1 : 4C 6A 0F             JMP .ignore
    2286/     EF4 :                      .._1964.skip:
    2287/     EF4 : AD 05 08             LDA math_lo
    2288/     EF7 : C9 14                CMP #$14
    2289/     EF9 : 90 03                BCC .._1965.skip
    2290/     EFB : 4C 6A 0F             JMP .ignore
    2291/     EFE :                      .._1965.skip:
    2292/     EFE :                      .do_shift:
    2293/     EFE : AD 05 08             LDA math_lo
    2294/     F01 : 20 FD 0C             JSR ShiftR0
    2295/     F04 :                      .do_sign:
    2296/     F04 : A5 41                LDA R0+$9
    2297/     F06 : 45 4B                EOR R1+$9
    2298/     F08 : 8D 0B 08             STA math_signs
    2299/     F0B : F0 0B                BEQ .same_sign
    2300/     F0D : A2 38                LDX #R0
    2301/     F0F : 25 41                AND R0+$9
    2302/     F11 : D0 02                BNE .invert_R0
    2303/     F13 : A2 42                LDX #R1
    2304/     F15 :                      .invert_R0:
    2305/     F15 : 20 EF 0B             JSR BCD_RevSig
    2306/     F18 :                      .same_sign:
    2307/     F18 : A5 49                LDA R1+$7
    2308/     F1A : 85 8F                STA R_ans+$7
    2309/     F1C : A5 4A                LDA R1+$8
    2310/     F1E : 85 90                STA R_ans+$8
    2311/     F20 : A5 4B                LDA R1+$8+$1
    2312/     F22 : 85 91                STA R_ans+$8+$1
    2313/     F24 :                      .do_add:
    2314/     F24 : 18                   CLC
    2315/     F25 : A2 00                LDX #$0
    2316/     F27 : A0 07                LDY #$7
    2317/     F29 :                      .add_loop:
    2318/     F29 : B5 42                LDA R1,X
    2319/     F2B : 75 38                ADC R0,X
    2320/     F2D : 95 88                STA R_ans,X
    2321/     F2F : E8                   INX
    2322/     F30 : 88                   DEY
    2323/     F31 : D0 F6                BNE .add_loop
    2324/     F33 : 08                   PHP
    2325/     F34 : AD 0B 08             LDA math_signs
    2326/     F37 : D0 1A                BNE .not_same
    2327/     F39 : 28                   PLP
    2328/     F3A : 90 14                BCC .no_carry
    2329/     F3C : 20 1A 0C             JSR IncRansExp
    2330/     F3F : A5 88                LDA R_ans
    2331/     F41 : 29 0F                AND #$F
    2332/     F43 : 0D 0C 08             ORA math_sticky
    2333/     F46 : 8D 0C 08             STA math_sticky
    2334/     F49 : A2 88                LDX #R_ans
    2335/     F4B : A9 10                LDA #$10
    2336/     F4D : 20 7E 0C             JSR HalfShift
    2337/     F50 :                      .no_carry:
    2338/     F50 : 4C 61 0F             JMP .carry_done
    2339/     F53 :                      .not_same:
    2340/     F53 : A9 00                LDA #$0
    2341/     F55 : 28                   PLP
    2342/     F56 : B0 07                BCS .no_carry2
    2343/     F58 : A2 88                LDX #R_ans
    2344/     F5A : 20 EF 0B             JSR BCD_RevSig
    2345/     F5D : A9 80                LDA #$80
    2346/     F5F :                      .no_carry2:
    2347/     F5F : 85 91                STA R_ans+$9
    2348/     F61 :                      .carry_done:
    2349/     F61 : 20 6B 0D             JSR NormRans
    2350/     F64 : 20 67 0E             JSR BCD_StickyRound
    2351/     F67 : 4C 78 0F             JMP .done
    2352/     F6A :                      .ignore:
    2353/     F6A : A9 42                LDA #R1
    2354/     F6C : AC 06 08             LDY math_hi
    2355/     F6F : 10 02                BPL .no_copy
    2356/     F71 : A9 38                LDA #R0
    2357/     F73 :                      .no_copy:
    2358/     F73 : A0 88                LDY #R_ans
    2359/     F75 : 20 3A 0C             JSR CopyRegs
    2360/     F78 :                      .done:
    2361/     F78 : A5 41                LDA R0+$9
    2362/     F7A : 8D 0D 08             STA math_max
    2363/     F7D : A2 88                LDX #R_ans
    2364/     F7F : 20 35 0E             JSR BCD_Pack
    2365/     F82 :                      .zero_exit:
    2366/     F82 : 68                   PLA
    2367/     F83 : AA                   TAX
    2368/     F84 : 28                   PLP
    2369/     F85 : 60                   RTS
    2370/     F86 :                      
    2371/     F86 :                     BCD_Mult:
    2372/     F86 : 08                   PHP
    2373/     F87 : F8                   SED
    2374/     F88 : 8A                   TXA
    2375/     F89 : 48                   PHA
    2376/     F8A : A2 81                LDX #R7+$3
    2377/     F8C : 20 FD 0B             JSR ZeroReg
    2378/     F8F : A2 88                LDX #R_ans
    2379/     F91 : 20 FD 0B             JSR ZeroReg
    2380/     F94 : A5 3E                LDA R0+$C/$2
    2381/     F96 : F0 04                BEQ .ret_zero
    2382/     F98 : A5 48                LDA R1+$C/$2
    2383/     F9A : D0 03                BNE .no_zero_exit
    2384/     F9C :                      .ret_zero:
    2385/     F9C : 4C 2F 10             JMP .zero_exit
    2386/     F9F :                      .no_zero_exit:
    2387/     F9F : A2 38                LDX #R0
    2388/     FA1 : 20 19 0E             JSR BCD_Unpack
    2389/     FA4 : A2 42                LDX #R1
    2390/     FA6 : 20 19 0E             JSR BCD_Unpack
    2391/     FA9 : A5 41                LDA R0+$9
    2392/     FAB : 45 4B                EOR R1+$9
    2393/     FAD : 29 80                AND #$80
    2394/     FAF : 85 91                STA R_ans+$9
    2395/     FB1 : 18                   CLC
    2396/     FB2 : A5 3F                LDA R0+$7
    2397/     FB4 : 65 49                ADC R1+$7
    2398/     FB6 : 8D 05 08             STA math_lo
    2399/     FB9 : A5 40                LDA R0+$8
    2400/     FBB : 65 4A                ADC R1+$8
    2401/     FBD : 85 90                STA R_ans+$8
    2402/     FBF : A9 0C                LDA #$C
    2403/     FC1 : 8D 08 08             STA math_b
    2404/     FC4 :                      .loop:
    2405/     FC4 : A0 04                LDY #$4
    2406/     FC6 : A5 39                LDA R0+$1
    2407/     FC8 : 29 0F                AND #$F
    2408/     FCA : 85 38                STA R0
    2409/     FCC : A2 38                LDX #R0
    2410/     FCE : 20 AD 0C             JSR HalfShiftBackward
    2411/     FD1 : A5 38                LDA R0
    2412/     FD3 : F0 1B                BEQ .add_skip
    2413/     FD5 : A9 00                LDA #$0
    2414/     FD7 : 85 8F                STA R_ans+$C/$2+$1
    2415/     FD9 :                      .mult_loop:
    2416/     FD9 : A0 06                LDY #$6
    2417/     FDB : A2 01                LDX #$1
    2418/     FDD : 18                   CLC
    2419/     FDE :                      .add_loop:
    2420/     FDE : B5 42                LDA R1,X
    2421/     FE0 : 75 88                ADC R_ans,X
    2422/     FE2 : 95 88                STA R_ans,X
    2423/     FE4 : E8                   INX
    2424/     FE5 : 88                   DEY
    2425/     FE6 : D0 F6                BNE .add_loop
    2426/     FE8 : 90 02                BCC .no_carry
    2427/     FEA : E6 8F                INC R_ans+$C/$2+$1
    2428/     FEC :                      .no_carry:
    2429/     FEC : C6 38                DEC R0
    2430/     FEE : D0 E9                BNE .mult_loop
    2431/     FF0 :                      .add_skip:
    2432/     FF0 : A2 82                LDX #R7+$3+$1
    2433/     FF2 : 20 BF 0C             JSR HalfShiftWide
    2434/     FF5 : CE 08 08             DEC math_b
    2435/     FF8 : D0 CA                BNE .loop
    2436/     FFA : AD 05 08             LDA math_lo
    2437/     FFD : 85 8F                STA R_ans+$C/$2+$1
    2438/     FFF : A5 8E                LDA R_ans+$C/$2
    2439/    1001 : 29 F0                AND #$F0
    2440/    1003 : F0 06                BEQ .shift
    2441/    1005 : 20 1A 0C             JSR IncRansExp
    2442/    1008 : 4C 10 10             JMP .shift_done
    2443/    100B :                      .shift:
    2444/    100B : A2 82                LDX #R7+$3+$1
    2445/    100D : 20 DF 0C             JSR HalfShiftWideForward
    2446/    1010 :                      .shift_done:
    2447/    1010 : A0 05                LDY #$5
    2448/    1012 : A9 00                LDA #$0
    2449/    1014 :                      .sticky_loop:
    2450/    1014 : 19 82 00             ORA R7+$3+$1,Y
    2451/    1017 : 88                   DEY
    2452/    1018 : D0 FA                BNE .sticky_loop
    2453/    101A : 8D 0C 08             STA math_sticky
    2454/    101D : A9 00                LDA #$0
    2455/    101F : 8D 0B 08             STA math_signs
    2456/    1022 : 20 67 0E             JSR BCD_StickyRound
    2457/    1025 : A5 91                LDA R_ans+$9
    2458/    1027 : 8D 0D 08             STA math_max
    2459/    102A : A2 88                LDX #R_ans
    2460/    102C : 20 35 0E             JSR BCD_Pack
    2461/    102F :                      .zero_exit:
    2462/    102F : 68                   PLA
    2463/    1030 : AA                   TAX
    2464/    1031 : 28                   PLP
    2465/    1032 : 60                   RTS
    2466/    1033 :                      
    2467/    1033 :                     BCD_Div:
    2468/    1033 : A5 3E                LDA R0+$C/$2
    2469/    1035 : D0 05                BNE .no_zero_exit
    2470/    1037 : A9 0E                LDA #$E
    2471/    1039 : 85 22                STA ret_val
    2472/    103B : 60                   RTS
    2473/    103C :                      .no_zero_exit:
    2474/    103C : 08                   PHP
    2475/    103D : F8                   SED
    2476/    103E : 8A                   TXA
    2477/    103F : 48                   PHA
    2478/    1040 : A2 88                LDX #R_ans
    2479/    1042 : 20 FD 0B             JSR ZeroReg
    2480/    1045 : A9 00                LDA #$0
    2481/    1047 : 85 88                STA R_ans
    2482/    1049 : A2 38                LDX #R0
    2483/    104B : 20 19 0E             JSR BCD_Unpack
    2484/    104E : A2 42                LDX #R1
    2485/    1050 : 20 19 0E             JSR BCD_Unpack
    2486/    1053 : A5 41                LDA R0+$9
    2487/    1055 : 45 4B                EOR R1+$9
    2488/    1057 : 29 80                AND #$80
    2489/    1059 : 85 91                STA R_ans+$9
    2490/    105B : 38                   SEC
    2491/    105C : A5 49                LDA R1+$7
    2492/    105E : E5 3F                SBC R0+$7
    2493/    1060 : 8D 05 08             STA math_lo
    2494/    1063 : A5 4A                LDA R1+$8
    2495/    1065 : E5 40                SBC R0+$8
    2496/    1067 : 85 90                STA R_ans+$8
    2497/    1069 : A9 00                LDA #$0
    2498/    106B : 85 3F                STA R0+$7
    2499/    106D : 85 49                STA R1+$7
    2500/    106F : A9 0E                LDA #$E
    2501/    1071 : 8D 08 08             STA math_b
    2502/    1074 :                      .loop_outer:
    2503/    1074 : A2 88                LDX #R_ans
    2504/    1076 : 20 99 0C             JSR HalfShiftForward
    2505/    1079 :                      .loop:
    2506/    1079 : A0 07                LDY #$7
    2507/    107B : A2 01                LDX #$1
    2508/    107D : 38                   SEC
    2509/    107E :                      .div_loop:
    2510/    107E : B5 42                LDA R1,X
    2511/    1080 : F5 38                SBC R0,X
    2512/    1082 : 95 42                STA R1,X
    2513/    1084 : E8                   INX
    2514/    1085 : 88                   DEY
    2515/    1086 : D0 F6                BNE .div_loop
    2516/    1088 : 90 04                BCC .add_back
    2517/    108A : E6 88                INC R_ans
    2518/    108C : B0 EB                BCS .loop
    2519/    108E :                      .add_back:
    2520/    108E : A0 07                LDY #$7
    2521/    1090 : A2 01                LDX #$1
    2522/    1092 : 18                   CLC
    2523/    1093 :                      .add_loop:
    2524/    1093 : B5 42                LDA R1,X
    2525/    1095 : 75 38                ADC R0,X
    2526/    1097 : 95 42                STA R1,X
    2527/    1099 : E8                   INX
    2528/    109A : 88                   DEY
    2529/    109B : D0 F6                BNE .add_loop
    2530/    109D : A2 43                LDX #R1+$1
    2531/    109F : 20 99 0C             JSR HalfShiftForward
    2532/    10A2 : CE 08 08             DEC math_b
    2533/    10A5 : D0 CD                BNE .loop_outer
    2534/    10A7 : AD 05 08             LDA math_lo
    2535/    10AA : 85 8F                STA R_ans+$C/$2+$1
    2536/    10AC : 20 6B 0D             JSR NormRans
    2537/    10AF : A0 07                LDY #$7
    2538/    10B1 : A9 00                LDA #$0
    2539/    10B3 :                      .sticky_loop:
    2540/    10B3 : 19 42 00             ORA R1,Y
    2541/    10B6 : 88                   DEY
    2542/    10B7 : D0 FA                BNE .sticky_loop
    2543/    10B9 : 8D 0C 08             STA math_sticky
    2544/    10BC : A9 00                LDA #$0
    2545/    10BE : 8D 0B 08             STA math_signs
    2546/    10C1 : 20 67 0E             JSR BCD_StickyRound
    2547/    10C4 : A5 91                LDA R_ans+$9
    2548/    10C6 : 8D 0D 08             STA math_max
    2549/    10C9 : A2 88                LDX #R_ans
    2550/    10CB : 20 35 0E             JSR BCD_Pack
    2551/    10CE :                      .zero_exit:
    2552/    10CE : 68                   PLA
    2553/    10CF : AA                   TAX
    2554/    10D0 : 28                   PLP
    2555/    10D1 : 60                   RTS
    2556/    10D2 :                      
    2557/    10D2 :                     INV_K:
    2558/    10D2 : 77 87 59 97 23 42    FCB $77,$87,$59,$97,$23,$42,$0
                    00                
    2559/    10D9 :                      
    2560/    10D9 :                     ATAN_TABLE:
    2561/    10D9 : 74 39 63 81 39 85    FCB $74,$39,$63,$81,$39,$85,$7
                    07                
    2562/    10E0 : 12 49 52 86 66 99    FCB $12,$49,$52,$86,$66,$99,$0
                    00                
    2563/    10E7 : 67 68 66 96 99 09    FCB $67,$68,$66,$96,$99,$9,$0
                    00                
    2564/    10EE : 67 66 99 99 99 00    FCB $67,$66,$99,$99,$99,$0,$0
                    00                
    2565/    10F5 : 97 99 99 99 09 00    FCB $97,$99,$99,$99,$9,$0,$0
                    00                
    2566/    10FC : 00 00 00 00 01 00    FCB $0,$0,$0,$0,$1,$0,$0
                    00                
    2567/    1103 : 00 00 00 10 00 00    FCB $0,$0,$0,$10,$0,$0,$0
                    00                
    2568/    110A : 00 00 00 01 00 00    FCB $0,$0,$0,$1,$0,$0,$0
                    00                
    2569/    1111 : 00 00 10 00 00 00    FCB $0,$0,$10,$0,$0,$0,$0
                    00                
    2570/    1118 : 00 00 01 00 00 00    FCB $0,$0,$1,$0,$0,$0,$0
                    00                
    2571/    111F : 00 10 00 00 00 00    FCB $0,$10,$0,$0,$0,$0,$0
                    00                
    2572/    1126 : 00 01 00 00 00 00    FCB $0,$1,$0,$0,$0,$0,$0
                    00                
    2573/    112D : 10 00 00 00 00 00    FCB $10,$0,$0,$0,$0,$0,$0
                    00                
    2574/    1134 : 01 00 00 00 00 00    FCB $1,$0,$0,$0,$0,$0,$0
                    00                
    2575/    113B :                      
    2576/    113B :                     ATANH_TABLE:
    2577/    113B : 11 73 47 53 33 00    FCB $11,$73,$47,$53,$33,$0,$1
                    01                
    2578/    1142 : 33 35 33 03 00 10    FCB $33,$35,$33,$3,$0,$10,$0
                    00                
    2579/    1149 : 33 33 00 00 00 01    FCB $33,$33,$0,$0,$0,$1,$0
                    00                
    2580/    1150 : 03 00 00 00 10 00    FCB $3,$0,$0,$0,$10,$0,$0
                    00                
    2581/    1157 : 00 00 00 00 01 00    FCB $0,$0,$0,$0,$1,$0,$0
                    00                
    2582/    115E : 00 00 00 10 00 00    FCB $0,$0,$0,$10,$0,$0,$0
                    00                
    2583/    1165 : 00 00 00 01 00 00    FCB $0,$0,$0,$1,$0,$0,$0
                    00                
    2584/    116C : 00 00 10 00 00 00    FCB $0,$0,$10,$0,$0,$0,$0
                    00                
    2585/    1173 : 00 00 01 00 00 00    FCB $0,$0,$1,$0,$0,$0,$0
                    00                
    2586/    117A : 00 10 00 00 00 00    FCB $0,$10,$0,$0,$0,$0,$0
                    00                
    2587/    1181 : 00 01 00 00 00 00    FCB $0,$1,$0,$0,$0,$0,$0
                    00                
    2588/    1188 : 10 00 00 00 00 00    FCB $10,$0,$0,$0,$0,$0,$0
                    00                
    2589/    118F : 01 00 00 00 00 00    FCB $1,$0,$0,$0,$0,$0,$0
                    00                
    2590/    1196 :                      
    2591/    1196 :                     CORDIC_Compare_Z:
    2592/    1196 : A5 67                LDA R4+$6+$1
    2593/    1198 : 49 99                EOR #$99
    2594/    119A : 4C FC 11             JMP BCD_CORDIC.compare_done
    2595/    119D :                      
    2596/    119D :                     CORDIC_Compare_Y:
    2597/    119D : A5 5D                LDA R3+$6+$1
    2598/    119F : 4C FC 11             JMP BCD_CORDIC.compare_done
    2599/    11A2 :                      
    2600/    11A2 :                     CORDIC_Compare_Y_R5:
    2601/    11A2 : 00                   BRK
    2602/    11A3 : 00                   BRK
    2603/    11A4 : 4C FC 11             JMP BCD_CORDIC.compare_done
    2604/    11A7 :                      
    2605/    11A7 :                     CORDIC_COMPARE_TABLE:
    2606/    11A7 : 96 11                FDB CORDIC_Compare_Z
    2607/    11A9 : 9D 11                FDB CORDIC_Compare_Y
    2608/    11AB : A2 11                FDB CORDIC_Compare_Y_R5
    2609/    11AD :                      
    2610/    11AD :                     BCD_CORDIC:
    2611/    11AD : A8                   TAY
    2612/    11AE : 29 06                AND #$6
    2613/    11B0 : AA                   TAX
    2614/    11B1 : BD A7 11             LDA CORDIC_COMPARE_TABLE,X
    2615/    11B4 : 8D 17 08             STA CORDIC_comparator
    2616/    11B7 : BD A8 11             LDA CORDIC_COMPARE_TABLE+$1,X
    2617/    11BA : 8D 18 08             STA CORDIC_comparator+$1
    2618/    11BD : 98                   TYA
    2619/    11BE : 29 01                AND #$1
    2620/    11C0 : 8D 10 08             STA CORDIC_sign
    2621/    11C3 : 98                   TYA
    2622/    11C4 : 29 08                AND #$8
    2623/    11C6 : 8D 11 08             STA CORDIC_halve
    2624/    11C9 : 98                   TYA
    2625/    11CA : 29 10                AND #$10
    2626/    11CC : F0 0C                BEQ .load_atan
    2627/    11CE : A9 3B                LDA # (ATANH_TABLE) # $100
    2628/    11D0 : 85 24                STA ret_address
    2629/    11D2 : A9 11                LDA # (ATANH_TABLE)/$100
    2630/    11D4 : 85 25                STA ret_address+$1
    2631/    11D6 : A9 0D                LDA #$D
    2632/    11D8 : D0 0A                BNE .load_done
    2633/    11DA :                      .load_atan:
    2634/    11DA : A9 D9                LDA # (ATAN_TABLE) # $100
    2635/    11DC : 85 24                STA ret_address
    2636/    11DE : A9 10                LDA # (ATAN_TABLE)/$100
    2637/    11E0 : 85 25                STA ret_address+$1
    2638/    11E2 : A9 0E                LDA #$E
    2639/    11E4 :                      .load_done:
    2640/    11E4 : 8D 13 08             STA CORDIC_loop_outer
    2641/    11E7 : A9 00                LDA #$0
    2642/    11E9 : 85 67                STA R4+$6+$1
    2643/    11EB : 85 5D                STA R3+$6+$1
    2644/    11ED : 85 53                STA R2+$6+$1
    2645/    11EF : A9 00                LDA #$0
    2646/    11F1 : 8D 14 08             STA CORDIC_shift_count
    2647/    11F4 :                      .loop_outer:
    2648/    11F4 : A9 09                LDA #$9
    2649/    11F6 : 8D 12 08             STA CORDIC_loop_inner
    2650/    11F9 :                      .loop_inner:
    2651/    11F9 : 6C 17 08             JMP (CORDIC_comparator)
    2652/    11FC :                      .compare_done:
    2653/    11FC : A2 07                LDX #$7
    2654/    11FE : A0 00                LDY #$0
    2655/    1200 : 29 01                AND #$1
    2656/    1202 : 8D 15 08             STA CORDIC_sign_temp
    2657/    1205 : F0 16                BEQ .add_Z
    2658/    1207 :                      .sub_Z:
    2659/    1207 : 38                   SEC
    2660/    1208 :                      .sub_Z_loop:
    2661/    1208 : B9 60 00             LDA R4,Y
    2662/    120B : F1 24                SBC (ret_address),Y
    2663/    120D : 99 60 00             STA R4,Y
    2664/    1210 : C8                   INY
    2665/    1211 : CA                   DEX
    2666/    1212 : D0 F4                BNE .sub_Z_loop
    2667/    1214 : A5 67                LDA R4+$C/$2+$1
    2668/    1216 : E9 00                SBC #$0
    2669/    1218 : 85 67                STA R4+$C/$2+$1
    2670/    121A : 4C 30 12             JMP .z_done
    2671/    121D :                      .add_Z:
    2672/    121D : 18                   CLC
    2673/    121E :                      .add_Z_loop:
    2674/    121E : B9 60 00             LDA R4,Y
    2675/    1221 : 71 24                ADC (ret_address),Y
    2676/    1223 : 99 60 00             STA R4,Y
    2677/    1226 : C8                   INY
    2678/    1227 : CA                   DEX
    2679/    1228 : D0 F4                BNE .add_Z_loop
    2680/    122A : A5 67                LDA R4+$C/$2+$1
    2681/    122C : 69 00                ADC #$0
    2682/    122E : 85 67                STA R4+$C/$2+$1
    2683/    1230 :                      .z_done:
    2684/    1230 : A9 55                LDA #R3-$1
    2685/    1232 : A0 37                LDY #R0-$1
    2686/    1234 : 20 3A 0C             JSR CopyRegs
    2687/    1237 : AD 14 08             LDA CORDIC_shift_count
    2688/    123A : A6 5D                LDX R3+$C/$2+$1
    2689/    123C : 20 C9 12             JSR CORDIC_ShiftR0
    2690/    123F : A2 00                LDX #$0
    2691/    1241 : A0 08                LDY #$8
    2692/    1243 : AD 15 08             LDA CORDIC_sign_temp
    2693/    1246 : 4D 10 08             EOR CORDIC_sign
    2694/    1249 : F0 0E                BEQ .add_X
    2695/    124B :                      .sub_X:
    2696/    124B : 38                   SEC
    2697/    124C :                      .sub_X_loop:
    2698/    124C : B5 4C                LDA R2,X
    2699/    124E : F5 38                SBC R0,X
    2700/    1250 : 95 42                STA R1,X
    2701/    1252 : E8                   INX
    2702/    1253 : 88                   DEY
    2703/    1254 : D0 F6                BNE .sub_X_loop
    2704/    1256 : 4C 64 12             JMP .X_done
    2705/    1259 :                      .add_X:
    2706/    1259 : 18                   CLC
    2707/    125A :                      .add_X_loop:
    2708/    125A : B5 4C                LDA R2,X
    2709/    125C : 75 38                ADC R0,X
    2710/    125E : 95 42                STA R1,X
    2711/    1260 : E8                   INX
    2712/    1261 : 88                   DEY
    2713/    1262 : D0 F6                BNE .add_X_loop
    2714/    1264 :                      .X_done:
    2715/    1264 : A9 4B                LDA #R2-$1
    2716/    1266 : A0 37                LDY #R0-$1
    2717/    1268 : 20 3A 0C             JSR CopyRegs
    2718/    126B : AD 14 08             LDA CORDIC_shift_count
    2719/    126E : A6 53                LDX R2+$C/$2+$1
    2720/    1270 : 20 C9 12             JSR CORDIC_ShiftR0
    2721/    1273 : A2 00                LDX #$0
    2722/    1275 : A0 08                LDY #$8
    2723/    1277 : AD 15 08             LDA CORDIC_sign_temp
    2724/    127A : D0 0E                BNE .add_Y
    2725/    127C :                      .sub_Y:
    2726/    127C : 38                   SEC
    2727/    127D :                      .sub_Y_loop:
    2728/    127D : B5 56                LDA R3,X
    2729/    127F : F5 38                SBC R0,X
    2730/    1281 : 95 56                STA R3,X
    2731/    1283 : E8                   INX
    2732/    1284 : 88                   DEY
    2733/    1285 : D0 F6                BNE .sub_Y_loop
    2734/    1287 : 4C 95 12             JMP .Y_done
    2735/    128A :                      .add_Y:
    2736/    128A : 18                   CLC
    2737/    128B :                      .add_Y_loop:
    2738/    128B : B5 56                LDA R3,X
    2739/    128D : 75 38                ADC R0,X
    2740/    128F : 95 56                STA R3,X
    2741/    1291 : E8                   INX
    2742/    1292 : 88                   DEY
    2743/    1293 : D0 F6                BNE .add_Y_loop
    2744/    1295 :                      .Y_done:
    2745/    1295 : A9 41                LDA #R1-$1
    2746/    1297 : A0 4B                LDY #R2-$1
    2747/    1299 : 20 3A 0C             JSR CopyRegs
    2748/    129C : CE 12 08             DEC CORDIC_loop_inner
    2749/    129F : F0 03                BEQ .._2038.skip
    2750/    12A1 : 4C F9 11             JMP .loop_inner
    2751/    12A4 :                      .._2038.skip:
    2752/    12A4 : A9 5C                LDA #$5C
    2753/    12A6 : 8D E7 FF             STA $FFE7
    2754/    12A9 : A9 6E                LDA #$6E
    2755/    12AB : 8D E7 FF             STA $FFE7
    2756/    12AE : EE 14 08             INC CORDIC_shift_count
    2757/    12B1 : A5 24                LDA ret_address
    2758/    12B3 : 18                   CLC
    2759/    12B4 : D8                   CLD
    2760/    12B5 : 69 07                ADC #$7
    2761/    12B7 : F8                   SED
    2762/    12B8 : 85 24                STA ret_address
    2763/    12BA : 90 02                BCC .no_inc
    2764/    12BC : E6 25                INC ret_address+$1
    2765/    12BE :                      .no_inc:
    2766/    12BE : CE 13 08             DEC CORDIC_loop_outer
    2767/    12C1 : F0 03                BEQ .._2040.skip
    2768/    12C3 : 4C F4 11             JMP .loop_outer
    2769/    12C6 :                      .._2040.skip:
    2770/    12C6 : A9 00                LDA #$0
    2771/    12C8 : 60                   RTS
    2772/    12C9 :                      
    2773/    12C9 :                     CORDIC_ShiftR0:
    2774/    12C9 : 8D 07 08             STA math_a
    2775/    12CC : 8E 0E 08             STX math_fill
    2776/    12CF : 4C 27 0D             JMP ShiftR0.CORDIC
    2777/    12D2 : 60                   RTS
    2778/    12D3 :                      
    2779/    12D3 :                     CORDIC_MarkSign:
    2780/    12D3 : A0 00                LDY #$0
    2781/    12D5 : B5 08                LDA $8,X
    2782/    12D7 : 29 80                AND #$80
    2783/    12D9 : F0 06                BEQ .sign_pos
    2784/    12DB : 55 08                EOR $8,X
    2785/    12DD : 95 08                STA $8,X
    2786/    12DF : A0 80                LDY #$80
    2787/    12E1 :                      .sign_pos:
    2788/    12E1 : 8C 16 08             STY CORDIC_end_sign
    2789/    12E4 : 60                   RTS
    2790/    12E5 :                      
    2791/    12E5 :                     CORDIC_Trig:
    2792/    12E5 : 8E 04 08             STX stack_X
    2793/    12E8 : 20 D3 12             JSR CORDIC_MarkSign
    2794/    12EB : B5 06                LDA $6,X
    2795/    12ED : D0 11                BNE .not_zero
    2796/    12EF :                      .return_0:
    2797/    12EF : A2 4C                LDX #R2
    2798/    12F1 : 20 FD 0B             JSR ZeroReg
    2799/    12F4 : A2 56                LDX #R3
    2800/    12F6 : 20 FD 0B             JSR ZeroReg
    2801/    12F9 : A9 10                LDA #$10
    2802/    12FB : 85 52                STA R2+$6
    2803/    12FD : A9 01                LDA #$1
    2804/    12FF : 60                   RTS
    2805/    1300 :                      .not_zero:
    2806/    1300 : 20 0F 1E             JSR StackAddItem
    2807/    1303 : 20 38 2C             JSR PUSH_STUB
    2808/    1306 : 01 80 26 63 79 70    FCB $1,$80,$26,$63,$79,$70,$15,$0,$80
                    15 00 80          
    2809/    130F : F8                   SED
    2810/    1310 : 20 50 0C             JSR TosR0R1
    2811/    1313 : 20 9F 0E             JSR BCD_Add
    2812/    1316 : 20 A3 1F             JSR CODE_DROP+$2
    2813/    1319 : A5 8E                LDA R_ans+$6
    2814/    131B : D0 11                BNE .not_one
    2815/    131D : A2 4C                LDX #R2
    2816/    131F : 20 FD 0B             JSR ZeroReg
    2817/    1322 : A2 56                LDX #R3
    2818/    1324 : 20 FD 0B             JSR ZeroReg
    2819/    1327 : A9 10                LDA #$10
    2820/    1329 : 85 5C                STA R3+$6
    2821/    132B : A9 01                LDA #$1
    2822/    132D : 60                   RTS
    2823/    132E :                      .not_one:
    2824/    132E : A5 90                LDA R_ans+$8
    2825/    1330 : 29 80                AND #$80
    2826/    1332 : D0 0B                BNE .range_good
    2827/    1334 : A9 18                LDA #$18
    2828/    1336 : 85 22                STA ret_val
    2829/    1338 : AE 04 08             LDX stack_X
    2830/    133B : D8                   CLD
    2831/    133C : 68                   PLA
    2832/    133D : 68                   PLA
    2833/    133E : 60                   RTS
    2834/    133F :                      .range_good:
    2835/    133F : AE 04 08             LDX stack_X
    2836/    1342 : CA                   DEX
    2837/    1343 : A0 00                LDY #$0
    2838/    1345 : A9 07                LDA #$7
    2839/    1347 : 8D 12 08             STA CORDIC_loop_inner
    2840/    134A :                      .loop:
    2841/    134A : B9 D2 10             LDA INV_K,Y
    2842/    134D : 99 4C 00             STA R2,Y
    2843/    1350 : A9 00                LDA #$0
    2844/    1352 : 99 56 00             STA R3,Y
    2845/    1355 : B5 01                LDA $1,X
    2846/    1357 : 99 38 00             STA R0,Y
    2847/    135A : C8                   INY
    2848/    135B : E8                   INX
    2849/    135C : CE 12 08             DEC CORDIC_loop_inner
    2850/    135F : D0 E9                BNE .loop
    2851/    1361 : B5 02                LDA $2,X
    2852/    1363 : 29 0F                AND #$F
    2853/    1365 : 8D 06 08             STA math_hi
    2854/    1368 : 15 01                ORA $1,X
    2855/    136A : F0 1F                BEQ .no_shift
    2856/    136C : AD 06 08             LDA math_hi
    2857/    136F : F0 07                BEQ .no_ret_zero
    2858/    1371 :                      .ret_zero:
    2859/    1371 : D8                   CLD
    2860/    1372 : AE 04 08             LDX stack_X
    2861/    1375 : 4C EF 12             JMP .return_0
    2862/    1378 :                      .no_ret_zero:
    2863/    1378 : B5 01                LDA $1,X
    2864/    137A : C9 12                CMP #$12
    2865/    137C : B0 F3                BCS .ret_zero
    2866/    137E : A0 00                LDY #$0
    2867/    1380 : 84 38                STY R0
    2868/    1382 : A8                   TAY
    2869/    1383 : B9 B9 0B             LDA hex_table,Y
    2870/    1386 : A2 00                LDX #$0
    2871/    1388 : 20 C9 12             JSR CORDIC_ShiftR0
    2872/    138B :                      .no_shift:
    2873/    138B : A9 37                LDA #R0-$1
    2874/    138D : A0 5F                LDY #R4-$1
    2875/    138F : 20 3A 0C             JSR CopyRegs
    2876/    1392 : A9 00                LDA #$0
    2877/    1394 : 4C AD 11             JMP BCD_CORDIC
    2878/    1397 : 60                   RTS
    2879/    1398 :                      
    2880/    1398 :                     CORDIC_Atrig1:
    2881/    1398 : 8E 04 08             STX stack_X
    2882/    139B : 4C D3 12             JMP CORDIC_MarkSign
    2883/    139E : 60                   RTS
    2884/    139F :                      
    2885/    139F :                     CORDIC_Atan:
    2886/    139F : 60                   RTS
    2887/    13A0 : 20 98 13             JSR CORDIC_Atrig1
    2888/    13A3 : B5 06                LDA $6,X
    2889/    13A5 : D0 0A                BNE .not_zero
    2890/    13A7 :                      .return_0:
    2891/    13A7 : A2 88                LDX #R_ans
    2892/    13A9 : 20 FD 0B             JSR ZeroReg
    2893/    13AC : 00                   BRK
    2894/    13AD : 00                   BRK
    2895/    13AE : A9 01                LDA #$1
    2896/    13B0 : 60                   RTS
    2897/    13B1 :                      .not_zero:
    2898/    13B1 : F8                   SED
    2899/    13B2 : AE 04 08             LDX stack_X
    2900/    13B5 : CA                   DEX
    2901/    13B6 : A0 00                LDY #$0
    2902/    13B8 : A9 07                LDA #$7
    2903/    13BA : 8D 12 08             STA CORDIC_loop_inner
    2904/    13BD :                      .loop:
    2905/    13BD : A9 00                LDA #$0
    2906/    13BF : 99 4C 00             STA R2,Y
    2907/    13C2 : B5 01                LDA $1,X
    2908/    13C4 : 99 38 00             STA R0,Y
    2909/    13C7 : A9 00                LDA #$0
    2910/    13C9 : 99 60 00             STA R4,Y
    2911/    13CC : C8                   INY
    2912/    13CD : E8                   INX
    2913/    13CE : CE 12 08             DEC CORDIC_loop_inner
    2914/    13D1 : D0 EA                BNE .loop
    2915/    13D3 : A9 10                LDA #$10
    2916/    13D5 : 85 52                STA R2+$6
    2917/    13D7 : B5 02                LDA $2,X
    2918/    13D9 : 29 0F                AND #$F
    2919/    13DB : 8D 06 08             STA math_hi
    2920/    13DE : 15 01                ORA $1,X
    2921/    13E0 : F0 1F                BEQ .no_shift
    2922/    13E2 : AD 06 08             LDA math_hi
    2923/    13E5 : F0 07                BEQ .no_ret_zero
    2924/    13E7 :                      .ret_zero:
    2925/    13E7 : D8                   CLD
    2926/    13E8 : AE 04 08             LDX stack_X
    2927/    13EB : 4C A7 13             JMP .return_0
    2928/    13EE :                      .no_ret_zero:
    2929/    13EE : B5 01                LDA $1,X
    2930/    13F0 : C9 12                CMP #$12
    2931/    13F2 : B0 F3                BCS .ret_zero
    2932/    13F4 : A0 00                LDY #$0
    2933/    13F6 : 84 38                STY R0
    2934/    13F8 : A8                   TAY
    2935/    13F9 : B9 B9 0B             LDA hex_table,Y
    2936/    13FC : A2 00                LDX #$0
    2937/    13FE : 20 C9 12             JSR CORDIC_ShiftR0
    2938/    1401 :                      .no_shift:
    2939/    1401 : A9 37                LDA #R0-$1
    2940/    1403 : A0 55                LDY #R3-$1
    2941/    1405 : 20 3A 0C             JSR CopyRegs
    2942/    1408 : A9 02                LDA #$2
    2943/    140A : 4C AD 11             JMP BCD_CORDIC
    2944/    140D : 60                   RTS
    2945/    140E :                      
    2946/    140E :                     CORDIC_AsinAcos:
    2947/    140E : 20 98 13             JSR CORDIC_Atrig1
    2948/    1411 : B5 06                LDA $6,X
    2949/    1413 : D0 11                BNE .not_zero
    2950/    1415 :                      .return_0:
    2951/    1415 : A2 4C                LDX #R2
    2952/    1417 : 20 FD 0B             JSR ZeroReg
    2953/    141A : A2 56                LDX #R3
    2954/    141C : 20 FD 0B             JSR ZeroReg
    2955/    141F : A9 10                LDA #$10
    2956/    1421 : 85 52                STA R2+$6
    2957/    1423 : A9 01                LDA #$1
    2958/    1425 : 60                   RTS
    2959/    1426 :                      .not_zero:
    2960/    1426 : 20 0F 1E             JSR StackAddItem
    2961/    1429 : 20 38 2C             JSR PUSH_STUB
    2962/    142C : 01 00 00 00 00 00    FCB $1,$0,$0,$0,$0,$0,$10,$0,$80
                    10 00 80          
    2963/    1435 : F8                   SED
    2964/    1436 : 20 50 0C             JSR TosR0R1
    2965/    1439 : 20 9F 0E             JSR BCD_Add
    2966/    143C : 20 A3 1F             JSR CODE_DROP+$2
    2967/    143F : A5 8E                LDA R_ans+$6
    2968/    1441 : D0 11                BNE .not_one
    2969/    1443 : A2 4C                LDX #R2
    2970/    1445 : 20 FD 0B             JSR ZeroReg
    2971/    1448 : A2 56                LDX #R3
    2972/    144A : 20 FD 0B             JSR ZeroReg
    2973/    144D : A9 10                LDA #$10
    2974/    144F : 85 5C                STA R3+$6
    2975/    1451 : A9 01                LDA #$1
    2976/    1453 : 60                   RTS
    2977/    1454 :                      .not_one:
    2978/    1454 : A5 90                LDA R_ans+$8
    2979/    1456 : 29 80                AND #$80
    2980/    1458 : D0 0B                BNE .range_good
    2981/    145A : A9 18                LDA #$18
    2982/    145C : 85 22                STA ret_val
    2983/    145E : AE 04 08             LDX stack_X
    2984/    1461 : D8                   CLD
    2985/    1462 : 68                   PLA
    2986/    1463 : 68                   PLA
    2987/    1464 : 60                   RTS
    2988/    1465 :                      .range_good:
    2989/    1465 : AE 04 08             LDX stack_X
    2990/    1468 : CA                   DEX
    2991/    1469 : A0 00                LDY #$0
    2992/    146B : A9 07                LDA #$7
    2993/    146D : 8D 12 08             STA CORDIC_loop_inner
    2994/    1470 :                      .loop:
    2995/    1470 : A9 00                LDA #$0
    2996/    1472 : 99 4C 00             STA R2,Y
    2997/    1475 : B5 01                LDA $1,X
    2998/    1477 : 99 38 00             STA R0,Y
    2999/    147A : A9 00                LDA #$0
    3000/    147C : 99 60 00             STA R4,Y
    3001/    147F : C8                   INY
    3002/    1480 : E8                   INX
    3003/    1481 : CE 12 08             DEC CORDIC_loop_inner
    3004/    1484 : D0 EA                BNE .loop
    3005/    1486 : A9 10                LDA #$10
    3006/    1488 : 85 52                STA R2+$6
    3007/    148A : B5 02                LDA $2,X
    3008/    148C : 29 0F                AND #$F
    3009/    148E : 8D 06 08             STA math_hi
    3010/    1491 : 15 01                ORA $1,X
    3011/    1493 : F0 1F                BEQ .no_shift
    3012/    1495 : AD 06 08             LDA math_hi
    3013/    1498 : F0 07                BEQ .no_ret_zero
    3014/    149A :                      .ret_zero:
    3015/    149A : D8                   CLD
    3016/    149B : AE 04 08             LDX stack_X
    3017/    149E : 4C 15 14             JMP .return_0
    3018/    14A1 :                      .no_ret_zero:
    3019/    14A1 : B5 01                LDA $1,X
    3020/    14A3 : C9 12                CMP #$12
    3021/    14A5 : B0 F3                BCS .ret_zero
    3022/    14A7 : A0 00                LDY #$0
    3023/    14A9 : 84 38                STY R0
    3024/    14AB : A8                   TAY
    3025/    14AC : B9 B9 0B             LDA hex_table,Y
    3026/    14AF : A2 00                LDX #$0
    3027/    14B1 : 20 C9 12             JSR CORDIC_ShiftR0
    3028/    14B4 :                      .no_shift:
    3029/    14B4 : A9 37                LDA #R0-$1
    3030/    14B6 : A0 55                LDY #R3-$1
    3031/    14B8 : 20 3A 0C             JSR CopyRegs
    3032/    14BB : A9 02                LDA #$2
    3033/    14BD : 4C AD 11             JMP BCD_CORDIC
    3034/    14C0 : 60                   RTS
    3035/    14C1 :                      
    3036/    14C1 :                     CORDIC_Pack:
    3037/    14C1 : C9 00                CMP #$0
    3038/    14C3 : D0 26                BNE .skip_cleanup
    3039/    14C5 : B5 00                LDA $0,X
    3040/    14C7 : 85 88                STA R_ans
    3041/    14C9 : 8A                   TXA
    3042/    14CA : A0 88                LDY #R_ans
    3043/    14CC : 20 3A 0C             JSR CopyRegs
    3044/    14CF : A9 00                LDA #$0
    3045/    14D1 : 85 8F                STA R_ans+$7
    3046/    14D3 : 85 90                STA R_ans+$8
    3047/    14D5 : 20 6B 0D             JSR NormRans
    3048/    14D8 : A9 00                LDA #$0
    3049/    14DA : 8D 0C 08             STA math_sticky
    3050/    14DD : 20 67 0E             JSR BCD_StickyRound
    3051/    14E0 : AD 16 08             LDA CORDIC_end_sign
    3052/    14E3 : 85 91                STA R_ans+$9
    3053/    14E5 : A2 88                LDX #R_ans
    3054/    14E7 : 20 35 0E             JSR BCD_Pack
    3055/    14EA : 60                   RTS
    3056/    14EB :                      .skip_cleanup:
    3057/    14EB : 8A                   TXA
    3058/    14EC : A0 88                LDY #R_ans
    3059/    14EE : 20 3A 0C             JSR CopyRegs
    3060/    14F1 : A5 8E                LDA R_ans+$6
    3061/    14F3 : F0 05                BEQ .no_sign
    3062/    14F5 : AD 16 08             LDA CORDIC_end_sign
    3063/    14F8 : 85 90                STA R_ans+$8
    3064/    14FA :                      .no_sign:
    3065/    14FA : 60                   RTS
    3066/    14FB :                      
    3067/    14FB :                     CORDIC_Push:
    3068/    14FB : AE 04 08             LDX stack_X
    3069/    14FE : D8                   CLD
    3070/    14FF : 4C 67 0C             JMP RansTos
    3071/    1502 : 60                   RTS
    3072/    1503 :                      
    3073/    1503 :                     DigitHigh:
    3074/    1503 : A5 0F                LDA $F ;digit
    3075/    1505 : 4A                   LSR
    3076/    1506 : 4A                   LSR
    3077/    1507 : 4A                   LSR
    3078/    1508 : 4A                   LSR
    3079/    1509 : 18                   CLC
    3080/    150A : 69 30                ADC #$30
    3081/    150C : 85 0F                STA $F ;digit
    3082/    150E : A5 0F                LDA $F ;digit
    3083/    1510 : 85 10                STA $10 ;LCD_char.c_out
    3084/    1512 : 20 F5 0A             JSR LCD_char
    3085/    1515 : 60                   RTS
    3086/    1516 :                      
    3087/    1516 :                     DigitLow:
    3088/    1516 : A5 0F                LDA $F ;digit
    3089/    1518 : 29 0F                AND #$F
    3090/    151A : 18                   CLC
    3091/    151B : 69 30                ADC #$30
    3092/    151D : 85 0F                STA $F ;digit
    3093/    151F : A5 0F                LDA $F ;digit
    3094/    1521 : 85 10                STA $10 ;LCD_char.c_out
    3095/    1523 : 20 F5 0A             JSR LCD_char
    3096/    1526 : 60                   RTS
    3097/    1527 :                      
    3098/    1527 :                     DrawFloat:
    3099/    1527 : E6 08                INC $8 ;source
    3100/    1529 : D0 02                BNE .._2197.no_carry
    3101/    152B : E6 09                INC $9 ;source
    3102/    152D :                      .._2197.no_carry:
    3103/    152D : A5 08                LDA $8 ;source
    3104/    152F : 85 0F                STA $F ;MemCopy.source
    3105/    1531 : A5 09                LDA $9 ;source
    3106/    1533 : 85 10                STA $10 ;MemCopy.source
    3107/    1535 : A9 38                LDA # (R0) # $100
    3108/    1537 : 85 11                STA $11 ;MemCopy.dest
    3109/    1539 : A9 00                LDA # (R0)/$100
    3110/    153B : 85 12                STA $12 ;MemCopy.dest
    3111/    153D : A9 08                LDA #$8
    3112/    153F : 85 13                STA $13 ;MemCopy.count
    3113/    1541 : 20 AD 0B             JSR MemCopy
    3114/    1544 : A9 20                LDA #$20
    3115/    1546 : 85 0C                STA $C ;sign
    3116/    1548 : A0 07                LDY #$7
    3117/    154A : B1 08                LDA ($8),Y ;source
    3118/    154C : 29 80                AND #$80
    3119/    154E : F0 04                BEQ .positive
    3120/    1550 : A9 2D                LDA #$2D
    3121/    1552 : 85 0C                STA $C ;sign
    3122/    1554 :                      .positive:
    3123/    1554 : A5 0C                LDA $C ;sign
    3124/    1556 : 85 10                STA $10 ;LCD_char.c_out
    3125/    1558 : 20 F5 0A             JSR LCD_char
    3126/    155B : A0 05                LDY #$5
    3127/    155D : B9 38 00             LDA R0,Y
    3128/    1560 : 85 0B                STA $B ;arg
    3129/    1562 : A5 0B                LDA $B ;arg
    3130/    1564 : 85 0F                STA $F ;DigitHigh.digit
    3131/    1566 : 20 03 15             JSR DigitHigh
    3132/    1569 : A9 2E                LDA #$2E
    3133/    156B : 85 10                STA $10 ;LCD_char.c_out
    3134/    156D : 20 F5 0A             JSR LCD_char
    3135/    1570 : A5 0B                LDA $B ;arg
    3136/    1572 : 85 0F                STA $F ;DigitLow.digit
    3137/    1574 : 20 16 15             JSR DigitLow
    3138/    1577 : A9 04                LDA #$4
    3139/    1579 : 85 0A                STA $A ;index
    3140/    157B :                      .loop:
    3141/    157B : A4 0A                LDY $A ;index
    3142/    157D : B9 38 00             LDA R0,Y
    3143/    1580 : 85 0B                STA $B ;arg
    3144/    1582 : A5 0B                LDA $B ;arg
    3145/    1584 : 85 0F                STA $F ;DigitHigh.digit
    3146/    1586 : 20 03 15             JSR DigitHigh
    3147/    1589 : A5 0B                LDA $B ;arg
    3148/    158B : 85 0F                STA $F ;DigitLow.digit
    3149/    158D : 20 16 15             JSR DigitLow
    3150/    1590 : C6 0A                DEC $A ;index
    3151/    1592 : A5 0A                LDA $A ;index
    3152/    1594 : C9 FF                CMP #$FF
    3153/    1596 : D0 E3                BNE .loop
    3154/    1598 : A9 2B                LDA #$2B
    3155/    159A : 85 0C                STA $C ;sign
    3156/    159C : A0 07                LDY #$7
    3157/    159E : B1 08                LDA ($8),Y ;source
    3158/    15A0 : 29 40                AND #$40
    3159/    15A2 : F0 04                BEQ .positive_e
    3160/    15A4 : A9 2D                LDA #$2D
    3161/    15A6 : 85 0C                STA $C ;sign
    3162/    15A8 :                      .positive_e:
    3163/    15A8 : A5 0C                LDA $C ;sign
    3164/    15AA : 85 10                STA $10 ;LCD_char.c_out
    3165/    15AC : 20 F5 0A             JSR LCD_char
    3166/    15AF : A0 07                LDY #$7
    3167/    15B1 : B9 38 00             LDA R0,Y
    3168/    15B4 : 85 0B                STA $B ;arg
    3169/    15B6 : A5 0B                LDA $B ;arg
    3170/    15B8 : 85 0F                STA $F ;DigitLow.digit
    3171/    15BA : 20 16 15             JSR DigitLow
    3172/    15BD : A0 06                LDY #$6
    3173/    15BF : B9 38 00             LDA R0,Y
    3174/    15C2 : 85 0B                STA $B ;arg
    3175/    15C4 : A5 0B                LDA $B ;arg
    3176/    15C6 : 85 0F                STA $F ;DigitHigh.digit
    3177/    15C8 : 20 03 15             JSR DigitHigh
    3178/    15CB : A5 0B                LDA $B ;arg
    3179/    15CD : 85 0F                STA $F ;DigitLow.digit
    3180/    15CF : 20 16 15             JSR DigitLow
    3181/    15D2 : 60                   RTS
    3182/    15D3 :                      
    3183/    15D3 :                     HexHigh:
    3184/    15D3 : A5 08                LDA $8 ;digit
    3185/    15D5 : 4A                   LSR
    3186/    15D6 : 4A                   LSR
    3187/    15D7 : 4A                   LSR
    3188/    15D8 : 4A                   LSR
    3189/    15D9 : C9 0A                CMP #$A
    3190/    15DB : 90 08                BCC .print_digit
    3191/    15DD : 18                   CLC
    3192/    15DE : 69 37                ADC #$37
    3193/    15E0 : 85 09                STA $9 ;arg
    3194/    15E2 : 4C EA 15             JMP .done
    3195/    15E5 :                      .print_digit:
    3196/    15E5 : 18                   CLC
    3197/    15E6 : 69 30                ADC #$30
    3198/    15E8 : 85 09                STA $9 ;arg
    3199/    15EA :                      .done:
    3200/    15EA : A5 09                LDA $9 ;arg
    3201/    15EC : 85 10                STA $10 ;LCD_char.c_out
    3202/    15EE : 20 F5 0A             JSR LCD_char
    3203/    15F1 : 60                   RTS
    3204/    15F2 :                      
    3205/    15F2 :                     HexLow:
    3206/    15F2 : A5 08                LDA $8 ;digit
    3207/    15F4 : 29 0F                AND #$F
    3208/    15F6 : C9 0A                CMP #$A
    3209/    15F8 : 90 08                BCC .print_digit
    3210/    15FA : 18                   CLC
    3211/    15FB : 69 37                ADC #$37
    3212/    15FD : 85 09                STA $9 ;arg
    3213/    15FF : 4C 07 16             JMP .done
    3214/    1602 :                      .print_digit:
    3215/    1602 : 18                   CLC
    3216/    1603 : 69 30                ADC #$30
    3217/    1605 : 85 09                STA $9 ;arg
    3218/    1607 :                      .done:
    3219/    1607 : A5 09                LDA $9 ;arg
    3220/    1609 : 85 10                STA $10 ;LCD_char.c_out
    3221/    160B : 20 F5 0A             JSR LCD_char
    3222/    160E : 60                   RTS
    3223/    160F :                      
    3224/    160F :                     DrawHex:
    3225/    160F : A9 24                LDA #$24
    3226/    1611 : 85 10                STA $10 ;LCD_char.c_out
    3227/    1613 : 20 F5 0A             JSR LCD_char
    3228/    1616 : A0 02                LDY #$2
    3229/    1618 : B1 0A                LDA ($A),Y ;source
    3230/    161A : 85 0C                STA $C ;arg
    3231/    161C : A5 0C                LDA $C ;arg
    3232/    161E : 85 08                STA $8 ;HexHigh.digit
    3233/    1620 : 20 D3 15             JSR HexHigh
    3234/    1623 : A5 0C                LDA $C ;arg
    3235/    1625 : 85 08                STA $8 ;HexLow.digit
    3236/    1627 : 20 F2 15             JSR HexLow
    3237/    162A : A0 01                LDY #$1
    3238/    162C : B1 0A                LDA ($A),Y ;source
    3239/    162E : 85 0C                STA $C ;arg
    3240/    1630 : A5 0C                LDA $C ;arg
    3241/    1632 : 85 08                STA $8 ;HexHigh.digit
    3242/    1634 : 20 D3 15             JSR HexHigh
    3243/    1637 : A5 0C                LDA $C ;arg
    3244/    1639 : 85 08                STA $8 ;HexLow.digit
    3245/    163B : 20 F2 15             JSR HexLow
    3246/    163E : 60                   RTS
    3247/    163F :                      
    3248/    163F :                     DrawString:
    3249/    163F : A9 22                LDA #$22
    3250/    1641 : 85 10                STA $10 ;LCD_char.c_out
    3251/    1643 : 20 F5 0A             JSR LCD_char
    3252/    1646 : A9 01                LDA #$1
    3253/    1648 : 85 0B                STA $B ;index
    3254/    164A :                      .loop:
    3255/    164A : A4 0B                LDY $B ;index
    3256/    164C : B1 08                LDA ($8),Y ;source
    3257/    164E : F0 11                BEQ .done
    3258/    1650 : 85 0A                STA $A ;arg
    3259/    1652 : A5 0A                LDA $A ;arg
    3260/    1654 : 85 10                STA $10 ;LCD_char.c_out
    3261/    1656 : 20 F5 0A             JSR LCD_char
    3262/    1659 : E6 0B                INC $B ;index
    3263/    165B : A5 0B                LDA $B ;index
    3264/    165D : C9 09                CMP #$9
    3265/    165F : D0 E9                BNE .loop
    3266/    1661 :                      .done:
    3267/    1661 : A9 22                LDA #$22
    3268/    1663 : 85 10                STA $10 ;LCD_char.c_out
    3269/    1665 : 20 F5 0A             JSR LCD_char
    3270/    1668 : 60                   RTS
    3271/    1669 :                      
    3272/    1669 :                     DrawStack:
    3273/    1669 : 20 0F 1E             JSR StackAddItem
    3274/    166C : 20 83 24             JSR CODE_FREE+$2
    3275/    166F : 8A                   TXA
    3276/    1670 : 85 06                STA $6 ;address
    3277/    1672 : A9 00                LDA #$0
    3278/    1674 : 85 07                STA $7 ;address
    3279/    1676 : 20 D1 0A             JSR LCD_clrscr
    3280/    1679 : A9 60                LDA #$60
    3281/    167B : 85 26                STA screen_ptr
    3282/    167D : A9 5B                LDA #$5B
    3283/    167F : 85 10                STA $10 ;LCD_char.c_out
    3284/    1681 : 20 F5 0A             JSR LCD_char
    3285/    1684 : A5 06                LDA $6 ;address
    3286/    1686 : 85 0A                STA $A ;DrawHex.source
    3287/    1688 : A5 07                LDA $7 ;address
    3288/    168A : 85 0B                STA $B ;DrawHex.source
    3289/    168C : 20 0F 16             JSR DrawHex
    3290/    168F : 4C 99 16             JMP .._2846.str_skip
    3291/    1692 :                      .._2846.str_addr:
    3292/    1692 : 20 46 52 45 45 5D    FCB " FREE]",$0
                    00                
    3293/    1699 :                      .._2846.str_skip:
    3294/    1699 : A9 92                LDA # (.._2846.str_addr) # $100
    3295/    169B : 85 08                STA $8 ;LCD_print.source
    3296/    169D : A9 16                LDA # (.._2846.str_addr)/$100
    3297/    169F : 85 09                STA $9 ;LCD_print.source
    3298/    16A1 : 20 94 0B             JSR LCD_print
    3299/    16A4 : 20 A3 1F             JSR CODE_DROP+$2
    3300/    16A7 : A9 35                LDA #$35
    3301/    16A9 : 85 04                STA $4 ;character
    3302/    16AB : A9 05                LDA #$5
    3303/    16AD : 85 05                STA $5 ;counter
    3304/    16AF : 8A                   TXA
    3305/    16B0 : 18                   CLC
    3306/    16B1 : 69 24                ADC #$24
    3307/    16B3 : 85 06                STA $6 ;address
    3308/    16B5 : A9 00                LDA #$0
    3309/    16B7 : 85 07                STA $7 ;address
    3310/    16B9 :                      .loop:
    3311/    16B9 : A9 00                LDA #$0
    3312/    16BB : 85 26                STA screen_ptr
    3313/    16BD : A5 27                LDA screen_ptr+$1
    3314/    16BF : 18                   CLC
    3315/    16C0 : 69 10                ADC #$10
    3316/    16C2 : 85 27                STA screen_ptr+$1
    3317/    16C4 : A5 04                LDA $4 ;character
    3318/    16C6 : 85 10                STA $10 ;LCD_char.c_out
    3319/    16C8 : 20 F5 0A             JSR LCD_char
    3320/    16CB : A9 3A                LDA #$3A
    3321/    16CD : 85 10                STA $10 ;LCD_char.c_out
    3322/    16CF : 20 F5 0A             JSR LCD_char
    3323/    16D2 : C6 05                DEC $5 ;counter
    3324/    16D4 : A5 05                LDA $5 ;counter
    3325/    16D6 : CD 74 01             CMP stack_count
    3326/    16D9 : B0 3A                BCS .no_item
    3327/    16DB : A0 00                LDY #$0
    3328/    16DD : B1 06                LDA ($6),Y ;address
    3329/    16DF : C9 01                CMP #$1
    3330/    16E1 : D0 0E                BNE .not_float
    3331/    16E3 : A5 06                LDA $6 ;address
    3332/    16E5 : 85 08                STA $8 ;DrawFloat.source
    3333/    16E7 : A5 07                LDA $7 ;address
    3334/    16E9 : 85 09                STA $9 ;DrawFloat.source
    3335/    16EB : 20 27 15             JSR DrawFloat
    3336/    16EE : 4C 15 17             JMP .item_done
    3337/    16F1 :                      .not_float:
    3338/    16F1 : C9 02                CMP #$2
    3339/    16F3 : D0 0E                BNE .not_str
    3340/    16F5 : A5 06                LDA $6 ;address
    3341/    16F7 : 85 08                STA $8 ;DrawString.source
    3342/    16F9 : A5 07                LDA $7 ;address
    3343/    16FB : 85 09                STA $9 ;DrawString.source
    3344/    16FD : 20 3F 16             JSR DrawString
    3345/    1700 : 4C 15 17             JMP .item_done
    3346/    1703 :                      .not_str:
    3347/    1703 : C9 03                CMP #$3
    3348/    1705 : D0 0E                BNE .not_hex
    3349/    1707 : A5 06                LDA $6 ;address
    3350/    1709 : 85 0A                STA $A ;DrawHex.source
    3351/    170B : A5 07                LDA $7 ;address
    3352/    170D : 85 0B                STA $B ;DrawHex.source
    3353/    170F : 20 0F 16             JSR DrawHex
    3354/    1712 : 4C 15 17             JMP .item_done
    3355/    1715 :                      .not_hex:
    3356/    1715 :                      .item_done:
    3357/    1715 :                      .no_item:
    3358/    1715 : A5 06                LDA $6 ;address
    3359/    1717 : 38                   SEC
    3360/    1718 : E9 09                SBC #$9
    3361/    171A : 85 06                STA $6 ;address
    3362/    171C : C6 04                DEC $4 ;character
    3363/    171E : A5 05                LDA $5 ;counter
    3364/    1720 : D0 97                BNE .loop
    3365/    1722 : A9 00                LDA #$0
    3366/    1724 : 85 26                STA screen_ptr
    3367/    1726 : A5 27                LDA screen_ptr+$1
    3368/    1728 : 18                   CLC
    3369/    1729 : 69 18                ADC #$18
    3370/    172B : 85 27                STA screen_ptr+$1
    3371/    172D : A0 00                LDY #$0
    3372/    172F : A9 00                LDA #$0
    3373/    1731 :                      .loop_line:
    3374/    1731 : 91 26                STA (screen_ptr),Y
    3375/    1733 : E6 27                INC screen_ptr+$1
    3376/    1735 : 91 26                STA (screen_ptr),Y
    3377/    1737 : C6 27                DEC screen_ptr+$1
    3378/    1739 : C8                   INY
    3379/    173A : D0 F5                BNE .loop_line
    3380/    173C : 60                   RTS
    3381/    173D :                      
    3382/    173D :                     ERROR_MSG_INPUT:
    3383/    173D : 20 49 4E 50 55 54    FCB " INPUT ERROR  ",$0
                    20 45 52 52 4F 52 
                    20 20 00          
    3384/    174C :                      
    3385/    174C :                     ERROR_MSG_WORD_TOO_LONG:
    3386/    174C : 20 20 49 4E 50 55    FCB "  INPUT SIZE  ",$0
                    54 20 53 49 5A 45 
                    20 20 00          
    3387/    175B :                      
    3388/    175B :                     ERROR_MSG_STRING:
    3389/    175B : 20 53 54 52 49 4E    FCB " STRING ERROR ",$0
                    47 20 45 52 52 4F 
                    52 20 00          
    3390/    176A :                      
    3391/    176A :                     ERROR_MSG_STACK_OVERFLOW:
    3392/    176A : 53 54 41 43 4B 20    FCB "STACK OVERFLOW",$0
                    4F 56 45 52 46 4C 
                    4F 57 00          
    3393/    1779 :                      
    3394/    1779 :                     ERROR_MSG_STACK_UNDERFLOW:
    3395/    1779 : 53 54 41 43 4B 20    FCB "STACK UNDERFL ",$0
                    55 4E 44 45 52 46 
                    4C 20 00          
    3396/    1788 :                      
    3397/    1788 :                     ERROR_MSG_WRONG_TYPE:
    3398/    1788 : 20 20 57 52 4F 4E    FCB "  WRONG TYPE  ",$0
                    47 20 54 59 50 45 
                    20 20 00          
    3399/    1797 :                      
    3400/    1797 :                     ERROR_MSG_DIV_ZERO:
    3401/    1797 : 44 49 56 49 44 45    FCB "DIVIDE BY ZERO",$0
                    20 42 59 20 5A 45 
                    52 4F 00          
    3402/    17A6 :                      
    3403/    17A6 :                     ERROR_MSG_IMMED_ONLY:
    3404/    17A6 : 20 20 49 4D 4D 45    FCB "  IMMED ONLY  ",$0
                    44 20 4F 4E 4C 59 
                    20 20 00          
    3405/    17B5 :                      
    3406/    17B5 :                     ERROR_MSG_COMPILE_ONLY:
    3407/    17B5 : 20 43 4F 4D 50 49    FCB " COMPILE ONLY ",$0
                    4C 45 20 4F 4E 4C 
                    59 20 00          
    3408/    17C4 :                      
    3409/    17C4 :                     ERROR_MSG_OUT_OF_MEM:
    3410/    17C4 : 4F 55 54 20 4F 46    FCB "OUT OF MEMORY ",$0
                    20 4D 45 4D 4F 52 
                    59 20 00          
    3411/    17D3 :                      
    3412/    17D3 :                     ERROR_MSG_STRUCTURE:
    3413/    17D3 : 20 20 53 54 52 55    FCB "  STRUCTURE   ",$0
                    43 54 55 52 45 20 
                    20 20 00          
    3414/    17E2 :                      
    3415/    17E2 :                     ERROR_MSG_RANGE:
    3416/    17E2 : 20 52 41 4E 47 45    FCB " RANGE ERROR  ",$0
                    20 45 52 52 4F 52 
                    20 20 00          
    3417/    17F1 :                      
    3418/    17F1 :                     ERROR_TABLE:
    3419/    17F1 : 3D 17                FDB ERROR_MSG_INPUT
    3420/    17F3 : 4C 17                FDB ERROR_MSG_WORD_TOO_LONG
    3421/    17F5 : 5B 17                FDB ERROR_MSG_STRING
    3422/    17F7 : 6A 17                FDB ERROR_MSG_STACK_OVERFLOW
    3423/    17F9 : 79 17                FDB ERROR_MSG_STACK_UNDERFLOW
    3424/    17FB : 88 17                FDB ERROR_MSG_WRONG_TYPE
    3425/    17FD : 97 17                FDB ERROR_MSG_DIV_ZERO
    3426/    17FF : A6 17                FDB ERROR_MSG_IMMED_ONLY
    3427/    1801 : B5 17                FDB ERROR_MSG_COMPILE_ONLY
    3428/    1803 : C4 17                FDB ERROR_MSG_OUT_OF_MEM
    3429/    1805 : D3 17                FDB ERROR_MSG_STRUCTURE
    3430/    1807 : E2 17                FDB ERROR_MSG_RANGE
    3431/    1809 :                      
    3432/    1809 :                     ErrorMsg:
    3433/    1809 : A8                   TAY
    3434/    180A : B9 EF 17             LDA ERROR_TABLE-$2,Y
    3435/    180D : 85 04                STA $4 ;msg
    3436/    180F : B9 F0 17             LDA ERROR_TABLE-$1,Y
    3437/    1812 : 85 05                STA $5 ;msg
    3438/    1814 : A9 24                LDA #$24
    3439/    1816 : 85 26                STA screen_ptr
    3440/    1818 : A9 60                LDA #$60
    3441/    181A : 85 27                STA screen_ptr+$1
    3442/    181C : A9 FF                LDA #$FF
    3443/    181E : 8D 73 01             STA font_inverted
    3444/    1821 : 4C 34 18             JMP .._3038.str_skip
    3445/    1824 :                      .._3038.str_addr:
    3446/    1824 : 20 20 20 20 20 20    FCB "               ",$0
                    20 20 20 20 20 20 
                    20 20 20 00       
    3447/    1834 :                      .._3038.str_skip:
    3448/    1834 : A9 24                LDA # (.._3038.str_addr) # $100
    3449/    1836 : 85 08                STA $8 ;LCD_print.source
    3450/    1838 : A9 18                LDA # (.._3038.str_addr)/$100
    3451/    183A : 85 09                STA $9 ;LCD_print.source
    3452/    183C : 20 94 0B             JSR LCD_print
    3453/    183F : A9 24                LDA #$24
    3454/    1841 : 85 26                STA screen_ptr
    3455/    1843 : A9 70                LDA #$70
    3456/    1845 : 85 27                STA screen_ptr+$1
    3457/    1847 : A9 FF                LDA #$FF
    3458/    1849 : 8D 73 01             STA font_inverted
    3459/    184C : A9 20                LDA #$20
    3460/    184E : 85 10                STA $10 ;LCD_char.c_out
    3461/    1850 : 20 F5 0A             JSR LCD_char
    3462/    1853 : A5 04                LDA $4 ;msg
    3463/    1855 : 85 08                STA $8 ;LCD_print.source
    3464/    1857 : A5 05                LDA $5 ;msg
    3465/    1859 : 85 09                STA $9 ;LCD_print.source
    3466/    185B : 20 94 0B             JSR LCD_print
    3467/    185E : A9 24                LDA #$24
    3468/    1860 : 85 26                STA screen_ptr
    3469/    1862 : A9 80                LDA #$80
    3470/    1864 : 85 27                STA screen_ptr+$1
    3471/    1866 : 4C 79 18             JMP .._3108.str_skip
    3472/    1869 :                      .._3108.str_addr:
    3473/    1869 : 20 20 20 20 20 20    FCB "           [OK]",$0
                    20 20 20 20 20 5B 
                    4F 4B 5D 00       
    3474/    1879 :                      .._3108.str_skip:
    3475/    1879 : A9 69                LDA # (.._3108.str_addr) # $100
    3476/    187B : 85 08                STA $8 ;LCD_print.source
    3477/    187D : A9 18                LDA # (.._3108.str_addr)/$100
    3478/    187F : 85 09                STA $9 ;LCD_print.source
    3479/    1881 : 20 94 0B             JSR LCD_print
    3480/    1884 : A9 00                LDA #$0
    3481/    1886 : 8D 73 01             STA font_inverted
    3482/    1889 :                      .loop:
    3483/    1889 : 20 CD 0A             JSR ReadKey
    3484/    188C : C9 0D                CMP #$D
    3485/    188E : D0 F9                BNE .loop
    3486/    1890 : 60                   RTS
    3487/    1891 : 60                   RTS
    3488/    1892 :                      
    3489/    1892 :                     AuxPushShort:
    3490/    1892 : EE 72 08             INC aux_stack_count
    3491/    1895 : AC 72 08             LDY aux_stack_count
    3492/    1898 : C0 16                CPY #$16
    3493/    189A : D0 05                BNE .mem_good
    3494/    189C : A9 14                LDA #$14
    3495/    189E : 85 22                STA ret_val
    3496/    18A0 : 60                   RTS
    3497/    18A1 :                      .mem_good:
    3498/    18A1 : CE 71 08             DEC aux_stack_ptr
    3499/    18A4 : CE 71 08             DEC aux_stack_ptr
    3500/    18A7 : CE 71 08             DEC aux_stack_ptr
    3501/    18AA : AC 71 08             LDY aux_stack_ptr
    3502/    18AD : 99 2D 08             STA AUX_STACK,Y
    3503/    18B0 : 60                   RTS
    3504/    18B1 :                      
    3505/    18B1 :                     AuxPopShort:
    3506/    18B1 : AD 72 08             LDA aux_stack_count
    3507/    18B4 : D0 05                BNE .stack_good
    3508/    18B6 : A9 16                LDA #$16
    3509/    18B8 : 85 22                STA ret_val
    3510/    18BA : 60                   RTS
    3511/    18BB :                      .stack_good:
    3512/    18BB : CE 72 08             DEC aux_stack_count
    3513/    18BE : 18                   CLC
    3514/    18BF : AD 71 08             LDA aux_stack_ptr
    3515/    18C2 : 69 03                ADC #$3
    3516/    18C4 : 8D 71 08             STA aux_stack_ptr
    3517/    18C7 : 60                   RTS
    3518/    18C8 :                      
    3519/    18C8 :                     InitForth:
    3520/    18C8 : A9 00                LDA #$0
    3521/    18CA : 8D 31 01             STA input_buff_begin
    3522/    18CD : 8D 32 01             STA input_buff_end
    3523/    18D0 : 8D 19 08             STA new_word_len
    3524/    18D3 : 8D 72 08             STA aux_stack_count
    3525/    18D6 : 8D 73 08             STA aux_word_counter
    3526/    18D9 : A9 43                LDA #$43
    3527/    18DB : 8D 71 08             STA aux_stack_ptr
    3528/    18DE : A2 00                LDX #$0
    3529/    18E0 : 60                   RTS
    3530/    18E1 :                      
    3531/    18E1 :                     special_chars:
    3532/    18E1 : 22                   FCB $22
    3533/    18E2 : 20 2E 24 2B 2D 2A    FCB " .$+-*/'!@:;=<>"
                    2F 27 21 40 3A 3B 
                    3D 3C 3E          
    3534/    18F1 : 53 45                FCB "SE"
    3535/    18F3 :                      
    3536/    18F3 :                     ReadLine:
    3537/    18F3 : A9 00                LDA #$0
    3538/    18F5 : 85 04                STA $4 ;cursor
    3539/    18F7 : 85 07                STA $7 ;index
    3540/    18F9 : 85 26                STA screen_ptr
    3541/    18FB : A9 B0                LDA #$B0
    3542/    18FD : 85 27                STA screen_ptr+$1
    3543/    18FF : 4C 19 19             JMP .._3172.str_skip
    3544/    1902 :                      .._3172.str_addr:
    3545/    1902 : 61 20 20 20 20 20    FCB "a                     ",$0
                    20 20 20 20 20 20 
                    20 20 20 20 20 20 
                    20 20 20 20 00    
    3546/    1919 :                      .._3172.str_skip:
    3547/    1919 : A9 02                LDA # (.._3172.str_addr) # $100
    3548/    191B : 85 08                STA $8 ;LCD_print.source
    3549/    191D : A9 19                LDA # (.._3172.str_addr)/$100
    3550/    191F : 85 09                STA $9 ;LCD_print.source
    3551/    1921 : 20 94 0B             JSR LCD_print
    3552/    1924 : A9 00                LDA #$0
    3553/    1926 : 85 26                STA screen_ptr
    3554/    1928 : AD E6 FF             LDA $FFE6
    3555/    192B : 85 05                STA $5 ;cursor_timer
    3556/    192D :                      .loop:
    3557/    192D : A9 00                LDA #$0
    3558/    192F : 85 06                STA $6 ;arg
    3559/    1931 : 20 CD 0A             JSR ReadKey
    3560/    1934 : D0 03                BNE .key_read
    3561/    1936 : 4C 1F 1A             JMP .no_key
    3562/    1939 :                      .key_read:
    3563/    1939 : C9 0D                CMP #$D
    3564/    193B : D0 0F                BNE .not_enter
    3565/    193D : A5 07                LDA $7 ;index
    3566/    193F : F0 EC                BEQ .loop
    3567/    1941 : A9 00                LDA #$0
    3568/    1943 : 8D 31 01             STA input_buff_begin
    3569/    1946 : A5 07                LDA $7 ;index
    3570/    1948 : 8D 32 01             STA input_buff_end
    3571/    194B : 60                   RTS
    3572/    194C :                      .not_enter:
    3573/    194C : C9 08                CMP #$8
    3574/    194E : D0 2F                BNE .not_backspace
    3575/    1950 : A5 07                LDA $7 ;index
    3576/    1952 : F0 28                BEQ .backspace_done
    3577/    1954 : C6 07                DEC $7 ;index
    3578/    1956 : C9 15                CMP #$15
    3579/    1958 : B0 1C                BCS .backspace_scroll
    3580/    195A : A9 20                LDA #$20
    3581/    195C : 85 10                STA $10 ;LCD_char.c_out
    3582/    195E : 20 F5 0A             JSR LCD_char
    3583/    1961 : A5 26                LDA screen_ptr
    3584/    1963 : 38                   SEC
    3585/    1964 : E9 18                SBC #$18
    3586/    1966 : 85 26                STA screen_ptr
    3587/    1968 : 48                   PHA
    3588/    1969 : A9 61                LDA #$61
    3589/    196B : 85 10                STA $10 ;LCD_char.c_out
    3590/    196D : 20 F5 0A             JSR LCD_char
    3591/    1970 : 68                   PLA
    3592/    1971 : 85 26                STA screen_ptr
    3593/    1973 : 4C 1F 1A             JMP .draw_done
    3594/    1976 :                      .backspace_scroll:
    3595/    1976 : A4 07                LDY $7 ;index
    3596/    1978 : 88                   DEY
    3597/    1979 : 4C F2 19             JMP .scroll_buffer
    3598/    197C :                      .backspace_done:
    3599/    197C : 4C 1F 1A             JMP .no_key
    3600/    197F :                      .not_backspace:
    3601/    197F : A0 00                LDY #$0
    3602/    1981 :                      .special_loop:
    3603/    1981 : D9 E1 18             CMP special_chars,Y
    3604/    1984 : D0 16                BNE .special_next
    3605/    1986 : 85 06                STA $6 ;arg
    3606/    1988 : C9 53                CMP #$53
    3607/    198A : D0 06                BNE .key_E
    3608/    198C : A9 64                LDA #$64
    3609/    198E : 85 06                STA $6 ;arg
    3610/    1990 : D0 36                BNE .key_done
    3611/    1992 :                      .key_E:
    3612/    1992 : C9 45                CMP #$45
    3613/    1994 : D0 32                BNE .key_done
    3614/    1996 : A9 65                LDA #$65
    3615/    1998 : 85 06                STA $6 ;arg
    3616/    199A : D0 2C                BNE .key_done
    3617/    199C :                      .special_next:
    3618/    199C : C8                   INY
    3619/    199D : C0 12                CPY #$12
    3620/    199F : D0 E0                BNE .special_loop
    3621/    19A1 : C9 30                CMP #$30
    3622/    19A3 : 90 09                BCC .not_num
    3623/    19A5 : C9 3A                CMP #$3A
    3624/    19A7 : B0 05                BCS .not_num
    3625/    19A9 : 85 06                STA $6 ;arg
    3626/    19AB : 4C C8 19             JMP .key_done
    3627/    19AE :                      .not_num:
    3628/    19AE : C9 41                CMP #$41
    3629/    19B0 : 90 09                BCC .not_upper
    3630/    19B2 : C9 5B                CMP #$5B
    3631/    19B4 : B0 05                BCS .not_upper
    3632/    19B6 : 85 06                STA $6 ;arg
    3633/    19B8 : 4C C8 19             JMP .key_done
    3634/    19BB :                      .not_upper:
    3635/    19BB : C9 61                CMP #$61
    3636/    19BD : 90 09                BCC .not_lower
    3637/    19BF : C9 7B                CMP #$7B
    3638/    19C1 : B0 05                BCS .not_lower
    3639/    19C3 : 38                   SEC
    3640/    19C4 : E9 20                SBC #$20
    3641/    19C6 : 85 06                STA $6 ;arg
    3642/    19C8 :                      .not_lower:
    3643/    19C8 :                      .key_done:
    3644/    19C8 : A5 06                LDA $6 ;arg
    3645/    19CA : F0 53                BEQ .not_valid
    3646/    19CC : A4 07                LDY $7 ;index
    3647/    19CE : C0 40                CPY #$40
    3648/    19D0 : B0 4D                BCS .buffer_full
    3649/    19D2 : 99 33 01             STA input_buff,Y
    3650/    19D5 : E6 07                INC $7 ;index
    3651/    19D7 : C0 14                CPY #$14
    3652/    19D9 : B0 17                BCS .scroll_buffer
    3653/    19DB : A5 06                LDA $6 ;arg
    3654/    19DD : 85 10                STA $10 ;LCD_char.c_out
    3655/    19DF : 20 F5 0A             JSR LCD_char
    3656/    19E2 : A5 26                LDA screen_ptr
    3657/    19E4 : 48                   PHA
    3658/    19E5 : A9 61                LDA #$61
    3659/    19E7 : 85 10                STA $10 ;LCD_char.c_out
    3660/    19E9 : 20 F5 0A             JSR LCD_char
    3661/    19EC : 68                   PLA
    3662/    19ED : 85 26                STA screen_ptr
    3663/    19EF : 4C 1F 1A             JMP .draw_done
    3664/    19F2 :                      .scroll_buffer:
    3665/    19F2 : A9 00                LDA #$0
    3666/    19F4 : 85 26                STA screen_ptr
    3667/    19F6 : 98                   TYA
    3668/    19F7 : 38                   SEC
    3669/    19F8 : E9 13                SBC #$13
    3670/    19FA : 85 0C                STA $C ;str_index
    3671/    19FC :                      .scroll_loop:
    3672/    19FC : A4 0C                LDY $C ;str_index
    3673/    19FE : E6 0C                INC $C ;str_index
    3674/    1A00 : B9 33 01             LDA input_buff,Y
    3675/    1A03 : 85 06                STA $6 ;arg
    3676/    1A05 : A5 06                LDA $6 ;arg
    3677/    1A07 : 85 10                STA $10 ;LCD_char.c_out
    3678/    1A09 : 20 F5 0A             JSR LCD_char
    3679/    1A0C : A5 07                LDA $7 ;index
    3680/    1A0E : C5 0C                CMP $C ;str_index
    3681/    1A10 : D0 EA                BNE .scroll_loop
    3682/    1A12 : A5 26                LDA screen_ptr
    3683/    1A14 : 48                   PHA
    3684/    1A15 : A9 61                LDA #$61
    3685/    1A17 : 85 10                STA $10 ;LCD_char.c_out
    3686/    1A19 : 20 F5 0A             JSR LCD_char
    3687/    1A1C : 68                   PLA
    3688/    1A1D : 85 26                STA screen_ptr
    3689/    1A1F :                      .draw_done:
    3690/    1A1F :                      .buffer_full:
    3691/    1A1F :                      .not_valid:
    3692/    1A1F :                      .no_key:
    3693/    1A1F : AD E6 FF             LDA $FFE6
    3694/    1A22 : C5 05                CMP $5 ;cursor_timer
    3695/    1A24 : F0 25                BEQ .cursor_done
    3696/    1A26 : 85 05                STA $5 ;cursor_timer
    3697/    1A28 : A5 04                LDA $4 ;cursor
    3698/    1A2A : F0 09                BEQ .draw_blank
    3699/    1A2C : A9 00                LDA #$0
    3700/    1A2E : 85 04                STA $4 ;cursor
    3701/    1A30 : A9 20                LDA #$20
    3702/    1A32 : 4C 3B 1A             JMP .draw
    3703/    1A35 :                      .draw_blank:
    3704/    1A35 : A9 FF                LDA #$FF
    3705/    1A37 : 85 04                STA $4 ;cursor
    3706/    1A39 : A9 61                LDA #$61
    3707/    1A3B :                      .draw:
    3708/    1A3B : 85 06                STA $6 ;arg
    3709/    1A3D : A5 06                LDA $6 ;arg
    3710/    1A3F : 85 10                STA $10 ;LCD_char.c_out
    3711/    1A41 : 20 F5 0A             JSR LCD_char
    3712/    1A44 : A5 26                LDA screen_ptr
    3713/    1A46 : 38                   SEC
    3714/    1A47 : E9 0C                SBC #$C
    3715/    1A49 : 85 26                STA screen_ptr
    3716/    1A4B :                      .cursor_done:
    3717/    1A4B : 4C 2D 19             JMP .loop
    3718/    1A4E : 60                   RTS
    3719/    1A4F :                      
    3720/    1A4F :                     LineWord:
    3721/    1A4F : A9 00                LDA #$0
    3722/    1A51 : 85 22                STA ret_val
    3723/    1A53 : A9 00                LDA #$0
    3724/    1A55 : 8D 19 08             STA new_word_len
    3725/    1A58 : AC 31 01             LDY input_buff_begin
    3726/    1A5B : CC 32 01             CPY input_buff_end
    3727/    1A5E : D0 01                BNE .chars_left
    3728/    1A60 : 60                   RTS
    3729/    1A61 :                      .chars_left:
    3730/    1A61 :                      .loop:
    3731/    1A61 : AC 31 01             LDY input_buff_begin
    3732/    1A64 : B9 33 01             LDA input_buff,Y
    3733/    1A67 : EE 31 01             INC input_buff_begin
    3734/    1A6A : C9 20                CMP #$20
    3735/    1A6C : D0 06                BNE .not_space
    3736/    1A6E : AD 19 08             LDA new_word_len
    3737/    1A71 : F0 14                BEQ .chars_left2
    3738/    1A73 : 60                   RTS
    3739/    1A74 :                      .not_space:
    3740/    1A74 : AC 19 08             LDY new_word_len
    3741/    1A77 : 99 1A 08             STA new_word_buff,Y
    3742/    1A7A : C8                   INY
    3743/    1A7B : 8C 19 08             STY new_word_len
    3744/    1A7E : C0 13                CPY #$13
    3745/    1A80 : D0 05                BNE .word_size_good
    3746/    1A82 : A9 02                LDA #$2
    3747/    1A84 : 85 22                STA ret_val
    3748/    1A86 : 60                   RTS
    3749/    1A87 :                      .word_size_good:
    3750/    1A87 :                      .chars_left2:
    3751/    1A87 : AD 31 01             LDA input_buff_begin
    3752/    1A8A : CD 32 01             CMP input_buff_end
    3753/    1A8D : F0 03                BEQ .found
    3754/    1A8F : 4C 61 1A             JMP .loop
    3755/    1A92 :                      .found:
    3756/    1A92 : 60                   RTS
    3757/    1A93 :                      
    3758/    1A93 :                     FindWord:
    3759/    1A93 : AD 19 08             LDA new_word_len
    3760/    1A96 : F0 37                BEQ .not_found
    3761/    1A98 : A9 62                LDA # (FORTH_WORDS) # $100
    3762/    1A9A : 85 24                STA ret_address
    3763/    1A9C : A9 1F                LDA # (FORTH_WORDS)/$100
    3764/    1A9E : 85 25                STA ret_address+$1
    3765/    1AA0 :                      .loop:
    3766/    1AA0 : A0 00                LDY #$0
    3767/    1AA2 : B1 24                LDA (ret_address),Y
    3768/    1AA4 : CD 19 08             CMP new_word_len
    3769/    1AA7 : D0 11                BNE .loop_next
    3770/    1AA9 : C8                   INY
    3771/    1AAA :                      .str_loop:
    3772/    1AAA : B1 24                LDA (ret_address),Y
    3773/    1AAC : D9 19 08             CMP new_word_buff-$1,Y
    3774/    1AAF : D0 09                BNE .no_match
    3775/    1AB1 : CC 19 08             CPY new_word_len
    3776/    1AB4 : F0 1C                BEQ .word_found
    3777/    1AB6 : C8                   INY
    3778/    1AB7 : 4C AA 1A             JMP .str_loop
    3779/    1ABA :                      .no_match:
    3780/    1ABA :                      .loop_next:
    3781/    1ABA : A0 00                LDY #$0
    3782/    1ABC : B1 24                LDA (ret_address),Y
    3783/    1ABE : A8                   TAY
    3784/    1ABF : C8                   INY
    3785/    1AC0 : B1 24                LDA (ret_address),Y
    3786/    1AC2 : 48                   PHA
    3787/    1AC3 : C8                   INY
    3788/    1AC4 : B1 24                LDA (ret_address),Y
    3789/    1AC6 : 85 25                STA ret_address+$1
    3790/    1AC8 : 68                   PLA
    3791/    1AC9 : 85 24                STA ret_address
    3792/    1ACB : 05 25                ORA ret_address+$1
    3793/    1ACD : D0 D1                BNE .loop
    3794/    1ACF :                      .not_found:
    3795/    1ACF : 85 22                STA ret_val
    3796/    1AD1 : 60                   RTS
    3797/    1AD2 :                      .word_found:
    3798/    1AD2 : A0 00                LDY #$0
    3799/    1AD4 : B1 24                LDA (ret_address),Y
    3800/    1AD6 : A8                   TAY
    3801/    1AD7 : C8                   INY
    3802/    1AD8 : C8                   INY
    3803/    1AD9 : C8                   INY
    3804/    1ADA : B1 24                LDA (ret_address),Y
    3805/    1ADC : 85 22                STA ret_val
    3806/    1ADE : C8                   INY
    3807/    1ADF : 18                   CLC
    3808/    1AE0 : 98                   TYA
    3809/    1AE1 : 65 24                ADC ret_address
    3810/    1AE3 : 85 32                STA obj_address
    3811/    1AE5 : A5 25                LDA ret_address+$1
    3812/    1AE7 : 69 00                ADC #$0
    3813/    1AE9 : 85 33                STA obj_address+$1
    3814/    1AEB : 60                   RTS
    3815/    1AEC :                      
    3816/    1AEC :                     CheckData:
    3817/    1AEC : A9 04                LDA #$4
    3818/    1AEE : 85 88                STA R_ans
    3819/    1AF0 : AD 19 08             LDA new_word_len
    3820/    1AF3 : D0 01                BNE .not_zero_len
    3821/    1AF5 : 60                   RTS
    3822/    1AF6 :                      .not_zero_len:
    3823/    1AF6 : A0 09                LDY #$9
    3824/    1AF8 : A9 00                LDA #$0
    3825/    1AFA :                      .zero_loop:
    3826/    1AFA : 99 88 00             STA R_ans,Y
    3827/    1AFD : 88                   DEY
    3828/    1AFE : D0 FA                BNE .zero_loop
    3829/    1B00 : A0 00                LDY #$0
    3830/    1B02 : AD 1A 08             LDA new_word_buff
    3831/    1B05 : C9 22                CMP #$22
    3832/    1B07 : D0 2D                BNE .not_string
    3833/    1B09 : AD 19 08             LDA new_word_len
    3834/    1B0C : C9 01                CMP #$1
    3835/    1B0E : D0 01                BNE .not_single_quote
    3836/    1B10 : 60                   RTS
    3837/    1B11 :                      .not_single_quote:
    3838/    1B11 : CE 19 08             DEC new_word_len
    3839/    1B14 :                      .loop_str:
    3840/    1B14 : B9 1B 08             LDA new_word_buff+$1,y
    3841/    1B17 : C9 22                CMP #$22
    3842/    1B19 : F0 10                BEQ .str_done
    3843/    1B1B : C0 08                CPY #$8
    3844/    1B1D : F0 0B                BEQ .string_too_long
    3845/    1B1F : 99 89 00             STA R_ans+$1,Y
    3846/    1B22 : C8                   INY
    3847/    1B23 : CC 19 08             CPY new_word_len
    3848/    1B26 : F0 02                BEQ .string_unterminated
    3849/    1B28 : D0 EA                BNE .loop_str
    3850/    1B2A :                      .string_too_long:
    3851/    1B2A :                      .string_unterminated:
    3852/    1B2A : 60                   RTS
    3853/    1B2B :                      .str_done:
    3854/    1B2B : C8                   INY
    3855/    1B2C : CC 19 08             CPY new_word_len
    3856/    1B2F : D0 04                BNE .str_return
    3857/    1B31 : A9 02                LDA #$2
    3858/    1B33 : 85 88                STA R_ans
    3859/    1B35 :                      .str_return:
    3860/    1B35 : 60                   RTS
    3861/    1B36 :                      .not_string:
    3862/    1B36 : C9 24                CMP #$24
    3863/    1B38 : D0 49                BNE .not_hex
    3864/    1B3A : AD 19 08             LDA new_word_len
    3865/    1B3D : C9 01                CMP #$1
    3866/    1B3F : F0 41                BEQ .hex_error
    3867/    1B41 : C9 06                CMP #$6
    3868/    1B43 : B0 3D                BCS .hex_error
    3869/    1B45 : CE 19 08             DEC new_word_len
    3870/    1B48 : A0 00                LDY #$0
    3871/    1B4A :                      .loop_hex:
    3872/    1B4A : B9 1B 08             LDA new_word_buff+$1,Y
    3873/    1B4D : C9 30                CMP #$30
    3874/    1B4F : 90 31                BCC .hex_error
    3875/    1B51 : C9 3A                CMP #$3A
    3876/    1B53 : B0 0D                BCS .not_digit
    3877/    1B55 : 38                   SEC
    3878/    1B56 : E9 30                SBC #$30
    3879/    1B58 : 20 12 1D             JSR .hex_rotate
    3880/    1B5B : 05 89                ORA R_ans+$1
    3881/    1B5D : 85 89                STA R_ans+$1
    3882/    1B5F : 4C 74 1B             JMP .hex_char_next
    3883/    1B62 :                      .not_digit:
    3884/    1B62 : C9 41                CMP #$41
    3885/    1B64 : 90 1C                BCC .hex_error
    3886/    1B66 : C9 47                CMP #$47
    3887/    1B68 : B0 18                BCS .hex_error
    3888/    1B6A : 38                   SEC
    3889/    1B6B : E9 37                SBC #$37
    3890/    1B6D : 20 12 1D             JSR .hex_rotate
    3891/    1B70 : 05 89                ORA R_ans+$1
    3892/    1B72 : 85 89                STA R_ans+$1
    3893/    1B74 :                      .hex_char_next:
    3894/    1B74 : C8                   INY
    3895/    1B75 : CC 19 08             CPY new_word_len
    3896/    1B78 : F0 04                BEQ .hex_done
    3897/    1B7A : C0 04                CPY #$4
    3898/    1B7C : D0 CC                BNE .loop_hex
    3899/    1B7E :                      .hex_done:
    3900/    1B7E : A9 03                LDA #$3
    3901/    1B80 : 85 88                STA R_ans
    3902/    1B82 :                      .hex_error:
    3903/    1B82 : 60                   RTS
    3904/    1B83 :                      .not_hex:
    3905/    1B83 : A9 07                LDA #$7
    3906/    1B85 : 85 06                STA $6 ;index
    3907/    1B87 : A9 00                LDA #$0
    3908/    1B89 : 85 07                STA $7 ;which_digit
    3909/    1B8B : 85 08                STA $8 ;negative
    3910/    1B8D : 85 09                STA $9 ;exp_negative
    3911/    1B8F : 85 0A                STA $A ;exp_count
    3912/    1B91 : 85 0E                STA $E ;digit_count
    3913/    1B93 : 85 0F                STA $F ;exp_digit_count
    3914/    1B95 : 85 0D                STA $D ;nonzero_found
    3915/    1B97 : 85 0C                STA $C ;dec_found
    3916/    1B99 : 85 0B                STA $B ;exp_found
    3917/    1B9B : 85 10                STA $10 ;digit_found
    3918/    1B9D : AD 1A 08             LDA new_word_buff
    3919/    1BA0 : C9 2D                CMP #$2D
    3920/    1BA2 : D0 08                BNE .float_no_neg
    3921/    1BA4 : A9 FF                LDA #$FF
    3922/    1BA6 : 85 08                STA $8 ;negative
    3923/    1BA8 : C8                   INY
    3924/    1BA9 : 4C B1 1B             JMP .float_first_done
    3925/    1BAC :                      .float_no_neg:
    3926/    1BAC : C9 65                CMP #$65
    3927/    1BAE : D0 01                BNE .float_not_exp
    3928/    1BB0 : 60                   RTS
    3929/    1BB1 :                      .float_not_exp:
    3930/    1BB1 :                      .float_first_done:
    3931/    1BB1 :                      .loop_float:
    3932/    1BB1 : B9 1A 08             LDA new_word_buff,Y
    3933/    1BB4 : 20 20 1D             JSR .digit
    3934/    1BB7 : 90 67                BCC .float_not_digit
    3935/    1BB9 : 48                   PHA
    3936/    1BBA : A5 0D                LDA $D ;nonzero_found
    3937/    1BBC : D0 20                BNE .digit_good
    3938/    1BBE : A9 FF                LDA #$FF
    3939/    1BC0 : 85 10                STA $10 ;digit_found
    3940/    1BC2 : 68                   PLA
    3941/    1BC3 : 48                   PHA
    3942/    1BC4 : F0 06                BEQ .digit_zero
    3943/    1BC6 : A9 FF                LDA #$FF
    3944/    1BC8 : 85 0D                STA $D ;nonzero_found
    3945/    1BCA : D0 12                BNE .digit_good
    3946/    1BCC :                      .digit_zero:
    3947/    1BCC : 68                   PLA
    3948/    1BCD : A5 0B                LDA $B ;exp_found
    3949/    1BCF : D0 25                BNE .float_next
    3950/    1BD1 : A5 0C                LDA $C ;dec_found
    3951/    1BD3 : D0 04                BNE .dec_exp_count
    3952/    1BD5 : A9 01                LDA #$1
    3953/    1BD7 : 85 0A                STA $A ;exp_count
    3954/    1BD9 :                      .dec_exp_count:
    3955/    1BD9 : C6 0A                DEC $A ;exp_count
    3956/    1BDB : 4C F6 1B             JMP .float_next
    3957/    1BDE :                      .digit_good:
    3958/    1BDE : A5 0B                LDA $B ;exp_found
    3959/    1BE0 : D0 1D                BNE .exp_digit
    3960/    1BE2 : A5 0E                LDA $E ;digit_count
    3961/    1BE4 : C9 0D                CMP #$D
    3962/    1BE6 : 90 04                BCC .digit_ok
    3963/    1BE8 : 68                   PLA
    3964/    1BE9 : 4C F0 1B             JMP .exp_check
    3965/    1BEC :                      .digit_ok:
    3966/    1BEC : 68                   PLA
    3967/    1BED : 20 2D 1D             JSR .add_digit
    3968/    1BF0 :                      .exp_check:
    3969/    1BF0 : A5 0C                LDA $C ;dec_found
    3970/    1BF2 : D0 02                BNE .no_dec_yet
    3971/    1BF4 : E6 0A                INC $A ;exp_count
    3972/    1BF6 :                      .no_dec_yet:
    3973/    1BF6 :                      .float_next:
    3974/    1BF6 : C8                   INY
    3975/    1BF7 : CC 19 08             CPY new_word_len
    3976/    1BFA : F0 6B                BEQ .float_done
    3977/    1BFC : 4C B1 1B             JMP .loop_float
    3978/    1BFF :                      .exp_digit:
    3979/    1BFF : A5 0F                LDA $F ;exp_digit_count
    3980/    1C01 : C9 03                CMP #$3
    3981/    1C03 : D0 02                BNE .exp_digit_ok
    3982/    1C05 : 68                   PLA
    3983/    1C06 : 60                   RTS
    3984/    1C07 :                      .exp_digit_ok:
    3985/    1C07 : 68                   PLA
    3986/    1C08 : 84 05                STY $5 ;y_buff
    3987/    1C0A : A0 04                LDY #$4
    3988/    1C0C :                      .exp_loop:
    3989/    1C0C : 06 90                ASL R_ans+$1+$7
    3990/    1C0E : 26 91                ROL R_ans+$1+$8
    3991/    1C10 : 88                   DEY
    3992/    1C11 : D0 F9                BNE .exp_loop
    3993/    1C13 : A4 05                LDY $5 ;y_buff
    3994/    1C15 : 05 90                ORA R_ans+$1+$7
    3995/    1C17 : 85 90                STA R_ans+$1+$7
    3996/    1C19 : E6 06                INC $6 ;index
    3997/    1C1B : E6 0F                INC $F ;exp_digit_count
    3998/    1C1D : 4C F6 1B             JMP .float_next
    3999/    1C20 :                      .float_not_digit:
    4000/    1C20 : C9 2E                CMP #$2E
    4001/    1C22 : D0 16                BNE .not_decimal_point
    4002/    1C24 : A5 0C                LDA $C ;dec_found
    4003/    1C26 : F0 01                BEQ .decimal_good
    4004/    1C28 : 60                   RTS
    4005/    1C29 :                      .decimal_good:
    4006/    1C29 : A5 0B                LDA $B ;exp_found
    4007/    1C2B : F0 01                BEQ .exp_good
    4008/    1C2D : 60                   RTS
    4009/    1C2E :                      .exp_good:
    4010/    1C2E : A5 0D                LDA $D ;nonzero_found
    4011/    1C30 : D0 02                BNE .no_implied_0
    4012/    1C32 : C6 0A                DEC $A ;exp_count
    4013/    1C34 :                      .no_implied_0:
    4014/    1C34 : A9 FF                LDA #$FF
    4015/    1C36 : 85 0C                STA $C ;dec_found
    4016/    1C38 : D0 BC                BNE .float_next
    4017/    1C3A :                      .not_decimal_point:
    4018/    1C3A : C9 65                CMP #$65
    4019/    1C3C : D0 13                BNE .not_exp
    4020/    1C3E : A5 0B                LDA $B ;exp_found
    4021/    1C40 : F0 01                BEQ .first_exp
    4022/    1C42 : 60                   RTS
    4023/    1C43 :                      .first_exp:
    4024/    1C43 : A9 00                LDA #$0
    4025/    1C45 : 85 06                STA $6 ;index
    4026/    1C47 : 85 07                STA $7 ;which_digit
    4027/    1C49 : 85 0D                STA $D ;nonzero_found
    4028/    1C4B : A9 FF                LDA #$FF
    4029/    1C4D : 85 0B                STA $B ;exp_found
    4030/    1C4F : D0 A5                BNE .float_next
    4031/    1C51 :                      .not_exp:
    4032/    1C51 : C9 2D                CMP #$2D
    4033/    1C53 : D0 11                BNE .not_minus
    4034/    1C55 : A5 0B                LDA $B ;exp_found
    4035/    1C57 : 49 FF                EOR #$FF
    4036/    1C59 : 05 06                ORA $6 ;index
    4037/    1C5B : 05 09                ORA $9 ;exp_negative
    4038/    1C5D : F0 01                BEQ .minus_good
    4039/    1C5F : 60                   RTS
    4040/    1C60 :                      .minus_good:
    4041/    1C60 : A9 FF                LDA #$FF
    4042/    1C62 : 85 09                STA $9 ;exp_negative
    4043/    1C64 : D0 90                BNE .float_next
    4044/    1C66 :                      .not_minus:
    4045/    1C66 : 60                   RTS
    4046/    1C67 :                      .float_done:
    4047/    1C67 : A5 0E                LDA $E ;digit_count
    4048/    1C69 : D0 0E                BNE .exp_count_good
    4049/    1C6B : A5 10                LDA $10 ;digit_found
    4050/    1C6D : D0 01                BNE .zero_ret
    4051/    1C6F : 60                   RTS
    4052/    1C70 :                      .zero_ret:
    4053/    1C70 : A9 00                LDA #$0
    4054/    1C72 : 85 90                STA R_ans+$1+$7
    4055/    1C74 : 85 91                STA R_ans+$1+$8
    4056/    1C76 : 4C 0D 1D             JMP .float_success
    4057/    1C79 :                      .exp_count_good:
    4058/    1C79 : A5 09                LDA $9 ;exp_negative
    4059/    1C7B : F0 0F                BEQ .exp_positive
    4060/    1C7D : A9 90                LDA # (R_ans+$1+$7) # $100
    4061/    1C7F : 85 11                STA $11 ;BCD_Reverse.source
    4062/    1C81 : A9 00                LDA # (R_ans+$1+$7)/$100
    4063/    1C83 : 85 12                STA $12 ;BCD_Reverse.source
    4064/    1C85 : A9 02                LDA #$2
    4065/    1C87 : 85 13                STA $13 ;BCD_Reverse.count
    4066/    1C89 : 20 CF 0B             JSR BCD_Reverse
    4067/    1C8C :                      .exp_positive:
    4068/    1C8C : F8                   SED
    4069/    1C8D : A9 00                LDA #$0
    4070/    1C8F : A4 0A                LDY $A ;exp_count
    4071/    1C91 : 30 10                BMI .exp_count_neg
    4072/    1C93 : 88                   DEY
    4073/    1C94 : F0 13                BEQ .exp_count_done
    4074/    1C96 : C0 FF                CPY #$FF
    4075/    1C98 : F0 09                BEQ .exp_count_neg
    4076/    1C9A :                      .exp_pos_loop:
    4077/    1C9A : 18                   CLC
    4078/    1C9B : 69 01                ADC #$1
    4079/    1C9D : 88                   DEY
    4080/    1C9E : D0 FA                BNE .exp_pos_loop
    4081/    1CA0 : 4C A9 1C             JMP .exp_count_done
    4082/    1CA3 :                      .exp_count_neg:
    4083/    1CA3 :                      .exp_min_loop:
    4084/    1CA3 : 38                   SEC
    4085/    1CA4 : E9 01                SBC #$1
    4086/    1CA6 : C8                   INY
    4087/    1CA7 : D0 FA                BNE .exp_min_loop
    4088/    1CA9 :                      .exp_count_done:
    4089/    1CA9 : 85 0A                STA $A ;exp_count
    4090/    1CAB : A0 99                LDY #$99
    4091/    1CAD : C9 50                CMP #$50
    4092/    1CAF : B0 02                BCS .exp_count_neg2
    4093/    1CB1 : A0 00                LDY #$0
    4094/    1CB3 :                      .exp_count_neg2:
    4095/    1CB3 : 84 06                STY $6 ;index
    4096/    1CB5 : 18                   CLC
    4097/    1CB6 : 65 90                ADC R_ans+$1+$7
    4098/    1CB8 : 85 90                STA R_ans+$1+$7
    4099/    1CBA : A5 06                LDA $6 ;index
    4100/    1CBC : 65 91                ADC R_ans+$1+$8
    4101/    1CBE : 85 91                STA R_ans+$1+$8
    4102/    1CC0 : D8                   CLD
    4103/    1CC1 : 8A                   TXA
    4104/    1CC2 : 48                   PHA
    4105/    1CC3 : A2 89                LDX #R_ans+$1
    4106/    1CC5 : 20 F0 0D             JSR BCD_Round
    4107/    1CC8 : 68                   PLA
    4108/    1CC9 : AA                   TAX
    4109/    1CCA : A9 00                LDA #$0
    4110/    1CCC : A4 91                LDY R_ans+$1+$8
    4111/    1CCE : C0 50                CPY #$50
    4112/    1CD0 : 90 11                BCC .exp_positive2
    4113/    1CD2 : A9 90                LDA # (R_ans+$1+$7) # $100
    4114/    1CD4 : 85 11                STA $11 ;BCD_Reverse.source
    4115/    1CD6 : A9 00                LDA # (R_ans+$1+$7)/$100
    4116/    1CD8 : 85 12                STA $12 ;BCD_Reverse.source
    4117/    1CDA : A9 02                LDA #$2
    4118/    1CDC : 85 13                STA $13 ;BCD_Reverse.count
    4119/    1CDE : 20 CF 0B             JSR BCD_Reverse
    4120/    1CE1 : A9 FF                LDA #$FF
    4121/    1CE3 :                      .exp_positive2:
    4122/    1CE3 : 85 09                STA $9 ;exp_negative
    4123/    1CE5 : A5 91                LDA R_ans+$1+$8
    4124/    1CE7 : C9 10                CMP #$10
    4125/    1CE9 : D0 01                BNE .no_exp_overflow
    4126/    1CEB : 60                   RTS
    4127/    1CEC :                      .no_exp_overflow:
    4128/    1CEC : A5 09                LDA $9 ;exp_negative
    4129/    1CEE : F0 06                BEQ .exp_no_neg_bit
    4130/    1CF0 : A5 91                LDA R_ans+$1+$8
    4131/    1CF2 : 09 40                ORA #$40
    4132/    1CF4 : 85 91                STA R_ans+$1+$8
    4133/    1CF6 :                      .exp_no_neg_bit:
    4134/    1CF6 : A5 08                LDA $8 ;negative
    4135/    1CF8 : F0 06                BEQ .positive
    4136/    1CFA : A5 91                LDA R_ans+$1+$8
    4137/    1CFC : 09 80                ORA #$80
    4138/    1CFE : 85 91                STA R_ans+$1+$8
    4139/    1D00 :                      .positive:
    4140/    1D00 : A0 01                LDY #$1
    4141/    1D02 :                      .shift_loop:
    4142/    1D02 : B9 89 00             LDA R_ans+$1,Y
    4143/    1D05 : 99 88 00             STA R_ans+$1-$1,Y
    4144/    1D08 : C8                   INY
    4145/    1D09 : C0 09                CPY #$9
    4146/    1D0B : D0 F5                BNE .shift_loop
    4147/    1D0D :                      .float_success:
    4148/    1D0D : A9 01                LDA #$1
    4149/    1D0F : 85 88                STA R_ans
    4150/    1D11 : 60                   RTS
    4151/    1D12 :                      .hex_rotate:
    4152/    1D12 : 84 05                STY $5 ;y_buff
    4153/    1D14 : A0 04                LDY #$4
    4154/    1D16 :                      .hex_rot_loop:
    4155/    1D16 : 06 89                ASL R_ans+$1
    4156/    1D18 : 26 8A                ROL R_ans+$2
    4157/    1D1A : 88                   DEY
    4158/    1D1B : D0 F9                BNE .hex_rot_loop
    4159/    1D1D : A4 05                LDY $5 ;y_buff
    4160/    1D1F : 60                   RTS
    4161/    1D20 :                      .digit:
    4162/    1D20 : C9 3A                CMP #$3A
    4163/    1D22 : B0 07                BCS .is_digit_no
    4164/    1D24 : C9 30                CMP #$30
    4165/    1D26 : 90 03                BCC .is_digit_no
    4166/    1D28 : E9 30                SBC #$30
    4167/    1D2A : 60                   RTS
    4168/    1D2B :                      .is_digit_no:
    4169/    1D2B : 18                   CLC
    4170/    1D2C : 60                   RTS
    4171/    1D2D :                      .add_digit:
    4172/    1D2D : 48                   PHA
    4173/    1D2E : 84 05                STY $5 ;y_buff
    4174/    1D30 : A4 06                LDY $6 ;index
    4175/    1D32 : E6 0E                INC $E ;digit_count
    4176/    1D34 : A5 07                LDA $7 ;which_digit
    4177/    1D36 : 49 FF                EOR #$FF
    4178/    1D38 : 85 07                STA $7 ;which_digit
    4179/    1D3A : F0 0B                BEQ .second_digit
    4180/    1D3C : 68                   PLA
    4181/    1D3D : 0A                   ASL
    4182/    1D3E : 0A                   ASL
    4183/    1D3F : 0A                   ASL
    4184/    1D40 : 0A                   ASL
    4185/    1D41 : 99 88 00             STA R_ans,Y
    4186/    1D44 : A4 05                LDY $5 ;y_buff
    4187/    1D46 : 60                   RTS
    4188/    1D47 :                      .second_digit:
    4189/    1D47 : 68                   PLA
    4190/    1D48 : 19 88 00             ORA R_ans,Y
    4191/    1D4B : 99 88 00             STA R_ans,Y
    4192/    1D4E : C6 06                DEC $6 ;index
    4193/    1D50 : A4 05                LDY $5 ;y_buff
    4194/    1D52 : 60                   RTS
    4195/    1D53 : 60                   RTS
    4196/    1D54 :                      
    4197/    1D54 :                     ExecToken:
    4198/    1D54 : A0 00                LDY #$0
    4199/    1D56 : 84 22                STY ret_val
    4200/    1D58 : A8                   TAY
    4201/    1D59 : B9 F3 2A             LDA JUMP_TABLE-$2,Y
    4202/    1D5C : 85 24                STA ret_address
    4203/    1D5E : B9 F4 2A             LDA JUMP_TABLE-$1,Y
    4204/    1D61 : 85 25                STA ret_address+$1
    4205/    1D63 :                      .address_ready:
    4206/    1D63 : A0 00                LDY #$0
    4207/    1D65 : B1 24                LDA (ret_address),Y
    4208/    1D67 : C9 05                CMP #$5
    4209/    1D69 : F0 09                BEQ .exec_primitive
    4210/    1D6B : C9 06                CMP #$6
    4211/    1D6D : F0 05                BEQ .exec_word
    4212/    1D6F : A9 0C                LDA #$C
    4213/    1D71 : 85 22                STA ret_val
    4214/    1D73 : 60                   RTS
    4215/    1D74 :                      .exec_word:
    4216/    1D74 :                      .exec_primitive:
    4217/    1D74 : C8                   INY
    4218/    1D75 : B1 24                LDA (ret_address),Y
    4219/    1D77 : F0 6D                BEQ .no_flags
    4220/    1D79 : 85 38                STA R0+$0
    4221/    1D7B : 29 03                AND #$3
    4222/    1D7D : 85 39                STA R0+$1
    4223/    1D7F : AD 74 01             LDA stack_count
    4224/    1D82 : C5 39                CMP R0+$1
    4225/    1D84 : B0 05                BCS .no_underflow
    4226/    1D86 : A9 0A                LDA #$A
    4227/    1D88 : 85 22                STA ret_val
    4228/    1D8A : 60                   RTS
    4229/    1D8B :                      .no_underflow:
    4230/    1D8B : A5 38                LDA R0+$0
    4231/    1D8D : 29 04                AND #$4
    4232/    1D8F : F0 0F                BEQ .no_add_item
    4233/    1D91 : A9 07                LDA #$7
    4234/    1D93 : CD 74 01             CMP stack_count
    4235/    1D96 : B0 05                BCS .no_overflow
    4236/    1D98 : A9 08                LDA #$8
    4237/    1D9A : 85 22                STA ret_val
    4238/    1D9C : 60                   RTS
    4239/    1D9D :                      .no_overflow:
    4240/    1D9D : 20 0F 1E             JSR StackAddItem
    4241/    1DA0 :                      .no_add_item:
    4242/    1DA0 : A5 38                LDA R0+$0
    4243/    1DA2 : 29 38                AND #$38
    4244/    1DA4 : F0 30                BEQ .type_check_done
    4245/    1DA6 : 48                   PHA
    4246/    1DA7 : A5 38                LDA R0+$0
    4247/    1DA9 : 29 03                AND #$3
    4248/    1DAB : A8                   TAY
    4249/    1DAC : 68                   PLA
    4250/    1DAD : C9 20                CMP #$20
    4251/    1DAF : D0 07                BNE .not_same
    4252/    1DB1 : B5 00                LDA $0,X
    4253/    1DB3 : 85 39                STA R0+$1
    4254/    1DB5 : 4C BD 1D             JMP .type_check
    4255/    1DB8 :                      .not_same:
    4256/    1DB8 : 4A                   LSR
    4257/    1DB9 : 4A                   LSR
    4258/    1DBA : 4A                   LSR
    4259/    1DBB : 85 39                STA R0+$1
    4260/    1DBD :                      .type_check:
    4261/    1DBD : 8A                   TXA
    4262/    1DBE : 48                   PHA
    4263/    1DBF :                      .type_loop:
    4264/    1DBF : B5 00                LDA $0,X
    4265/    1DC1 : C5 39                CMP R0+$1
    4266/    1DC3 : F0 07                BEQ .type_good
    4267/    1DC5 : 68                   PLA
    4268/    1DC6 : AA                   TAX
    4269/    1DC7 : A9 0C                LDA #$C
    4270/    1DC9 : 85 22                STA ret_val
    4271/    1DCB : 60                   RTS
    4272/    1DCC :                      .type_good:
    4273/    1DCC : 8A                   TXA
    4274/    1DCD : 18                   CLC
    4275/    1DCE : 69 09                ADC #$9
    4276/    1DD0 : AA                   TAX
    4277/    1DD1 : 88                   DEY
    4278/    1DD2 : D0 EB                BNE .type_loop
    4279/    1DD4 : 68                   PLA
    4280/    1DD5 : AA                   TAX
    4281/    1DD6 :                      .type_check_done:
    4282/    1DD6 : A5 38                LDA R0+$0
    4283/    1DD8 : 29 80                AND #$80
    4284/    1DDA : F0 0A                BEQ .mode_check_done
    4285/    1DDC : 2D 75 01             AND mode
    4286/    1DDF : D0 05                BNE .mode_check_done
    4287/    1DE1 : A9 12                LDA #$12
    4288/    1DE3 : 85 22                STA ret_val
    4289/    1DE5 : 60                   RTS
    4290/    1DE6 :                      .mode_check_done:
    4291/    1DE6 :                      .no_flags:
    4292/    1DE6 : 18                   CLC
    4293/    1DE7 : A5 24                LDA ret_address
    4294/    1DE9 : 69 02                ADC #$2
    4295/    1DEB : 85 24                STA ret_address
    4296/    1DED : 90 02                BCC .skip
    4297/    1DEF : E6 25                INC ret_address+$1
    4298/    1DF1 :                      .skip:
    4299/    1DF1 : 6C 24 00             JMP (ret_address)
    4300/    1DF4 : 60                   RTS
    4301/    1DF5 :                      
    4302/    1DF5 :                     ExecThread:
    4303/    1DF5 :                      .loop:
    4304/    1DF5 : A0 00                LDY #$0
    4305/    1DF7 : B1 30                LDA (exec_ptr),Y
    4306/    1DF9 : 20 54 1D             JSR ExecToken
    4307/    1DFC : A5 22                LDA ret_val
    4308/    1DFE : F0 06                BEQ .no_error
    4309/    1E00 : 20 09 18             JSR ErrorMsg
    4310/    1E03 : 4C EC 24             JMP CODE_QUIT+$2
    4311/    1E06 :                      .no_error:
    4312/    1E06 : E6 30                INC exec_ptr
    4313/    1E08 : D0 EB                BNE .loop
    4314/    1E0A : E6 31                INC exec_ptr+$1
    4315/    1E0C : D0 E7                BNE .loop
    4316/    1E0E : 60                   RTS
    4317/    1E0F :                      
    4318/    1E0F :                     StackAddItem:
    4319/    1E0F : 8A                   TXA
    4320/    1E10 : 38                   SEC
    4321/    1E11 : E9 09                SBC #$9
    4322/    1E13 : AA                   TAX
    4323/    1E14 : EE 74 01             INC stack_count
    4324/    1E17 : 60                   RTS
    4325/    1E18 :                      
    4326/    1E18 :                     DictEnd:
    4327/    1E18 : 48                   PHA
    4328/    1E19 : 20 69 1E             JSR AllocMem
    4329/    1E1C : A5 22                LDA ret_val
    4330/    1E1E : F0 02                BEQ .alloc_good
    4331/    1E20 : 68                   PLA
    4332/    1E21 : 60                   RTS
    4333/    1E22 :                      .alloc_good:
    4334/    1E22 : A0 00                LDY #$0
    4335/    1E24 : 68                   PLA
    4336/    1E25 : C9 04                CMP #$4
    4337/    1E27 : D0 0A                BNE .no_end_token
    4338/    1E29 : A9 58                LDA #$58
    4339/    1E2B : 91 2A                STA (dict_ptr),Y
    4340/    1E2D : E6 2A                INC dict_ptr
    4341/    1E2F : D0 02                BNE .skip
    4342/    1E31 : E6 2A                INC dict_ptr
    4343/    1E33 :                      .skip:
    4344/    1E33 :                      .no_end_token:
    4345/    1E33 : A9 00                LDA #$0
    4346/    1E35 : 91 2A                STA (dict_ptr),Y
    4347/    1E37 : C8                   INY
    4348/    1E38 : 91 2A                STA (dict_ptr),Y
    4349/    1E3A : C8                   INY
    4350/    1E3B : 91 2A                STA (dict_ptr),Y
    4351/    1E3D : A0 00                LDY #$0
    4352/    1E3F : B1 2E                LDA (dict_save),Y
    4353/    1E41 : A8                   TAY
    4354/    1E42 : C8                   INY
    4355/    1E43 : A5 2A                LDA dict_ptr
    4356/    1E45 : 91 2E                STA (dict_save),Y
    4357/    1E47 : A5 2B                LDA dict_ptr+$1
    4358/    1E49 : C8                   INY
    4359/    1E4A : 91 2E                STA (dict_save),Y
    4360/    1E4C : A5 2A                LDA dict_ptr
    4361/    1E4E : 85 2E                STA dict_save
    4362/    1E50 : A5 2B                LDA dict_ptr+$1
    4363/    1E52 : 85 2F                STA dict_save+$1
    4364/    1E54 : 60                   RTS
    4365/    1E55 :                      
    4366/    1E55 :                     IncDictPtr:
    4367/    1E55 : 18                   CLC
    4368/    1E56 : 65 2A                ADC dict_ptr
    4369/    1E58 : 85 2A                STA dict_ptr
    4370/    1E5A : 90 02                BCC .skip
    4371/    1E5C : E6 2B                INC dict_ptr+$1
    4372/    1E5E :                      .skip:
    4373/    1E5E : 60                   RTS
    4374/    1E5F :                      
    4375/    1E5F :                     IncExecPtr:
    4376/    1E5F : 18                   CLC
    4377/    1E60 : 65 30                ADC exec_ptr
    4378/    1E62 : 85 30                STA exec_ptr
    4379/    1E64 : 90 02                BCC .done
    4380/    1E66 : E6 31                INC exec_ptr+$1
    4381/    1E68 :                      .done:
    4382/    1E68 : 60                   RTS
    4383/    1E69 :                      
    4384/    1E69 :                     AllocMem:
    4385/    1E69 : A0 00                LDY #$0
    4386/    1E6B : 84 22                STY ret_val
    4387/    1E6D : 18                   CLC
    4388/    1E6E : 65 2A                ADC dict_ptr
    4389/    1E70 : 85 2C                STA new_dict_ptr
    4390/    1E72 : A9 00                LDA #$0
    4391/    1E74 : 65 2B                ADC dict_ptr+$1
    4392/    1E76 : 85 2D                STA new_dict_ptr+$1
    4393/    1E78 : 38                   SEC
    4394/    1E79 : A9 00                LDA #dict_end # $100
    4395/    1E7B : E5 2C                SBC new_dict_ptr
    4396/    1E7D : A9 08                LDA #dict_end/$100
    4397/    1E7F : E5 2D                SBC new_dict_ptr+$1
    4398/    1E81 : B0 04                BCS .mem_good
    4399/    1E83 : A9 14                LDA #$14
    4400/    1E85 : 85 22                STA ret_val
    4401/    1E87 :                      .mem_good:
    4402/    1E87 : 60                   RTS
    4403/    1E88 :                      
    4404/    1E88 :                     WriteToken:
    4405/    1E88 : 85 04                STA $4 ;token
    4406/    1E8A : A8                   TAY
    4407/    1E8B : A9 03                LDA #$3
    4408/    1E8D : C0 38                CPY #$38
    4409/    1E8F : F0 0A                BEQ .add_address
    4410/    1E91 : C0 32                CPY #$32
    4411/    1E93 : F0 06                BEQ .add_address
    4412/    1E95 : C0 72                CPY #$72
    4413/    1E97 : F0 02                BEQ .add_address
    4414/    1E99 : A9 01                LDA #$1
    4415/    1E9B :                      .add_address:
    4416/    1E9B : 85 05                STA $5 ;user_defined
    4417/    1E9D : 20 69 1E             JSR AllocMem
    4418/    1EA0 : A5 22                LDA ret_val
    4419/    1EA2 : F0 01                BEQ .success
    4420/    1EA4 : 60                   RTS
    4421/    1EA5 :                      .success:
    4422/    1EA5 : A5 04                LDA $4 ;token
    4423/    1EA7 : A0 00                LDY #$0
    4424/    1EA9 : 91 2A                STA (dict_ptr),Y
    4425/    1EAB : A5 05                LDA $5 ;user_defined
    4426/    1EAD : C9 01                CMP #$1
    4427/    1EAF : F0 0F                BEQ .return
    4428/    1EB1 : 18                   CLC
    4429/    1EB2 : A5 32                LDA obj_address
    4430/    1EB4 : 69 03                ADC #$3
    4431/    1EB6 : C8                   INY
    4432/    1EB7 : 91 2A                STA (dict_ptr),Y
    4433/    1EB9 : A5 33                LDA obj_address+$1
    4434/    1EBB : 69 00                ADC #$0
    4435/    1EBD : C8                   INY
    4436/    1EBE : 91 2A                STA (dict_ptr),Y
    4437/    1EC0 :                      .return:
    4438/    1EC0 : A5 2C                LDA new_dict_ptr
    4439/    1EC2 : 85 2A                STA dict_ptr
    4440/    1EC4 : A5 2D                LDA new_dict_ptr+$1
    4441/    1EC6 : 85 2B                STA dict_ptr+$1
    4442/    1EC8 : 60                   RTS
    4443/    1EC9 :                      
    4444/    1EC9 :                     WriteHeader:
    4445/    1EC9 : 68                   PLA
    4446/    1ECA : 85 3B                STA R0+$3
    4447/    1ECC : 68                   PLA
    4448/    1ECD : 85 3C                STA R0+$3+$1
    4449/    1ECF : AD 19 08             LDA new_word_len
    4450/    1ED2 : 85 3A                STA R0+$2
    4451/    1ED4 : 18                   CLC
    4452/    1ED5 : 69 07                ADC #$7
    4453/    1ED7 : A0 01                LDY #$1
    4454/    1ED9 : 71 3B                ADC (R0+$3),Y
    4455/    1EDB : 20 69 1E             JSR AllocMem
    4456/    1EDE : A5 22                LDA ret_val
    4457/    1EE0 : F0 06                BEQ .alloc_good
    4458/    1EE2 : A9 14                LDA #$14
    4459/    1EE4 : 85 22                STA ret_val
    4460/    1EE6 : D0 2A                BNE .return
    4461/    1EE8 :                      .alloc_good:
    4462/    1EE8 : AD 19 08             LDA new_word_len
    4463/    1EEB : A0 00                LDY #$0
    4464/    1EED : 91 2A                STA (dict_ptr),Y
    4465/    1EEF :                      .name_loop:
    4466/    1EEF : B9 1A 08             LDA new_word_buff,Y
    4467/    1EF2 : C8                   INY
    4468/    1EF3 : 91 2A                STA (dict_ptr),Y
    4469/    1EF5 : CC 19 08             CPY new_word_len
    4470/    1EF8 : D0 F5                BNE .name_loop
    4471/    1EFA : A9 06                LDA #$6
    4472/    1EFC : 85 38                STA R0+$0
    4473/    1EFE : A0 02                LDY #$2
    4474/    1F00 :                      .header_loop:
    4475/    1F00 : B1 3B                LDA (R0+$3),Y
    4476/    1F02 : C8                   INY
    4477/    1F03 : 84 39                STY R0+$1
    4478/    1F05 : A4 3A                LDY R0+$2
    4479/    1F07 : C8                   INY
    4480/    1F08 : 91 2A                STA (dict_ptr),Y
    4481/    1F0A : 84 3A                STY R0+$2
    4482/    1F0C : A4 39                LDY R0+$1
    4483/    1F0E : C6 38                DEC R0+$0
    4484/    1F10 : D0 EE                BNE .header_loop
    4485/    1F12 :                      .return:
    4486/    1F12 : A9 07                LDA #$7
    4487/    1F14 : 18                   CLC
    4488/    1F15 : 65 3B                ADC R0+$3
    4489/    1F17 : A8                   TAY
    4490/    1F18 : A5 3C                LDA R0+$3+$1
    4491/    1F1A : 69 00                ADC #$0
    4492/    1F1C : 48                   PHA
    4493/    1F1D : 98                   TYA
    4494/    1F1E : 48                   PHA
    4495/    1F1F : 60                   RTS
    4496/    1F20 :                      
    4497/    1F20 :                     TokenArgThread:
    4498/    1F20 : 48                   PHA
    4499/    1F21 : A9 03                LDA #$3
    4500/    1F23 : 20 69 1E             JSR AllocMem
    4501/    1F26 : A5 22                LDA ret_val
    4502/    1F28 : F0 02                BEQ .success
    4503/    1F2A : 68                   PLA
    4504/    1F2B : 60                   RTS
    4505/    1F2C :                      .success:
    4506/    1F2C : 68                   PLA
    4507/    1F2D : A0 00                LDY #$0
    4508/    1F2F : 91 2A                STA (dict_ptr),Y
    4509/    1F31 : A5 32                LDA obj_address
    4510/    1F33 : 18                   CLC
    4511/    1F34 : 69 03                ADC #$3
    4512/    1F36 : C8                   INY
    4513/    1F37 : 91 2A                STA (dict_ptr),Y
    4514/    1F39 : A5 33                LDA obj_address+$1
    4515/    1F3B : 69 00                ADC #$0
    4516/    1F3D : C8                   INY
    4517/    1F3E : 91 2A                STA (dict_ptr),Y
    4518/    1F40 : A5 2C                LDA new_dict_ptr
    4519/    1F42 : 85 2A                STA dict_ptr
    4520/    1F44 : A5 2D                LDA new_dict_ptr+$1
    4521/    1F46 : 85 2B                STA dict_ptr+$1
    4522/    1F48 : 60                   RTS
    4523/    1F49 :                      
    4524/    1F49 :                     HexFalse:
    4525/    1F49 : A9 00                LDA #$0
    4526/    1F4B : 4C 55 1F             JMP HEX_STUB
    4527/    1F4E : 60                   RTS
    4528/    1F4F :                      
    4529/    1F4F :                     HexTrue:
    4530/    1F4F : A9 FF                LDA #$FF
    4531/    1F51 : 4C 55 1F             JMP HEX_STUB
    4532/    1F54 : 60                   RTS
    4533/    1F55 :                      
    4534/    1F55 :                     HEX_STUB:
    4535/    1F55 : 95 02                STA $2,X
    4536/    1F57 : 95 01                STA $1,X
    4537/    1F59 : A9 00                LDA #$0
    4538/    1F5B : 95 07                STA $7,X
    4539/    1F5D : A9 03                LDA #$3
    4540/    1F5F : 95 00                STA $0,X
    4541/    1F61 : 60                   RTS
    4542/    1F62 :                      
    4543/    1F62 :                     FORTH_WORDS:
    4544/    1F62 :                      
    4545/    1F62 :                     WORD_DUP:
    4546/    1F62 : 03 44 55 50          FCB $3,"DUP"
    4547/    1F66 : 7A 1F                FDB WORD_SWAP
    4548/    1F68 : 02                   FCB $2
    4549/    1F69 :                      
    4550/    1F69 :                     CODE_DUP:
    4551/    1F69 : 05                   FCB $5
    4552/    1F6A : 05                   FCB $5
    4553/    1F6B : A0 09                LDY #$9
    4554/    1F6D : 8A                   TXA
    4555/    1F6E : 48                   PHA
    4556/    1F6F :                      .dup_loop:
    4557/    1F6F : B5 09                LDA $9,X
    4558/    1F71 : 95 00                STA $0,X
    4559/    1F73 : E8                   INX
    4560/    1F74 : 88                   DEY
    4561/    1F75 : D0 F8                BNE .dup_loop
    4562/    1F77 : 68                   PLA
    4563/    1F78 : AA                   TAX
    4564/    1F79 : 60                   RTS
    4565/    1F7A :                      
    4566/    1F7A :                     WORD_SWAP:
    4567/    1F7A : 04 53 57 41 50       FCB $4,"SWAP"
    4568/    1F7F : 99 1F                FDB WORD_DROP
    4569/    1F81 : 04                   FCB $4
    4570/    1F82 :                      
    4571/    1F82 :                     CODE_SWAP:
    4572/    1F82 : 05                   FCB $5
    4573/    1F83 : 02                   FCB $2
    4574/    1F84 : A0 09                LDY #$9
    4575/    1F86 : 8A                   TXA
    4576/    1F87 : 48                   PHA
    4577/    1F88 :                      .swap_loop:
    4578/    1F88 : B5 09                LDA $9,X
    4579/    1F8A : 48                   PHA
    4580/    1F8B : B5 00                LDA $0,X
    4581/    1F8D : 95 09                STA $9,X
    4582/    1F8F : 68                   PLA
    4583/    1F90 : 95 00                STA $0,X
    4584/    1F92 : E8                   INX
    4585/    1F93 : 88                   DEY
    4586/    1F94 : D0 F2                BNE .swap_loop
    4587/    1F96 : 68                   PLA
    4588/    1F97 : AA                   TAX
    4589/    1F98 : 60                   RTS
    4590/    1F99 :                      
    4591/    1F99 :                     WORD_DROP:
    4592/    1F99 : 04 44 52 4F 50       FCB $4,"DROP"
    4593/    1F9E : AC 1F                FDB WORD_OVER
    4594/    1FA0 : 06                   FCB $6
    4595/    1FA1 :                      
    4596/    1FA1 :                     CODE_DROP:
    4597/    1FA1 : 05                   FCB $5
    4598/    1FA2 : 01                   FCB $1
    4599/    1FA3 : 8A                   TXA
    4600/    1FA4 : 18                   CLC
    4601/    1FA5 : 69 09                ADC #$9
    4602/    1FA7 : AA                   TAX
    4603/    1FA8 : CE 74 01             DEC stack_count
    4604/    1FAB : 60                   RTS
    4605/    1FAC :                      
    4606/    1FAC :                     WORD_OVER:
    4607/    1FAC : 04 4F 56 45 52       FCB $4,"OVER"
    4608/    1FB1 : C5 1F                FDB WORD_ROT
    4609/    1FB3 : 08                   FCB $8
    4610/    1FB4 :                      
    4611/    1FB4 :                     CODE_OVER:
    4612/    1FB4 : 05                   FCB $5
    4613/    1FB5 : 06                   FCB $6
    4614/    1FB6 : 8A                   TXA
    4615/    1FB7 : 48                   PHA
    4616/    1FB8 : A0 09                LDY #$9
    4617/    1FBA :                      .over_loop:
    4618/    1FBA : B5 12                LDA $12,X
    4619/    1FBC : 95 00                STA $0,X
    4620/    1FBE : E8                   INX
    4621/    1FBF : 88                   DEY
    4622/    1FC0 : D0 F8                BNE .over_loop
    4623/    1FC2 : 68                   PLA
    4624/    1FC3 : AA                   TAX
    4625/    1FC4 : 60                   RTS
    4626/    1FC5 :                      
    4627/    1FC5 :                     WORD_ROT:
    4628/    1FC5 : 03 52 4F 54          FCB $3,"ROT"
    4629/    1FC9 : E9 1F                FDB WORD_MIN_ROT
    4630/    1FCB : 0A                   FCB $A
    4631/    1FCC :                      
    4632/    1FCC :                     CODE_ROT:
    4633/    1FCC : 05                   FCB $5
    4634/    1FCD : 03                   FCB $3
    4635/    1FCE : A0 09                LDY #$9
    4636/    1FD0 : 8A                   TXA
    4637/    1FD1 : 48                   PHA
    4638/    1FD2 :                      .rot_loop:
    4639/    1FD2 : B5 12                LDA $12,X
    4640/    1FD4 : 48                   PHA
    4641/    1FD5 : B5 09                LDA $9,X
    4642/    1FD7 : 48                   PHA
    4643/    1FD8 : B5 00                LDA $0,X
    4644/    1FDA : 95 09                STA $9,X
    4645/    1FDC : 68                   PLA
    4646/    1FDD : 95 12                STA $12,X
    4647/    1FDF : 68                   PLA
    4648/    1FE0 : 95 00                STA $0,X
    4649/    1FE2 : E8                   INX
    4650/    1FE3 : 88                   DEY
    4651/    1FE4 : D0 EC                BNE .rot_loop
    4652/    1FE6 : 68                   PLA
    4653/    1FE7 : AA                   TAX
    4654/    1FE8 : 60                   RTS
    4655/    1FE9 :                      
    4656/    1FE9 :                     WORD_MIN_ROT:
    4657/    1FE9 : 04 2D 52 4F 54       FCB $4,"-ROT"
    4658/    1FEE : 0E 20                FDB WORD_CLEAR
    4659/    1FF0 : 0C                   FCB $C
    4660/    1FF1 :                      
    4661/    1FF1 :                     CODE_MIN_ROT:
    4662/    1FF1 : 05                   FCB $5
    4663/    1FF2 : 03                   FCB $3
    4664/    1FF3 : A0 09                LDY #$9
    4665/    1FF5 : 8A                   TXA
    4666/    1FF6 : 48                   PHA
    4667/    1FF7 :                      .min_rot_loop:
    4668/    1FF7 : B5 12                LDA $12,X
    4669/    1FF9 : 48                   PHA
    4670/    1FFA : B5 09                LDA $9,X
    4671/    1FFC : 48                   PHA
    4672/    1FFD : B5 00                LDA $0,X
    4673/    1FFF : 95 12                STA $12,X
    4674/    2001 : 68                   PLA
    4675/    2002 : 95 00                STA $0,X
    4676/    2004 : 68                   PLA
    4677/    2005 : 95 09                STA $9,X
    4678/    2007 : E8                   INX
    4679/    2008 : 88                   DEY
    4680/    2009 : D0 EC                BNE .min_rot_loop
    4681/    200B : 68                   PLA
    4682/    200C : AA                   TAX
    4683/    200D : 60                   RTS
    4684/    200E :                      
    4685/    200E :                     WORD_CLEAR:
    4686/    200E : 05 43 4C 45 41 52    FCB $5,"CLEAR"
    4687/    2014 : 1F 20                FDB WORD_ADD
    4688/    2016 : 0E                   FCB $E
    4689/    2017 :                      
    4690/    2017 :                     CODE_CLEAR:
    4691/    2017 : 05                   FCB $5
    4692/    2018 : 00                   FCB $0
    4693/    2019 : A2 00                LDX #$0
    4694/    201B : 8E 74 01             STX stack_count
    4695/    201E : 60                   RTS
    4696/    201F :                      
    4697/    201F :                     WORD_ADD:
    4698/    201F : 01 2B                FCB $1,"+"
    4699/    2021 : 77 20                FDB WORD_SUB
    4700/    2023 : 10                   FCB $10
    4701/    2024 :                      
    4702/    2024 :                     CODE_ADD:
    4703/    2024 : 05                   FCB $5
    4704/    2025 : 22                   FCB $22
    4705/    2026 : B5 00                LDA $0,X
    4706/    2028 : C9 01                CMP #$1
    4707/    202A : D0 0C                BNE .not_float
    4708/    202C :                      .float:
    4709/    202C : 20 50 0C             JSR TosR0R1
    4710/    202F : 20 9F 0E             JSR BCD_Add
    4711/    2032 : 20 A3 1F             JSR CODE_DROP+$2
    4712/    2035 : 4C 67 0C             JMP RansTos
    4713/    2038 :                      .not_float:
    4714/    2038 : C9 02                CMP #$2
    4715/    203A : D0 01                BNE add_not_string
    4716/    203C :                      
    4717/    203C :                     ADD_STRING:
    4718/    203C : 60                   RTS
    4719/    203D :                      
    4720/    203D :                     add_not_string:
    4721/    203D : B5 07                LDA $7,X
    4722/    203F : 0A                   ASL
    4723/    2040 : 15 10                ORA $10,X
    4724/    2042 : D0 10                BNE .not_raw_hex
    4725/    2044 : 18                   CLC
    4726/    2045 : B5 01                LDA $1,X
    4727/    2047 : 75 0A                ADC $A,X
    4728/    2049 : 95 0A                STA $A,X
    4729/    204B : B5 02                LDA $2,X
    4730/    204D : 75 0B                ADC $B,X
    4731/    204F : 95 0B                STA $B,X
    4732/    2051 : 4C A3 1F             JMP CODE_DROP+$2
    4733/    2054 :                      .not_raw_hex:
    4734/    2054 : C9 01                CMP #$1
    4735/    2056 : D0 10                BNE .not_mixed1
    4736/    2058 :                      .mixed_add:
    4737/    2058 : 18                   CLC
    4738/    2059 : B5 01                LDA $1,X
    4739/    205B : 75 0E                ADC $E,X
    4740/    205D : 95 0E                STA $E,X
    4741/    205F : B5 02                LDA $2,X
    4742/    2061 : 75 0F                ADC $F,X
    4743/    2063 : 95 0F                STA $F,X
    4744/    2065 : 4C 83 2B             JMP HEX_RECALC
    4745/    2068 :                      .not_mixed1:
    4746/    2068 : C9 02                CMP #$2
    4747/    206A : D0 06                BNE .no_swap
    4748/    206C : 20 84 1F             JSR CODE_SWAP+$2
    4749/    206F : 4C 58 20             JMP .mixed_add
    4750/    2072 :                      .no_swap:
    4751/    2072 : A9 0C                LDA #$C
    4752/    2074 : 85 22                STA ret_val
    4753/    2076 : 60                   RTS
    4754/    2077 :                      
    4755/    2077 :                     WORD_SUB:
    4756/    2077 : 01 2D                FCB $1,"-"
    4757/    2079 : BD 20                FDB WORD_MULT
    4758/    207B : 12                   FCB $12
    4759/    207C :                      
    4760/    207C :                     CODE_SUB:
    4761/    207C : 05                   FCB $5
    4762/    207D : 22                   FCB $22
    4763/    207E : B5 00                LDA $0,X
    4764/    2080 : C9 01                CMP #$1
    4765/    2082 : D0 09                BNE .not_float
    4766/    2084 :                      .float:
    4767/    2084 : B5 08                LDA $8,X
    4768/    2086 : 49 80                EOR #$80
    4769/    2088 : 95 08                STA $8,X
    4770/    208A : 4C 2C 20             JMP CODE_ADD.float
    4771/    208D :                      .not_float:
    4772/    208D : B5 07                LDA $7,X
    4773/    208F : 0A                   ASL
    4774/    2090 : 15 10                ORA $10,X
    4775/    2092 : D0 10                BNE .not_raw_hex
    4776/    2094 :                      .hex:
    4777/    2094 : 38                   SEC
    4778/    2095 : B5 0A                LDA $A,X
    4779/    2097 : F5 01                SBC $1,X
    4780/    2099 : 95 0A                STA $A,X
    4781/    209B : B5 0B                LDA $B,X
    4782/    209D : F5 02                SBC $2,X
    4783/    209F : 95 0B                STA $B,X
    4784/    20A1 : 4C A3 1F             JMP CODE_DROP+$2
    4785/    20A4 :                      .not_raw_hex:
    4786/    20A4 : C9 01                CMP #$1
    4787/    20A6 : D0 10                BNE .not_smart_hex
    4788/    20A8 : 38                   SEC
    4789/    20A9 : B5 0E                LDA $E,X
    4790/    20AB : F5 01                SBC $1,X
    4791/    20AD : 95 0E                STA $E,X
    4792/    20AF : B5 0F                LDA $F,X
    4793/    20B1 : F5 02                SBC $2,X
    4794/    20B3 : 95 0F                STA $F,X
    4795/    20B5 : 4C 83 2B             JMP HEX_RECALC
    4796/    20B8 :                      .not_smart_hex:
    4797/    20B8 : A9 0C                LDA #$C
    4798/    20BA : 85 22                STA ret_val
    4799/    20BC : 60                   RTS
    4800/    20BD :                      
    4801/    20BD :                     WORD_MULT:
    4802/    20BD : 01 2A                FCB $1,"*"
    4803/    20BF : 3B 21                FDB WORD_DIV
    4804/    20C1 : 14                   FCB $14
    4805/    20C2 :                      
    4806/    20C2 :                     CODE_MULT:
    4807/    20C2 : 05                   FCB $5
    4808/    20C3 : 22                   FCB $22
    4809/    20C4 : B5 00                LDA $0,X
    4810/    20C6 : C9 01                CMP #$1
    4811/    20C8 : D0 0C                BNE mult_not_float
    4812/    20CA :                      
    4813/    20CA :                     MULT_FLOAT:
    4814/    20CA : 20 50 0C             JSR TosR0R1
    4815/    20CD : 20 86 0F             JSR BCD_Mult
    4816/    20D0 : 20 A3 1F             JSR CODE_DROP+$2
    4817/    20D3 : 4C 67 0C             JMP RansTos
    4818/    20D6 :                      
    4819/    20D6 :                     mult_not_float:
    4820/    20D6 : B5 07                LDA $7,X
    4821/    20D8 : 0A                   ASL
    4822/    20D9 : 15 10                ORA $10,X
    4823/    20DB : D0 59                BNE .not_raw_hex
    4824/    20DD : A9 00                LDA #$0
    4825/    20DF : 85 3A                STA R0+$2
    4826/    20E1 : 85 3B                STA R0+$3
    4827/    20E3 : B5 01                LDA $1,X
    4828/    20E5 : 85 38                STA R0
    4829/    20E7 : B5 0A                LDA $A,X
    4830/    20E9 : 20 15 21             JSR .mult_sub
    4831/    20EC : A5 3A                LDA R0+$2
    4832/    20EE : 85 3D                STA R0+$5
    4833/    20F0 : A5 3B                LDA R0+$3
    4834/    20F2 : 85 3A                STA R0+$2
    4835/    20F4 : A9 00                LDA #$0
    4836/    20F6 : 85 3B                STA R0+$3
    4837/    20F8 : B5 01                LDA $1,X
    4838/    20FA : 85 38                STA R0
    4839/    20FC : B5 0B                LDA $B,X
    4840/    20FE : 20 15 21             JSR .mult_sub
    4841/    2101 : B5 02                LDA $2,X
    4842/    2103 : 85 38                STA R0
    4843/    2105 : B5 0A                LDA $A,X
    4844/    2107 : 20 15 21             JSR .mult_sub
    4845/    210A : A5 3D                LDA R0+$5
    4846/    210C : 95 0A                STA $A,X
    4847/    210E : A5 3A                LDA R0+$2
    4848/    2110 : 95 0B                STA $B,X
    4849/    2112 : 4C A3 1F             JMP CODE_DROP+$2
    4850/    2115 :                      .mult_sub:
    4851/    2115 : 85 3C                STA R0+$4
    4852/    2117 : A9 00                LDA #$0
    4853/    2119 : 85 39                STA R0+$1
    4854/    211B : A0 08                LDY #$8
    4855/    211D :                      .loop:
    4856/    211D : 46 3C                LSR R0+$4
    4857/    211F : 90 0D                BCC .loop_next
    4858/    2121 : 18                   CLC
    4859/    2122 : A5 3A                LDA R0+$2
    4860/    2124 : 65 38                ADC R0
    4861/    2126 : 85 3A                STA R0+$2
    4862/    2128 : A5 3B                LDA R0+$3
    4863/    212A : 65 39                ADC R0+$1
    4864/    212C : 85 3B                STA R0+$3
    4865/    212E :                      .loop_next:
    4866/    212E : 06 38                ASL R0
    4867/    2130 : 26 39                ROL R0+$1
    4868/    2132 : 88                   DEY
    4869/    2133 : D0 E8                BNE .loop
    4870/    2135 : 60                   RTS
    4871/    2136 :                      .not_raw_hex:
    4872/    2136 : A9 0C                LDA #$C
    4873/    2138 : 85 22                STA ret_val
    4874/    213A : 60                   RTS
    4875/    213B :                      
    4876/    213B :                     WORD_DIV:
    4877/    213B : 01 2F                FCB $1,"/"
    4878/    213D : BA 21                FDB WORD_TICK
    4879/    213F : 16                   FCB $16
    4880/    2140 :                      
    4881/    2140 :                     CODE_DIV:
    4882/    2140 : 05                   FCB $5
    4883/    2141 : 22                   FCB $22
    4884/    2142 : B5 00                LDA $0,X
    4885/    2144 : C9 01                CMP #$1
    4886/    2146 : D0 11                BNE div_not_float
    4887/    2148 :                      
    4888/    2148 :                     DIV_FLOAT:
    4889/    2148 : 20 50 0C             JSR TosR0R1
    4890/    214B : 20 33 10             JSR BCD_Div
    4891/    214E : A5 22                LDA ret_val
    4892/    2150 : F0 01                BEQ .no_error
    4893/    2152 : 60                   RTS
    4894/    2153 :                      .no_error:
    4895/    2153 : 20 A3 1F             JSR CODE_DROP+$2
    4896/    2156 : 4C 67 0C             JMP RansTos
    4897/    2159 :                      
    4898/    2159 :                     div_not_float:
    4899/    2159 : B5 07                LDA $7,X
    4900/    215B : 0A                   ASL
    4901/    215C : 15 10                ORA $10,X
    4902/    215E : D0 55                BNE .not_raw_hex
    4903/    2160 : B5 01                LDA $1,X
    4904/    2162 : 85 38                STA R0
    4905/    2164 : B5 02                LDA $2,X
    4906/    2166 : 85 39                STA R0+$1
    4907/    2168 : 05 38                ORA R0
    4908/    216A : D0 05                BNE .div_zero_check
    4909/    216C : A9 0E                LDA #$E
    4910/    216E : 85 22                STA ret_val
    4911/    2170 : 60                   RTS
    4912/    2171 :                      .div_zero_check:
    4913/    2171 : B5 0A                LDA $A,X
    4914/    2173 : 85 3A                STA R0+$2
    4915/    2175 : B5 0B                LDA $B,X
    4916/    2177 : 85 3B                STA R0+$3
    4917/    2179 : A9 00                LDA #$0
    4918/    217B : 85 3C                STA R0+$4
    4919/    217D : 85 3D                STA R0+$5
    4920/    217F : A0 10                LDY #$10
    4921/    2181 :                      .loop:
    4922/    2181 : 06 3A                ASL R0+$2
    4923/    2183 : 26 3B                ROL R0+$3
    4924/    2185 : 26 3C                ROL R0+$4
    4925/    2187 : 26 3D                ROL R0+$5
    4926/    2189 : 38                   SEC
    4927/    218A : A5 3C                LDA R0+$4
    4928/    218C : E5 38                SBC R0
    4929/    218E : 48                   PHA
    4930/    218F : A5 3D                LDA R0+$5
    4931/    2191 : E5 39                SBC R0+$1
    4932/    2193 : 48                   PHA
    4933/    2194 : 90 0F                BCC .div_underflow
    4934/    2196 : A5 3A                LDA R0+$2
    4935/    2198 : 09 01                ORA #$1
    4936/    219A : 85 3A                STA R0+$2
    4937/    219C : 68                   PLA
    4938/    219D : 85 3D                STA R0+$5
    4939/    219F : 68                   PLA
    4940/    21A0 : 85 3C                STA R0+$4
    4941/    21A2 : 4C A7 21             JMP .loop_next
    4942/    21A5 :                      .div_underflow:
    4943/    21A5 : 68                   PLA
    4944/    21A6 : 68                   PLA
    4945/    21A7 :                      .loop_next:
    4946/    21A7 : 88                   DEY
    4947/    21A8 : D0 D7                BNE .loop
    4948/    21AA : A5 3A                LDA R0+$2
    4949/    21AC : 95 0A                STA $A,X
    4950/    21AE : A5 3B                LDA R0+$3
    4951/    21B0 : 95 0B                STA $B,X
    4952/    21B2 : 4C A3 1F             JMP CODE_DROP+$2
    4953/    21B5 :                      .not_raw_hex:
    4954/    21B5 : A9 0C                LDA #$C
    4955/    21B7 : 85 22                STA ret_val
    4956/    21B9 : 60                   RTS
    4957/    21BA :                      
    4958/    21BA :                     WORD_TICK:
    4959/    21BA : 01 27                FCB $1,"'"
    4960/    21BC : F6 21                FDB WORD_EXEC
    4961/    21BE : 18                   FCB $18
    4962/    21BF :                      
    4963/    21BF :                     CODE_TICK:
    4964/    21BF : 05                   FCB $5
    4965/    21C0 : 04                   FCB $4
    4966/    21C1 : 20 4F 1A             JSR LineWord
    4967/    21C4 : AD 19 08             LDA new_word_len
    4968/    21C7 : D0 07                BNE .word_found
    4969/    21C9 :                      .error_exit:
    4970/    21C9 : A9 02                LDA #$2
    4971/    21CB : 85 22                STA ret_val
    4972/    21CD : 4C A3 1F             JMP CODE_DROP+$2
    4973/    21D0 :                      .word_found:
    4974/    21D0 : 20 93 1A             JSR FindWord
    4975/    21D3 : A5 22                LDA ret_val
    4976/    21D5 : F0 F2                BEQ .error_exit
    4977/    21D7 : A5 24                LDA ret_address
    4978/    21D9 : 95 03                STA $3,X
    4979/    21DB : 95 01                STA $1,X
    4980/    21DD : A5 25                LDA ret_address+$1
    4981/    21DF : 95 04                STA $4,X
    4982/    21E1 : 95 02                STA $2,X
    4983/    21E3 : A9 00                LDA #$0
    4984/    21E5 : 95 05                STA $5,X
    4985/    21E7 : 95 06                STA $6,X
    4986/    21E9 : A9 03                LDA #$3
    4987/    21EB : 95 00                STA $0,X
    4988/    21ED : A9 01                LDA #$1
    4989/    21EF : 95 07                STA $7,X
    4990/    21F1 : A9 00                LDA #$0
    4991/    21F3 : 85 22                STA ret_val
    4992/    21F5 : 60                   RTS
    4993/    21F6 :                      
    4994/    21F6 :                     WORD_EXEC:
    4995/    21F6 : 04 45 58 45 43       FCB $4,"EXEC"
    4996/    21FB : 54 22                FDB WORD_STORE
    4997/    21FD : 1A                   FCB $1A
    4998/    21FE :                      
    4999/    21FE :                     CODE_EXEC:
    5000/    21FE : 05                   FCB $5
    5001/    21FF : 19                   FCB $19
    5002/    2200 : B5 01                LDA $1,X
    5003/    2202 : 85 24                STA ret_address
    5004/    2204 : B5 02                LDA $2,X
    5005/    2206 : 85 25                STA ret_address+$1
    5006/    2208 : 20 A3 1F             JSR CODE_DROP+$2
    5007/    220B : A0 00                LDY #$0
    5008/    220D : B1 24                LDA (ret_address),Y
    5009/    220F : 18                   CLC
    5010/    2210 : 69 04                ADC #$4
    5011/    2212 : A8                   TAY
    5012/    2213 : B1 24                LDA (ret_address),Y
    5013/    2215 : C9 05                CMP #$5
    5014/    2217 : F0 09                BEQ .primitive
    5015/    2219 : C9 06                CMP #$6
    5016/    221B : F0 12                BEQ .secondary
    5017/    221D : A9 0C                LDA #$C
    5018/    221F : 85 22                STA ret_val
    5019/    2221 : 60                   RTS
    5020/    2222 :                      .primitive:
    5021/    2222 : 98                   TYA
    5022/    2223 : 18                   CLC
    5023/    2224 : 65 24                ADC ret_address
    5024/    2226 : 85 24                STA ret_address
    5025/    2228 : 90 02                BCC .no_c
    5026/    222A : E6 25                INC ret_address+$1
    5027/    222C :                      .no_c:
    5028/    222C : 4C 63 1D             JMP ExecToken.address_ready
    5029/    222F :                      .secondary:
    5030/    222F : 84 38                STY R0
    5031/    2231 : 68                   PLA
    5032/    2232 : 68                   PLA
    5033/    2233 : A5 30                LDA exec_ptr
    5034/    2235 : 18                   CLC
    5035/    2236 : 69 01                ADC #$1
    5036/    2238 : A8                   TAY
    5037/    2239 : A5 31                LDA exec_ptr+$1
    5038/    223B : 69 00                ADC #$0
    5039/    223D : 48                   PHA
    5040/    223E : 98                   TYA
    5041/    223F : 48                   PHA
    5042/    2240 : A4 38                LDY R0
    5043/    2242 : C8                   INY
    5044/    2243 : C8                   INY
    5045/    2244 : C8                   INY
    5046/    2245 : 98                   TYA
    5047/    2246 : 18                   CLC
    5048/    2247 : 65 24                ADC ret_address
    5049/    2249 : 85 30                STA exec_ptr
    5050/    224B : A5 25                LDA ret_address+$1
    5051/    224D : 69 00                ADC #$0
    5052/    224F : 85 31                STA exec_ptr+$1
    5053/    2251 : 4C F5 1D             JMP ExecThread
    5054/    2254 :                      
    5055/    2254 :                     WORD_STORE:
    5056/    2254 : 01 21                FCB $1,"!"
    5057/    2256 : 74 22                FDB WORD_FETCH
    5058/    2258 : 1C                   FCB $1C
    5059/    2259 :                      
    5060/    2259 :                     CODE_STORE:
    5061/    2259 : 05                   FCB $5
    5062/    225A : 1A                   FCB $1A
    5063/    225B : B5 01                LDA $1,X
    5064/    225D : 85 24                STA ret_address
    5065/    225F : B5 02                LDA $2,X
    5066/    2261 : 85 25                STA ret_address+$1
    5067/    2263 : A0 00                LDY #$0
    5068/    2265 : B5 0A                LDA $A,X
    5069/    2267 : 91 24                STA (ret_address),Y
    5070/    2269 : B5 0B                LDA $B,X
    5071/    226B : C8                   INY
    5072/    226C : 91 24                STA (ret_address),Y
    5073/    226E : 20 A3 1F             JSR CODE_DROP+$2
    5074/    2271 : 4C A3 1F             JMP CODE_DROP+$2
    5075/    2274 :                      
    5076/    2274 :                     WORD_FETCH:
    5077/    2274 : 01 40                FCB $1,"@"
    5078/    2276 : 93 22                FDB WORD_CSTORE
    5079/    2278 : 1E                   FCB $1E
    5080/    2279 :                      
    5081/    2279 :                     CODE_FETCH:
    5082/    2279 : 05                   FCB $5
    5083/    227A : 19                   FCB $19
    5084/    227B : B5 01                LDA $1,X
    5085/    227D : 85 24                STA ret_address
    5086/    227F : B5 02                LDA $2,X
    5087/    2281 : 85 25                STA ret_address+$1
    5088/    2283 : A0 00                LDY #$0
    5089/    2285 : B1 24                LDA (ret_address),Y
    5090/    2287 : 95 01                STA $1,X
    5091/    2289 : C8                   INY
    5092/    228A : B1 24                LDA (ret_address),Y
    5093/    228C : 95 02                STA $2,X
    5094/    228E : A9 00                LDA #$0
    5095/    2290 : 95 07                STA $7,X
    5096/    2292 : 60                   RTS
    5097/    2293 :                      
    5098/    2293 :                     WORD_CSTORE:
    5099/    2293 : 02 43 21             FCB $2,"C!"
    5100/    2296 : AF 22                FDB WORD_CFETCH
    5101/    2298 : 20                   FCB $20
    5102/    2299 :                      
    5103/    2299 :                     CODE_CSTORE:
    5104/    2299 : 05                   FCB $5
    5105/    229A : 1A                   FCB $1A
    5106/    229B : B5 01                LDA $1,X
    5107/    229D : 85 24                STA ret_address
    5108/    229F : B5 02                LDA $2,X
    5109/    22A1 : 85 25                STA ret_address+$1
    5110/    22A3 : A0 00                LDY #$0
    5111/    22A5 : B5 0A                LDA $A,X
    5112/    22A7 : 91 24                STA (ret_address),Y
    5113/    22A9 : 20 A3 1F             JSR CODE_DROP+$2
    5114/    22AC : 4C A3 1F             JMP CODE_DROP+$2
    5115/    22AF :                      
    5116/    22AF :                     WORD_CFETCH:
    5117/    22AF : 02 43 40             FCB $2,"C@"
    5118/    22B2 : CE 22                FDB WORD_COLON
    5119/    22B4 : 22                   FCB $22
    5120/    22B5 :                      
    5121/    22B5 :                     CODE_CFETCH:
    5122/    22B5 : 05                   FCB $5
    5123/    22B6 : 19                   FCB $19
    5124/    22B7 : B5 01                LDA $1,X
    5125/    22B9 : 85 24                STA ret_address
    5126/    22BB : B5 02                LDA $2,X
    5127/    22BD : 85 25                STA ret_address+$1
    5128/    22BF : A0 00                LDY #$0
    5129/    22C1 : B1 24                LDA (ret_address),Y
    5130/    22C3 : 95 01                STA $1,X
    5131/    22C5 : A9 00                LDA #$0
    5132/    22C7 : 95 02                STA $2,X
    5133/    22C9 : A9 00                LDA #$0
    5134/    22CB : 95 07                STA $7,X
    5135/    22CD : 60                   RTS
    5136/    22CE :                      
    5137/    22CE :                     WORD_COLON:
    5138/    22CE : 01 3A                FCB $1,":"
    5139/    22D0 : 22 23                FDB WORD_SEMI
    5140/    22D2 : 24                   FCB $24
    5141/    22D3 :                      
    5142/    22D3 :                     CODE_COLON:
    5143/    22D3 : 05                   FCB $5
    5144/    22D4 : 40                   FCB $40
    5145/    22D5 : AD 75 01             LDA mode
    5146/    22D8 : C9 80                CMP #$80
    5147/    22DA : D0 05                BNE .not_compile
    5148/    22DC : A9 10                LDA #$10
    5149/    22DE : 85 22                STA ret_val
    5150/    22E0 : 60                   RTS
    5151/    22E1 :                      .not_compile:
    5152/    22E1 : 20 4F 1A             JSR LineWord
    5153/    22E4 : AD 19 08             LDA new_word_len
    5154/    22E7 : D0 05                BNE .name_word
    5155/    22E9 :                      .error_exit:
    5156/    22E9 : A9 02                LDA #$2
    5157/    22EB : 85 22                STA ret_val
    5158/    22ED : 60                   RTS
    5159/    22EE :                      .name_word:
    5160/    22EE : 20 93 1A             JSR FindWord
    5161/    22F1 : A5 22                LDA ret_val
    5162/    22F3 : F0 02                BEQ .word_not_found
    5163/    22F5 : D0 F2                BNE .error_exit
    5164/    22F7 :                      .word_not_found:
    5165/    22F7 : 20 EC 1A             JSR CheckData
    5166/    22FA : A5 88                LDA R_ans
    5167/    22FC : C9 04                CMP #$4
    5168/    22FE : D0 E9                BNE .error_exit
    5169/    2300 : A9 44                LDA #$44
    5170/    2302 : 8D 71 08             STA aux_stack_ptr
    5171/    2305 : A9 00                LDA #$0
    5172/    2307 : 8D 72 08             STA aux_stack_count
    5173/    230A : 20 C9 1E             JSR WriteHeader
    5174/    230D : 00                   FCB $0
    5175/    230E : 00 00                FDB $0
    5176/    2310 : 38                   FCB $38
    5177/    2311 : 06                   FCB $6
    5178/    2312 : 00 00                FDB $0
    5179/    2314 : A5 2C                LDA new_dict_ptr
    5180/    2316 : 85 2A                STA dict_ptr
    5181/    2318 : A5 2D                LDA new_dict_ptr+$1
    5182/    231A : 85 2B                STA dict_ptr+$1
    5183/    231C : A9 80                LDA #$80
    5184/    231E : 8D 75 01             STA mode
    5185/    2321 : 60                   RTS
    5186/    2322 :                      
    5187/    2322 :                     WORD_SEMI:
    5188/    2322 : 01 3B                FCB $1,";"
    5189/    2324 : 33 23                FDB WORD_FLOAT
    5190/    2326 : 26                   FCB $26
    5191/    2327 :                      
    5192/    2327 :                     CODE_SEMI:
    5193/    2327 : 05                   FCB $5
    5194/    2328 : C0                   FCB $C0
    5195/    2329 : A9 40                LDA #$40
    5196/    232B : 8D 75 01             STA mode
    5197/    232E : A9 04                LDA #$4
    5198/    2330 : 4C 18 1E             JMP DictEnd
    5199/    2333 :                      
    5200/    2333 :                     WORD_FLOAT:
    5201/    2333 : 00                   FCB $0,""
    5202/    2334 : 40 23                FDB WORD_HEX
    5203/    2336 : 28                   FCB $28
    5204/    2337 :                      
    5205/    2337 :                     CODE_FLOAT:
    5206/    2337 : 05                   FCB $5
    5207/    2338 : 04                   FCB $4
    5208/    2339 : 8A                   TXA
    5209/    233A : 48                   PHA
    5210/    233B : A9 01                LDA #$1
    5211/    233D : 4C 93 2B             JMP COPY_STUB
    5212/    2340 :                      
    5213/    2340 :                     WORD_HEX:
    5214/    2340 : 00                   FCB $0,""
    5215/    2341 : 4D 23                FDB WORD_STRING
    5216/    2343 : 2A                   FCB $2A
    5217/    2344 :                      
    5218/    2344 :                     CODE_HEX:
    5219/    2344 : 05                   FCB $5
    5220/    2345 : 04                   FCB $4
    5221/    2346 : 8A                   TXA
    5222/    2347 : 48                   PHA
    5223/    2348 : A9 03                LDA #$3
    5224/    234A : 4C 93 2B             JMP COPY_STUB
    5225/    234D :                      
    5226/    234D :                     WORD_STRING:
    5227/    234D : 00                   FCB $0,""
    5228/    234E : 5A 23                FDB WORD_HALT
    5229/    2350 : 2C                   FCB $2C
    5230/    2351 :                      
    5231/    2351 :                     CODE_STRING:
    5232/    2351 : 05                   FCB $5
    5233/    2352 : 04                   FCB $4
    5234/    2353 : 8A                   TXA
    5235/    2354 : 48                   PHA
    5236/    2355 : A9 02                LDA #$2
    5237/    2357 : 4C 93 2B             JMP COPY_STUB
    5238/    235A :                      
    5239/    235A :                     WORD_HALT:
    5240/    235A : 04 48 41 4C 54       FCB $4,"HALT"
    5241/    235F : 67 23                FDB WORD_VAR
    5242/    2361 : 2E                   FCB $2E
    5243/    2362 :                      
    5244/    2362 :                     CODE_HALT:
    5245/    2362 : 05                   FCB $5
    5246/    2363 : 00                   FCB $0
    5247/    2364 : 00                   BRK
    5248/    2365 : 00                   BRK
    5249/    2366 : 60                   RTS
    5250/    2367 :                      
    5251/    2367 :                     WORD_VAR:
    5252/    2367 : 03 56 41 52          FCB $3,"VAR"
    5253/    236B : CD 23                FDB WORD_VAR_THREAD
    5254/    236D : 30                   FCB $30
    5255/    236E :                      
    5256/    236E :                     CODE_VAR:
    5257/    236E : 05                   FCB $5
    5258/    236F : 00                   FCB $0
    5259/    2370 : 20 4F 1A             JSR LineWord
    5260/    2373 : AD 19 08             LDA new_word_len
    5261/    2376 : D0 07                BNE .word_found
    5262/    2378 :                      .error_exit:
    5263/    2378 : A9 02                LDA #$2
    5264/    237A : 85 22                STA ret_val
    5265/    237C : 4C A3 1F             JMP CODE_DROP+$2
    5266/    237F :                      .word_found:
    5267/    237F : 20 93 1A             JSR FindWord
    5268/    2382 : A5 22                LDA ret_val
    5269/    2384 : D0 F2                BNE .error_exit
    5270/    2386 :                      .var_create:
    5271/    2386 : 20 EC 1A             JSR CheckData
    5272/    2389 : A5 88                LDA R_ans
    5273/    238B : C9 04                CMP #$4
    5274/    238D : D0 E9                BNE .error_exit
    5275/    238F : 20 C9 1E             JSR WriteHeader
    5276/    2392 : 09                   FCB $9
    5277/    2393 : 00 00                FDB $0
    5278/    2395 : 32                   FCB $32
    5279/    2396 : 07                   FCB $7
    5280/    2397 : 00 00                FDB $0
    5281/    2399 : A5 22                LDA ret_val
    5282/    239B : F0 01                BEQ .no_error
    5283/    239D : 60                   RTS
    5284/    239E :                      .no_error:
    5285/    239E : AD 19 08             LDA new_word_len
    5286/    23A1 : 18                   CLC
    5287/    23A2 : 69 07                ADC #$7
    5288/    23A4 : 20 55 1E             JSR IncDictPtr
    5289/    23A7 : 38                   SEC
    5290/    23A8 : A5 2A                LDA dict_ptr
    5291/    23AA : E9 03                SBC #$3
    5292/    23AC : 85 32                STA obj_address
    5293/    23AE : A5 2B                LDA dict_ptr+$1
    5294/    23B0 : E9 00                SBC #$0
    5295/    23B2 : 85 33                STA obj_address+$1
    5296/    23B4 : A9 01                LDA #$1
    5297/    23B6 : A0 00                LDY #$0
    5298/    23B8 : 91 2A                STA (dict_ptr),Y
    5299/    23BA : 98                   TYA
    5300/    23BB : C8                   INY
    5301/    23BC :                      .loop:
    5302/    23BC : 91 2A                STA (dict_ptr),Y
    5303/    23BE : C8                   INY
    5304/    23BF : C0 09                CPY #$9
    5305/    23C1 : D0 F9                BNE .loop
    5306/    23C3 : A9 09                LDA #$9
    5307/    23C5 : 20 55 1E             JSR IncDictPtr
    5308/    23C8 : A9 03                LDA #$3
    5309/    23CA : 4C 18 1E             JMP DictEnd
    5310/    23CD :                      
    5311/    23CD :                     WORD_VAR_THREAD:
    5312/    23CD : 00                   FCB $0,""
    5313/    23CE : F3 23                FDB WORD_STO
    5314/    23D0 : 32                   FCB $32
    5315/    23D1 :                      
    5316/    23D1 :                     CODE_VAR_THREAD:
    5317/    23D1 : 05                   FCB $5
    5318/    23D2 : 04                   FCB $4
    5319/    23D3 : A0 01                LDY #$1
    5320/    23D5 : B1 30                LDA (exec_ptr),Y
    5321/    23D7 : 85 24                STA ret_address
    5322/    23D9 : C8                   INY
    5323/    23DA : B1 30                LDA (exec_ptr),Y
    5324/    23DC : 85 25                STA ret_address+$1
    5325/    23DE : 8A                   TXA
    5326/    23DF : 48                   PHA
    5327/    23E0 : A0 00                LDY #$0
    5328/    23E2 :                      .loop:
    5329/    23E2 : B1 24                LDA (ret_address),Y
    5330/    23E4 : 95 00                STA $0,X
    5331/    23E6 : E8                   INX
    5332/    23E7 : C8                   INY
    5333/    23E8 : C0 09                CPY #$9
    5334/    23EA : D0 F6                BNE .loop
    5335/    23EC : 68                   PLA
    5336/    23ED : AA                   TAX
    5337/    23EE : A9 02                LDA #$2
    5338/    23F0 : 4C 5F 1E             JMP IncExecPtr
    5339/    23F3 :                      
    5340/    23F3 :                     WORD_STO:
    5341/    23F3 : 03 53 54 4F          FCB $3,"STO"
    5342/    23F7 : 6F 24                FDB WORD_STO_CHAR
    5343/    23F9 : 34                   FCB $34
    5344/    23FA :                      
    5345/    23FA :                     CODE_STO:
    5346/    23FA : 05                   FCB $5
    5347/    23FB : 40                   FCB $40
    5348/    23FC : AD 75 01             LDA mode
    5349/    23FF : C9 40                CMP #$40
    5350/    2401 : F0 1C                BEQ .immediate
    5351/    2403 : 20 4F 1A             JSR LineWord
    5352/    2406 : AD 19 08             LDA new_word_len
    5353/    2409 : F0 28                BEQ .error_exit
    5354/    240B : 20 93 1A             JSR FindWord
    5355/    240E : A5 22                LDA ret_val
    5356/    2410 : F0 21                BEQ .error_exit
    5357/    2412 : A0 00                LDY #$0
    5358/    2414 : B1 32                LDA (obj_address),Y
    5359/    2416 : C9 07                CMP #$7
    5360/    2418 : D0 35                BNE .error_type
    5361/    241A : A9 40                LDA #$40
    5362/    241C : 4C 20 1F             JMP TokenArgThread
    5363/    241F :                      .immediate:
    5364/    241F : AD 74 01             LDA stack_count
    5365/    2422 : C9 01                CMP #$1
    5366/    2424 : B0 05                BCS .count_good
    5367/    2426 : A9 0A                LDA #$A
    5368/    2428 : 85 22                STA ret_val
    5369/    242A : 60                   RTS
    5370/    242B :                      .count_good:
    5371/    242B : 20 4F 1A             JSR LineWord
    5372/    242E : AD 19 08             LDA new_word_len
    5373/    2431 : D0 05                BNE .word_found
    5374/    2433 :                      .error_exit:
    5375/    2433 : A9 02                LDA #$2
    5376/    2435 : 85 22                STA ret_val
    5377/    2437 : 60                   RTS
    5378/    2438 :                      .word_found:
    5379/    2438 : 20 93 1A             JSR FindWord
    5380/    243B : A5 22                LDA ret_val
    5381/    243D : D0 08                BNE .word_exists
    5382/    243F : 20 86 23             JSR CODE_VAR.var_create
    5383/    2442 : A5 22                LDA ret_val
    5384/    2444 : F0 0E                BEQ .type_good
    5385/    2446 : 60                   RTS
    5386/    2447 :                      .word_exists:
    5387/    2447 : A0 00                LDY #$0
    5388/    2449 : B1 32                LDA (obj_address),Y
    5389/    244B : C9 07                CMP #$7
    5390/    244D : F0 05                BEQ .type_good
    5391/    244F :                      .error_type:
    5392/    244F : A9 0C                LDA #$C
    5393/    2451 : 85 22                STA ret_val
    5394/    2453 : 60                   RTS
    5395/    2454 :                      .type_good:
    5396/    2454 : A0 03                LDY #$3
    5397/    2456 :                      .copy_data:
    5398/    2456 : A9 09                LDA #$9
    5399/    2458 : 85 38                STA R0
    5400/    245A : 8A                   TXA
    5401/    245B : 48                   PHA
    5402/    245C :                      .loop:
    5403/    245C : B5 00                LDA $0,X
    5404/    245E : 91 32                STA (obj_address),Y
    5405/    2460 : E8                   INX
    5406/    2461 : C8                   INY
    5407/    2462 : C6 38                DEC R0
    5408/    2464 : D0 F6                BNE .loop
    5409/    2466 : 68                   PLA
    5410/    2467 : AA                   TAX
    5411/    2468 : A9 00                LDA #$0
    5412/    246A : 85 22                STA ret_val
    5413/    246C : 4C A3 1F             JMP CODE_DROP+$2
    5414/    246F :                      
    5415/    246F :                     WORD_STO_CHAR:
    5416/    246F : 01 64                FCB $1,'d'
    5417/    2471 : 79 24                FDB WORD_FREE
    5418/    2473 : 34                   FCB $34
    5419/    2474 :                      
    5420/    2474 :                     CODE_STO_CHAR:
    5421/    2474 : 05                   FCB $5
    5422/    2475 : 01                   FCB $1
    5423/    2476 : 4C FC 23             JMP CODE_STO+$2
    5424/    2479 :                      
    5425/    2479 :                     WORD_FREE:
    5426/    2479 : 04 46 52 45 45       FCB $4,"FREE"
    5427/    247E : 99 24                FDB WORD_SECONDARY
    5428/    2480 : 36                   FCB $36
    5429/    2481 :                      
    5430/    2481 :                     CODE_FREE:
    5431/    2481 : 05                   FCB $5
    5432/    2482 : 04                   FCB $4
    5433/    2483 : A9 03                LDA #$3
    5434/    2485 : 95 00                STA $0,X
    5435/    2487 : A9 00                LDA #dict_end # $100
    5436/    2489 : 38                   SEC
    5437/    248A : E5 2A                SBC dict_ptr
    5438/    248C : 95 01                STA $1,X
    5439/    248E : A9 08                LDA #dict_end/$100
    5440/    2490 : E5 2B                SBC dict_ptr+$1
    5441/    2492 : 95 02                STA $2,X
    5442/    2494 : A9 00                LDA #$0
    5443/    2496 : 95 07                STA $7,X
    5444/    2498 : 60                   RTS
    5445/    2499 :                      
    5446/    2499 :                     WORD_SECONDARY:
    5447/    2499 : 00                   FCB $0,""
    5448/    249A : C1 24                FDB WORD_EXIT
    5449/    249C : 38                   FCB $38
    5450/    249D :                      
    5451/    249D :                     CODE_SECONDARY:
    5452/    249D : 05                   FCB $5
    5453/    249E : 00                   FCB $0
    5454/    249F : 68                   PLA
    5455/    24A0 : 68                   PLA
    5456/    24A1 : EE 73 08             INC aux_word_counter
    5457/    24A4 : A5 30                LDA exec_ptr
    5458/    24A6 : 18                   CLC
    5459/    24A7 : 69 03                ADC #$3
    5460/    24A9 : A8                   TAY
    5461/    24AA : A5 31                LDA exec_ptr+$1
    5462/    24AC : 69 00                ADC #$0
    5463/    24AE : 48                   PHA
    5464/    24AF : 98                   TYA
    5465/    24B0 : 48                   PHA
    5466/    24B1 : A0 01                LDY #$1
    5467/    24B3 : B1 30                LDA (exec_ptr),Y
    5468/    24B5 : 48                   PHA
    5469/    24B6 : C8                   INY
    5470/    24B7 : B1 30                LDA (exec_ptr),Y
    5471/    24B9 : 85 31                STA exec_ptr+$1
    5472/    24BB : 68                   PLA
    5473/    24BC : 85 30                STA exec_ptr
    5474/    24BE : 4C F5 1D             JMP ExecThread
    5475/    24C1 :                      
    5476/    24C1 :                     WORD_EXIT:
    5477/    24C1 : 04 45 58 49 54       FCB $4,"EXIT"
    5478/    24C6 : D4 24                FDB WORD_BREAK
    5479/    24C8 : 3A                   FCB $3A
    5480/    24C9 :                      
    5481/    24C9 :                     CODE_EXIT:
    5482/    24C9 : 05                   FCB $5
    5483/    24CA : C0                   FCB $C0
    5484/    24CB : 68                   PLA
    5485/    24CC : 68                   PLA
    5486/    24CD : A9 58                LDA #$58
    5487/    24CF : 85 22                STA ret_val
    5488/    24D1 : 4C 01 2D             JMP main.compile_word
    5489/    24D4 :                      
    5490/    24D4 :                     WORD_BREAK:
    5491/    24D4 : 00                   FCB $0,""
    5492/    24D5 : E2 24                FDB WORD_QUIT
    5493/    24D7 : 3C                   FCB $3C
    5494/    24D8 :                      
    5495/    24D8 :                     CODE_BREAK:
    5496/    24D8 : 05                   FCB $5
    5497/    24D9 : 00                   FCB $0
    5498/    24DA : 8A                   TXA
    5499/    24DB : A2 2F                LDX #$2F
    5500/    24DD : 9A                   TXS
    5501/    24DE : AA                   TAX
    5502/    24DF : 4C B2 2C             JMP main.process_loop
    5503/    24E2 :                      
    5504/    24E2 :                     WORD_QUIT:
    5505/    24E2 : 04 51 55 49 54       FCB $4,"QUIT"
    5506/    24E7 : 0C 25                FDB WORD_STO_THREAD
    5507/    24E9 : 3E                   FCB $3E
    5508/    24EA :                      
    5509/    24EA :                     CODE_QUIT:
    5510/    24EA : 05                   FCB $5
    5511/    24EB : 00                   FCB $0
    5512/    24EC : AD 31 01             LDA input_buff_begin
    5513/    24EF : 8D 32 01             STA input_buff_end
    5514/    24F2 : A9 00                LDA #$0
    5515/    24F4 : 8D 72 08             STA aux_stack_count
    5516/    24F7 : 8D 73 08             STA aux_word_counter
    5517/    24FA : A9 43                LDA #$43
    5518/    24FC : 8D 71 08             STA aux_stack_ptr
    5519/    24FF : 8A                   TXA
    5520/    2500 : A2 2F                LDX #$2F
    5521/    2502 : 9A                   TXS
    5522/    2503 : AA                   TAX
    5523/    2504 : A9 40                LDA #$40
    5524/    2506 : 8D 75 01             STA mode
    5525/    2509 : 4C A4 2C             JMP main.mode_good
    5526/    250C :                      
    5527/    250C :                     WORD_STO_THREAD:
    5528/    250C : 00                   FCB $0,""
    5529/    250D : 27 25                FDB WORD_DO
    5530/    250F : 40                   FCB $40
    5531/    2510 :                      
    5532/    2510 :                     CODE_STO_THREAD:
    5533/    2510 : 05                   FCB $5
    5534/    2511 : 00                   FCB $0
    5535/    2512 : A0 01                LDY #$1
    5536/    2514 : B1 30                LDA (exec_ptr),Y
    5537/    2516 : 85 32                STA obj_address
    5538/    2518 : C8                   INY
    5539/    2519 : B1 30                LDA (exec_ptr),Y
    5540/    251B : 85 33                STA obj_address+$1
    5541/    251D : A9 02                LDA #$2
    5542/    251F : 20 5F 1E             JSR IncExecPtr
    5543/    2522 : A0 00                LDY #$0
    5544/    2524 : 4C 56 24             JMP CODE_STO.copy_data
    5545/    2527 :                      
    5546/    2527 :                     WORD_DO:
    5547/    2527 : 02 44 4F             FCB $2,"DO"
    5548/    252A : 51 25                FDB WORD_DO_THREAD
    5549/    252C : 42                   FCB $42
    5550/    252D :                      
    5551/    252D :                     CODE_DO:
    5552/    252D : 05                   FCB $5
    5553/    252E : C0                   FCB $C0
    5554/    252F : A9 01                LDA #$1
    5555/    2531 : 20 92 18             JSR AuxPushShort
    5556/    2534 : A5 22                LDA ret_val
    5557/    2536 : F0 01                BEQ .mem_good
    5558/    2538 : 60                   RTS
    5559/    2539 :                      .mem_good:
    5560/    2539 : 38                   SEC
    5561/    253A : A5 2A                LDA dict_ptr
    5562/    253C : E9 03                SBC #$3
    5563/    253E : 99 2E 08             STA AUX_STACK+$1,Y
    5564/    2541 : A5 2B                LDA dict_ptr+$1
    5565/    2543 : E9 00                SBC #$0
    5566/    2545 : 99 2F 08             STA AUX_STACK+$2,Y
    5567/    2548 : 68                   PLA
    5568/    2549 : 68                   PLA
    5569/    254A : A9 44                LDA #$44
    5570/    254C : 85 22                STA ret_val
    5571/    254E : 4C 01 2D             JMP main.compile_word
    5572/    2551 :                      
    5573/    2551 :                     WORD_DO_THREAD:
    5574/    2551 : 00                   FCB $0,""
    5575/    2552 : 95 25                FDB WORD_LOOP
    5576/    2554 : 44                   FCB $44
    5577/    2555 :                      
    5578/    2555 :                     CODE_DO_THREAD:
    5579/    2555 : 05                   FCB $5
    5580/    2556 : 0A                   FCB $A
    5581/    2557 : AD 72 08             LDA aux_stack_count
    5582/    255A : C9 04                CMP #$4
    5583/    255C : D0 05                BNE .mem_good
    5584/    255E : A9 14                LDA #$14
    5585/    2560 : 85 22                STA ret_val
    5586/    2562 : 60                   RTS
    5587/    2563 :                      .mem_good:
    5588/    2563 : EE 72 08             INC aux_stack_count
    5589/    2566 : 38                   SEC
    5590/    2567 : AD 71 08             LDA aux_stack_ptr
    5591/    256A : E9 11                SBC #$11
    5592/    256C : 8D 71 08             STA aux_stack_ptr
    5593/    256F : A8                   TAY
    5594/    2570 : AD 73 08             LDA aux_word_counter
    5595/    2573 : 99 2D 08             STA AUX_STACK,Y
    5596/    2576 : A9 08                LDA #$8
    5597/    2578 : 85 38                STA R0
    5598/    257A :                      .loop:
    5599/    257A : B5 01                LDA $1,X
    5600/    257C : 99 36 08             STA AUX_STACK+$9,Y
    5601/    257F : B5 0A                LDA $A,X
    5602/    2581 : 99 2E 08             STA AUX_STACK+$1,Y
    5603/    2584 : E8                   INX
    5604/    2585 : C8                   INY
    5605/    2586 : C6 38                DEC R0
    5606/    2588 : D0 F0                BNE .loop
    5607/    258A : 8A                   TXA
    5608/    258B : 38                   SEC
    5609/    258C : E9 08                SBC #$8
    5610/    258E : AA                   TAX
    5611/    258F : 20 A3 1F             JSR CODE_DROP+$2
    5612/    2592 : 4C A3 1F             JMP CODE_DROP+$2
    5613/    2595 :                      
    5614/    2595 :                     WORD_LOOP:
    5615/    2595 : 04 4C 4F 4F 50       FCB $4,"LOOP"
    5616/    259A : EA 25                FDB WORD_LOOP_THREAD
    5617/    259C : 46                   FCB $46
    5618/    259D :                      
    5619/    259D :                     CODE_LOOP:
    5620/    259D : 05                   FCB $5
    5621/    259E : C0                   FCB $C0
    5622/    259F :                      .loop:
    5623/    259F : 20 B1 18             JSR AuxPopShort
    5624/    25A2 : A5 22                LDA ret_val
    5625/    25A4 : F0 01                BEQ .pop_good
    5626/    25A6 : 60                   RTS
    5627/    25A7 :                      .pop_good:
    5628/    25A7 : AC 71 08             LDY aux_stack_ptr
    5629/    25AA : B9 2A 08             LDA AUX_STACK-$3,Y
    5630/    25AD : C9 01                CMP #$1
    5631/    25AF : F0 2A                BEQ .loop_done
    5632/    25B1 : C9 03                CMP #$3
    5633/    25B3 : F0 09                BEQ .process_leave
    5634/    25B5 : C9 06                CMP #$6
    5635/    25B7 : F0 E6                BEQ .loop
    5636/    25B9 : A9 16                LDA #$16
    5637/    25BB : 85 22                STA ret_val
    5638/    25BD : 60                   RTS
    5639/    25BE :                      .process_leave:
    5640/    25BE : B9 2B 08             LDA AUX_STACK-$2,Y
    5641/    25C1 : 85 24                STA ret_address
    5642/    25C3 : B9 2C 08             LDA AUX_STACK-$1,Y
    5643/    25C6 : 85 25                STA ret_address+$1
    5644/    25C8 : 18                   CLC
    5645/    25C9 : A5 2A                LDA dict_ptr
    5646/    25CB : 69 02                ADC #$2
    5647/    25CD : A0 01                LDY #$1
    5648/    25CF : 91 24                STA (ret_address),Y
    5649/    25D1 : A5 2B                LDA dict_ptr+$1
    5650/    25D3 : 69 00                ADC #$0
    5651/    25D5 : C8                   INY
    5652/    25D6 : 91 24                STA (ret_address),Y
    5653/    25D8 : 4C 9F 25             JMP .loop
    5654/    25DB :                      .loop_done:
    5655/    25DB : B9 2B 08             LDA AUX_STACK-$2,Y
    5656/    25DE : 85 32                STA obj_address
    5657/    25E0 : B9 2C 08             LDA AUX_STACK-$1,Y
    5658/    25E3 : 85 33                STA obj_address+$1
    5659/    25E5 : A9 48                LDA #$48
    5660/    25E7 : 4C 20 1F             JMP TokenArgThread
    5661/    25EA :                      
    5662/    25EA :                     WORD_LOOP_THREAD:
    5663/    25EA : 00                   FCB $0,""
    5664/    25EB : 4D 26                FDB WORD_EQUAL
    5665/    25ED : 48                   FCB $48
    5666/    25EE :                      
    5667/    25EE :                     CODE_LOOP_THREAD:
    5668/    25EE : 05                   FCB $5
    5669/    25EF : 00                   FCB $0
    5670/    25F0 : AC 71 08             LDY aux_stack_ptr
    5671/    25F3 : 8A                   TXA
    5672/    25F4 : 48                   PHA
    5673/    25F5 : A2 08                LDX #$8
    5674/    25F7 :                      .loop:
    5675/    25F7 : B9 3D 08             LDA AUX_STACK+$9+$9-$1-$1,Y
    5676/    25FA : 95 38                STA R0,X
    5677/    25FC : A9 00                LDA #$0
    5678/    25FE : 95 42                STA R1,X
    5679/    2600 : 88                   DEY
    5680/    2601 : CA                   DEX
    5681/    2602 : D0 F3                BNE .loop
    5682/    2604 : 68                   PLA
    5683/    2605 : AA                   TAX
    5684/    2606 : A9 10                LDA #$10
    5685/    2608 : 85 48                STA R1+$6
    5686/    260A : 20 9F 0E             JSR BCD_Add
    5687/    260D : AC 71 08             LDY aux_stack_ptr
    5688/    2610 : 8A                   TXA
    5689/    2611 : 48                   PHA
    5690/    2612 : A2 08                LDX #$8
    5691/    2614 :                      .copy_loop:
    5692/    2614 : B5 88                LDA R_ans,X
    5693/    2616 : 99 3D 08             STA AUX_STACK+$9+$9-$1-$1,Y
    5694/    2619 : 95 38                STA R0,X
    5695/    261B : B9 35 08             LDA AUX_STACK+$1+$9-$1-$1,Y
    5696/    261E : 95 42                STA R1,X
    5697/    2620 : 88                   DEY
    5698/    2621 : CA                   DEX
    5699/    2622 : D0 F0                BNE .copy_loop
    5700/    2624 : 68                   PLA
    5701/    2625 : AA                   TAX
    5702/    2626 : A5 40                LDA R0+$8
    5703/    2628 : 49 80                EOR #$80
    5704/    262A : 85 40                STA R0+$8
    5705/    262C : 20 9F 0E             JSR BCD_Add
    5706/    262F : A5 8E                LDA R_ans+$C/$2
    5707/    2631 : F0 09                BEQ .loop_done
    5708/    2633 : A5 90                LDA R_ans+$8
    5709/    2635 : 29 80                AND #$80
    5710/    2637 : D0 03                BNE .loop_done
    5711/    2639 : 4C D5 27             JMP CODE_AGAIN_THREAD+$2
    5712/    263C :                      .loop_done:
    5713/    263C : 18                   CLC
    5714/    263D : AD 71 08             LDA aux_stack_ptr
    5715/    2640 : 69 11                ADC #$11
    5716/    2642 : 8D 71 08             STA aux_stack_ptr
    5717/    2645 : CE 72 08             DEC aux_stack_count
    5718/    2648 : A9 02                LDA #$2
    5719/    264A : 4C 5F 1E             JMP IncExecPtr
    5720/    264D :                      
    5721/    264D :                     WORD_EQUAL:
    5722/    264D : 01 3D                FCB $1,"="
    5723/    264F : 6E 26                FDB WORD_GT
    5724/    2651 : 4A                   FCB $4A
    5725/    2652 :                      
    5726/    2652 :                     CODE_EQUAL:
    5727/    2652 : 05                   FCB $5
    5728/    2653 : 22                   FCB $22
    5729/    2654 : 20 A8 2B             JSR COMPARISON_STUB
    5730/    2657 : C9 01                CMP #$1
    5731/    2659 : D0 0A                BNE .not_float
    5732/    265B : B5 06                LDA $6,X
    5733/    265D : D0 03                BNE .false
    5734/    265F : 4C 4F 1F             JMP HexTrue
    5735/    2662 :                      .false:
    5736/    2662 : 4C 49 1F             JMP HexFalse
    5737/    2665 :                      .not_float:
    5738/    2665 : B5 01                LDA $1,X
    5739/    2667 : 15 02                ORA $2,X
    5740/    2669 : D0 F7                BNE .false
    5741/    266B : 4C 4F 1F             JMP HexTrue
    5742/    266E :                      
    5743/    266E :                     WORD_GT:
    5744/    266E : 01 3E                FCB $1,">"
    5745/    2670 : AB 26                FDB WORD_LT
    5746/    2672 : 4C                   FCB $4C
    5747/    2673 :                      
    5748/    2673 :                     CODE_GT:
    5749/    2673 : 05                   FCB $5
    5750/    2674 : 22                   FCB $22
    5751/    2675 : B5 00                LDA $0,X
    5752/    2677 : C9 03                CMP #$3
    5753/    2679 : D0 1D                BNE .not_hex
    5754/    267B : 38                   SEC
    5755/    267C : B5 0A                LDA $A,X
    5756/    267E : F5 01                SBC $1,X
    5757/    2680 : 85 38                STA R0
    5758/    2682 : B5 0B                LDA $B,X
    5759/    2684 : F5 02                SBC $2,X
    5760/    2686 : 90 0A                BCC .hex_false
    5761/    2688 : 05 38                ORA R0
    5762/    268A : F0 06                BEQ .hex_false
    5763/    268C : 20 A3 1F             JSR CODE_DROP+$2
    5764/    268F : 4C 4F 1F             JMP HexTrue
    5765/    2692 :                      .hex_false:
    5766/    2692 : 20 A3 1F             JSR CODE_DROP+$2
    5767/    2695 : 4C 49 1F             JMP HexFalse
    5768/    2698 :                      .not_hex:
    5769/    2698 : 20 A8 2B             JSR COMPARISON_STUB
    5770/    269B : B5 08                LDA $8,X
    5771/    269D : 29 80                AND #$80
    5772/    269F : D0 07                BNE .false
    5773/    26A1 : B5 06                LDA $6,X
    5774/    26A3 : F0 03                BEQ .false
    5775/    26A5 : 4C 4F 1F             JMP HexTrue
    5776/    26A8 :                      .false:
    5777/    26A8 : 4C 49 1F             JMP HexFalse
    5778/    26AB :                      
    5779/    26AB :                     WORD_LT:
    5780/    26AB : 01 3C                FCB $1,"<"
    5781/    26AD : B8 26                FDB WORD_NEQ
    5782/    26AF : 4E                   FCB $4E
    5783/    26B0 :                      
    5784/    26B0 :                     CODE_LT:
    5785/    26B0 : 05                   FCB $5
    5786/    26B1 : 22                   FCB $22
    5787/    26B2 : 20 84 1F             JSR CODE_SWAP+$2
    5788/    26B5 : 4C 75 26             JMP CODE_GT+$2
    5789/    26B8 :                      
    5790/    26B8 :                     WORD_NEQ:
    5791/    26B8 : 02 3C 3E             FCB $2,"<>"
    5792/    26BB : D5 26                FDB WORD_I
    5793/    26BD : 50                   FCB $50
    5794/    26BE :                      
    5795/    26BE :                     CODE_NEQ:
    5796/    26BE : 05                   FCB $5
    5797/    26BF : 22                   FCB $22
    5798/    26C0 : 20 54 26             JSR CODE_EQUAL+$2
    5799/    26C3 : A5 22                LDA ret_val
    5800/    26C5 : F0 01                BEQ .no_error
    5801/    26C7 : 60                   RTS
    5802/    26C8 :                      .no_error:
    5803/    26C8 : B5 01                LDA $1,X
    5804/    26CA : 49 FF                EOR #$FF
    5805/    26CC : 95 01                STA $1,X
    5806/    26CE : B5 02                LDA $2,X
    5807/    26D0 : 49 FF                EOR #$FF
    5808/    26D2 : 95 02                STA $2,X
    5809/    26D4 : 60                   RTS
    5810/    26D5 :                      
    5811/    26D5 :                     WORD_I:
    5812/    26D5 : 01 49                FCB $1,"I"
    5813/    26D7 : 08 27                FDB WORD_J
    5814/    26D9 : 52                   FCB $52
    5815/    26DA :                      
    5816/    26DA :                     CODE_I:
    5817/    26DA : 05                   FCB $5
    5818/    26DB : 04                   FCB $4
    5819/    26DC : 20 C5 2B             JSR WITHIN_WORD
    5820/    26DF : AD 72 08             LDA aux_stack_count
    5821/    26E2 : D0 07                BNE .count_good
    5822/    26E4 :                      .error_exit:
    5823/    26E4 : A9 16                LDA #$16
    5824/    26E6 : 85 22                STA ret_val
    5825/    26E8 : 4C A3 1F             JMP CODE_DROP+$2
    5826/    26EB :                      .count_good:
    5827/    26EB : AD 71 08             LDA aux_stack_ptr
    5828/    26EE :                      .push_stack:
    5829/    26EE : A8                   TAY
    5830/    26EF : A9 01                LDA #$1
    5831/    26F1 : 95 00                STA $0,X
    5832/    26F3 : A9 08                LDA #$8
    5833/    26F5 : 85 38                STA R0
    5834/    26F7 :                      .loop:
    5835/    26F7 : B9 36 08             LDA AUX_STACK+$9,Y
    5836/    26FA : 95 01                STA $1,X
    5837/    26FC : E8                   INX
    5838/    26FD : C8                   INY
    5839/    26FE : C6 38                DEC R0
    5840/    2700 : D0 F5                BNE .loop
    5841/    2702 : 38                   SEC
    5842/    2703 : 8A                   TXA
    5843/    2704 : E9 08                SBC #$8
    5844/    2706 : AA                   TAX
    5845/    2707 : 60                   RTS
    5846/    2708 :                      
    5847/    2708 :                     WORD_J:
    5848/    2708 : 01 4A                FCB $1,"J"
    5849/    270A : 22 27                FDB WORD_K
    5850/    270C : 54                   FCB $54
    5851/    270D :                      
    5852/    270D :                     CODE_J:
    5853/    270D : 05                   FCB $5
    5854/    270E : 04                   FCB $4
    5855/    270F : 20 C5 2B             JSR WITHIN_WORD
    5856/    2712 : AD 72 08             LDA aux_stack_count
    5857/    2715 : C9 02                CMP #$2
    5858/    2717 : 90 CB                BCC CODE_I.error_exit
    5859/    2719 : AD 71 08             LDA aux_stack_ptr
    5860/    271C : 18                   CLC
    5861/    271D : 69 11                ADC #$11
    5862/    271F : 4C EE 26             JMP CODE_I.push_stack
    5863/    2722 :                      
    5864/    2722 :                     WORD_K:
    5865/    2722 : 01 4B                FCB $1,"K"
    5866/    2724 : 3C 27                FDB WORD_EXIT_THREAD
    5867/    2726 : 56                   FCB $56
    5868/    2727 :                      
    5869/    2727 :                     CODE_K:
    5870/    2727 : 05                   FCB $5
    5871/    2728 : 04                   FCB $4
    5872/    2729 : 20 C5 2B             JSR WITHIN_WORD
    5873/    272C : AD 72 08             LDA aux_stack_count
    5874/    272F : C9 03                CMP #$3
    5875/    2731 : 90 B1                BCC CODE_I.error_exit
    5876/    2733 : AD 71 08             LDA aux_stack_ptr
    5877/    2736 : 18                   CLC
    5878/    2737 : 69 22                ADC #$22
    5879/    2739 : 4C EE 26             JMP CODE_I.push_stack
    5880/    273C :                      
    5881/    273C :                     WORD_EXIT_THREAD:
    5882/    273C : 00                   FCB $0,""
    5883/    273D : 75 27                FDB WORD_BEGIN
    5884/    273F : 58                   FCB $58
    5885/    2740 :                      
    5886/    2740 :                     CODE_EXIT_THREAD:
    5887/    2740 : 05                   FCB $5
    5888/    2741 : 00                   FCB $0
    5889/    2742 : AD 72 08             LDA aux_stack_count
    5890/    2745 : F0 1B                BEQ .done
    5891/    2747 : 85 38                STA R0
    5892/    2749 :                      .loop:
    5893/    2749 : AC 71 08             LDY aux_stack_ptr
    5894/    274C : B9 2D 08             LDA AUX_STACK,Y
    5895/    274F : CD 73 08             CMP aux_word_counter
    5896/    2752 : D0 0E                BNE .done
    5897/    2754 : 98                   TYA
    5898/    2755 : 18                   CLC
    5899/    2756 : 69 11                ADC #$11
    5900/    2758 : 8D 71 08             STA aux_stack_ptr
    5901/    275B : CE 72 08             DEC aux_stack_count
    5902/    275E : C6 38                DEC R0
    5903/    2760 : D0 E7                BNE .loop
    5904/    2762 :                      .done:
    5905/    2762 : AD 73 08             LDA aux_word_counter
    5906/    2765 : F0 03                BEQ .no_dec
    5907/    2767 : CE 73 08             DEC aux_word_counter
    5908/    276A :                      .no_dec:
    5909/    276A : 68                   PLA
    5910/    276B : 68                   PLA
    5911/    276C : 68                   PLA
    5912/    276D : 85 30                STA exec_ptr
    5913/    276F : 68                   PLA
    5914/    2770 : 85 31                STA exec_ptr+$1
    5915/    2772 : 4C F5 1D             JMP ExecThread
    5916/    2775 :                      
    5917/    2775 :                     WORD_BEGIN:
    5918/    2775 : 05 42 45 47 49 4E    FCB $5,"BEGIN"
    5919/    277B : 9A 27                FDB WORD_AGAIN
    5920/    277D : 5A                   FCB $5A
    5921/    277E :                      
    5922/    277E :                     CODE_BEGIN:
    5923/    277E : 05                   FCB $5
    5924/    277F : C0                   FCB $C0
    5925/    2780 : A9 02                LDA #$2
    5926/    2782 : 20 92 18             JSR AuxPushShort
    5927/    2785 : A5 22                LDA ret_val
    5928/    2787 : F0 01                BEQ .mem_good
    5929/    2789 : 60                   RTS
    5930/    278A :                      .mem_good:
    5931/    278A : 38                   SEC
    5932/    278B : A5 2A                LDA dict_ptr
    5933/    278D : E9 04                SBC #$4
    5934/    278F : 99 2E 08             STA AUX_STACK+$1,Y
    5935/    2792 : A5 2B                LDA dict_ptr+$1
    5936/    2794 : E9 00                SBC #$0
    5937/    2796 : 99 2F 08             STA AUX_STACK+$2,Y
    5938/    2799 : 60                   RTS
    5939/    279A :                      
    5940/    279A :                     WORD_AGAIN:
    5941/    279A : 05 41 47 41 49 4E    FCB $5,"AGAIN"
    5942/    27A0 : CF 27                FDB WORD_AGAIN_THREAD
    5943/    27A2 : 5C                   FCB $5C
    5944/    27A3 :                      
    5945/    27A3 :                     CODE_AGAIN:
    5946/    27A3 : 05                   FCB $5
    5947/    27A4 : C0                   FCB $C0
    5948/    27A5 :                      .loop:
    5949/    27A5 : 20 B1 18             JSR AuxPopShort
    5950/    27A8 : A5 22                LDA ret_val
    5951/    27AA : F0 01                BEQ .pop_good
    5952/    27AC : 60                   RTS
    5953/    27AD :                      .pop_good:
    5954/    27AD : AC 71 08             LDY aux_stack_ptr
    5955/    27B0 : B9 2A 08             LDA AUX_STACK-$3,Y
    5956/    27B3 : C9 02                CMP #$2
    5957/    27B5 : F0 09                BEQ .type_good
    5958/    27B7 : C9 06                CMP #$6
    5959/    27B9 : F0 EA                BEQ .loop
    5960/    27BB : A9 16                LDA #$16
    5961/    27BD : 85 22                STA ret_val
    5962/    27BF : 60                   RTS
    5963/    27C0 :                      .type_good:
    5964/    27C0 : B9 2B 08             LDA AUX_STACK-$2,Y
    5965/    27C3 : 85 32                STA obj_address
    5966/    27C5 : B9 2C 08             LDA AUX_STACK-$1,Y
    5967/    27C8 : 85 33                STA obj_address+$1
    5968/    27CA : A9 5E                LDA #$5E
    5969/    27CC : 4C 20 1F             JMP TokenArgThread
    5970/    27CF :                      
    5971/    27CF :                     WORD_AGAIN_THREAD:
    5972/    27CF : 00                   FCB $0,""
    5973/    27D0 : ED 27                FDB WORD_UNTIL
    5974/    27D2 : 5E                   FCB $5E
    5975/    27D3 :                      
    5976/    27D3 :                     CODE_AGAIN_THREAD:
    5977/    27D3 : 05                   FCB $5
    5978/    27D4 : 00                   FCB $0
    5979/    27D5 : 20 CD 0A             JSR ReadKey
    5980/    27D8 : C9 1B                CMP #$1B
    5981/    27DA : D0 03                BNE .no_exit_early
    5982/    27DC : 4C EC 24             JMP CODE_QUIT+$2
    5983/    27DF :                      .no_exit_early:
    5984/    27DF : A0 01                LDY #$1
    5985/    27E1 : B1 30                LDA (exec_ptr),Y
    5986/    27E3 : 48                   PHA
    5987/    27E4 : C8                   INY
    5988/    27E5 : B1 30                LDA (exec_ptr),Y
    5989/    27E7 : 85 31                STA exec_ptr+$1
    5990/    27E9 : 68                   PLA
    5991/    27EA : 85 30                STA exec_ptr
    5992/    27EC : 60                   RTS
    5993/    27ED :                      
    5994/    27ED :                     WORD_UNTIL:
    5995/    27ED : 05 55 4E 54 49 4C    FCB $5,"UNTIL"
    5996/    27F3 : 22 28                FDB WORD_UNTIL_THREAD
    5997/    27F5 : 60                   FCB $60
    5998/    27F6 :                      
    5999/    27F6 :                     CODE_UNTIL:
    6000/    27F6 : 05                   FCB $5
    6001/    27F7 : C0                   FCB $C0
    6002/    27F8 :                      .loop:
    6003/    27F8 : 20 B1 18             JSR AuxPopShort
    6004/    27FB : A5 22                LDA ret_val
    6005/    27FD : F0 01                BEQ .pop_good
    6006/    27FF : 60                   RTS
    6007/    2800 :                      .pop_good:
    6008/    2800 : AC 71 08             LDY aux_stack_ptr
    6009/    2803 : B9 2A 08             LDA AUX_STACK-$3,Y
    6010/    2806 : C9 02                CMP #$2
    6011/    2808 : F0 09                BEQ .type_good
    6012/    280A : C9 06                CMP #$6
    6013/    280C : F0 EA                BEQ .loop
    6014/    280E : A9 16                LDA #$16
    6015/    2810 : 85 22                STA ret_val
    6016/    2812 : 60                   RTS
    6017/    2813 :                      .type_good:
    6018/    2813 : B9 2B 08             LDA AUX_STACK-$2,Y
    6019/    2816 : 85 32                STA obj_address
    6020/    2818 : B9 2C 08             LDA AUX_STACK-$1,Y
    6021/    281B : 85 33                STA obj_address+$1
    6022/    281D : A9 62                LDA #$62
    6023/    281F : 4C 20 1F             JMP TokenArgThread
    6024/    2822 :                      
    6025/    2822 :                     WORD_UNTIL_THREAD:
    6026/    2822 : 00                   FCB $0,""
    6027/    2823 : 5A 28                FDB WORD_MAX
    6028/    2825 : 62                   FCB $62
    6029/    2826 :                      
    6030/    2826 :                     CODE_UNTIL_THREAD:
    6031/    2826 : 05                   FCB $5
    6032/    2827 : 01                   FCB $1
    6033/    2828 : 20 CD 0A             JSR ReadKey
    6034/    282B : C9 1B                CMP #$1B
    6035/    282D : D0 03                BNE .no_exit_early
    6036/    282F : 4C EC 24             JMP CODE_QUIT+$2
    6037/    2832 :                      .no_exit_early:
    6038/    2832 : B5 00                LDA $0,X
    6039/    2834 : C9 01                CMP #$1
    6040/    2836 : D0 05                BNE .not_float
    6041/    2838 : B5 06                LDA $6,X
    6042/    283A : 4C 4A 28             JMP .handle
    6043/    283D :                      .not_float:
    6044/    283D : C9 03                CMP #$3
    6045/    283F : D0 07                BNE .string
    6046/    2841 : B5 01                LDA $1,X
    6047/    2843 : 15 02                ORA $2,X
    6048/    2845 : 4C 4A 28             JMP .handle
    6049/    2848 :                      .string:
    6050/    2848 : B5 01                LDA $1,X
    6051/    284A :                      .handle:
    6052/    284A : D0 06                BNE .done
    6053/    284C : 20 A3 1F             JSR CODE_DROP+$2
    6054/    284F : 4C D5 27             JMP CODE_AGAIN_THREAD+$2
    6055/    2852 :                      .done:
    6056/    2852 : 20 A3 1F             JSR CODE_DROP+$2
    6057/    2855 : A9 02                LDA #$2
    6058/    2857 : 4C 5F 1E             JMP IncExecPtr
    6059/    285A :                      
    6060/    285A :                     WORD_MAX:
    6061/    285A : 03 4D 41 58          FCB $3,"MAX"
    6062/    285E : 79 28                FDB WORD_MIN
    6063/    2860 : 64                   FCB $64
    6064/    2861 :                      
    6065/    2861 :                     CODE_MAX:
    6066/    2861 : 05                   FCB $5
    6067/    2862 : 22                   FCB $22
    6068/    2863 : 20 D2 2B             JSR MIN_MAX_STUB
    6069/    2866 : B5 01                LDA $1,X
    6070/    2868 : F0 06                BEQ .nip
    6071/    286A :                      .drop:
    6072/    286A : 20 A3 1F             JSR CODE_DROP+$2
    6073/    286D : 4C A3 1F             JMP CODE_DROP+$2
    6074/    2870 :                      .nip:
    6075/    2870 : 20 A3 1F             JSR CODE_DROP+$2
    6076/    2873 : 20 84 1F             JSR CODE_SWAP+$2
    6077/    2876 : 4C A3 1F             JMP CODE_DROP+$2
    6078/    2879 :                      
    6079/    2879 :                     WORD_MIN:
    6080/    2879 : 03 4D 49 4E          FCB $3,"MIN"
    6081/    287D : 8B 28                FDB WORD_AND
    6082/    287F : 66                   FCB $66
    6083/    2880 :                      
    6084/    2880 :                     CODE_MIN:
    6085/    2880 : 05                   FCB $5
    6086/    2881 : 22                   FCB $22
    6087/    2882 : 20 D2 2B             JSR MIN_MAX_STUB
    6088/    2885 : B5 01                LDA $1,X
    6089/    2887 : F0 E1                BEQ CODE_MAX.drop
    6090/    2889 : D0 E5                BNE CODE_MAX.nip
    6091/    288B :                      
    6092/    288B :                     WORD_AND:
    6093/    288B : 03 41 4E 44          FCB $3,"AND"
    6094/    288F : A4 28                FDB WORD_OR
    6095/    2891 : 68                   FCB $68
    6096/    2892 :                      
    6097/    2892 :                     CODE_AND:
    6098/    2892 : 05                   FCB $5
    6099/    2893 : 1A                   FCB $1A
    6100/    2894 : 20 EE 2B             JSR LOGIC_STUB
    6101/    2897 : 35 0A                AND $A,X
    6102/    2899 : 95 0A                STA $A,X
    6103/    289B : B5 02                LDA $2,X
    6104/    289D : 35 0B                AND $B,X
    6105/    289F : 95 0B                STA $B,X
    6106/    28A1 : 4C A3 1F             JMP CODE_DROP+$2
    6107/    28A4 :                      
    6108/    28A4 :                     WORD_OR:
    6109/    28A4 : 02 4F 52             FCB $2,"OR"
    6110/    28A7 : BC 28                FDB WORD_XOR
    6111/    28A9 : 6A                   FCB $6A
    6112/    28AA :                      
    6113/    28AA :                     CODE_OR:
    6114/    28AA : 05                   FCB $5
    6115/    28AB : 1A                   FCB $1A
    6116/    28AC : 20 EE 2B             JSR LOGIC_STUB
    6117/    28AF : 15 0A                ORA $A,X
    6118/    28B1 : 95 0A                STA $A,X
    6119/    28B3 : B5 02                LDA $2,X
    6120/    28B5 : 15 0B                ORA $B,X
    6121/    28B7 : 95 0B                STA $B,X
    6122/    28B9 : 4C A3 1F             JMP CODE_DROP+$2
    6123/    28BC :                      
    6124/    28BC :                     WORD_XOR:
    6125/    28BC : 03 58 4F 52          FCB $3,"XOR"
    6126/    28C0 : D5 28                FDB WORD_NOT
    6127/    28C2 : 6C                   FCB $6C
    6128/    28C3 :                      
    6129/    28C3 :                     CODE_XOR:
    6130/    28C3 : 05                   FCB $5
    6131/    28C4 : 1A                   FCB $1A
    6132/    28C5 : 20 EE 2B             JSR LOGIC_STUB
    6133/    28C8 : 55 0A                EOR $A,X
    6134/    28CA : 95 0A                STA $A,X
    6135/    28CC : B5 02                LDA $2,X
    6136/    28CE : 55 0B                EOR $B,X
    6137/    28D0 : 95 0B                STA $B,X
    6138/    28D2 : 4C A3 1F             JMP CODE_DROP+$2
    6139/    28D5 :                      
    6140/    28D5 :                     WORD_NOT:
    6141/    28D5 : 03 4E 4F 54          FCB $3,"NOT"
    6142/    28D9 : F0 28                FDB WORD_LEAVE
    6143/    28DB : 6E                   FCB $6E
    6144/    28DC :                      
    6145/    28DC :                     CODE_NOT:
    6146/    28DC : 05                   FCB $5
    6147/    28DD : 19                   FCB $19
    6148/    28DE : 20 EE 2B             JSR LOGIC_STUB
    6149/    28E1 : 15 02                ORA $2,X
    6150/    28E3 : F0 07                BEQ .set_true
    6151/    28E5 : A9 00                LDA #$0
    6152/    28E7 :                      .set:
    6153/    28E7 : 95 01                STA $1,X
    6154/    28E9 : 95 02                STA $2,X
    6155/    28EB : 60                   RTS
    6156/    28EC :                      .set_true:
    6157/    28EC : A9 FF                LDA #$FF
    6158/    28EE : D0 F7                BNE .set
    6159/    28F0 :                      
    6160/    28F0 :                     WORD_LEAVE:
    6161/    28F0 : 05 4C 45 41 56 45    FCB $5,"LEAVE"
    6162/    28F6 : 14 29                FDB WORD_LEAVE_THREAD
    6163/    28F8 : 70                   FCB $70
    6164/    28F9 :                      
    6165/    28F9 :                     CODE_LEAVE:
    6166/    28F9 : 05                   FCB $5
    6167/    28FA : C0                   FCB $C0
    6168/    28FB : A9 03                LDA #$3
    6169/    28FD : 20 92 18             JSR AuxPushShort
    6170/    2900 : A5 22                LDA ret_val
    6171/    2902 : F0 01                BEQ .mem_good
    6172/    2904 : 60                   RTS
    6173/    2905 :                      .mem_good:
    6174/    2905 : A5 2A                LDA dict_ptr
    6175/    2907 : 99 2E 08             STA AUX_STACK+$1,Y
    6176/    290A : A5 2B                LDA dict_ptr+$1
    6177/    290C : 99 2F 08             STA AUX_STACK+$2,Y
    6178/    290F : A9 72                LDA #$72
    6179/    2911 : 4C 20 1F             JMP TokenArgThread
    6180/    2914 :                      
    6181/    2914 :                     WORD_LEAVE_THREAD:
    6182/    2914 : 00                   FCB $0,""
    6183/    2915 : 1D 29                FDB WORD_IF
    6184/    2917 : 72                   FCB $72
    6185/    2918 :                      
    6186/    2918 :                     CODE_LEAVE_THREAD:
    6187/    2918 : 05                   FCB $5
    6188/    2919 : 00                   FCB $0
    6189/    291A : 4C D5 27             JMP CODE_AGAIN_THREAD+$2
    6190/    291D :                      
    6191/    291D :                     WORD_IF:
    6192/    291D : 02 49 46             FCB $2,"IF"
    6193/    2920 : 3E 29                FDB WORD_THEN
    6194/    2922 : 74                   FCB $74
    6195/    2923 :                      
    6196/    2923 :                     CODE_IF:
    6197/    2923 : 05                   FCB $5
    6198/    2924 : C0                   FCB $C0
    6199/    2925 : A9 04                LDA #$4
    6200/    2927 : 20 92 18             JSR AuxPushShort
    6201/    292A : A5 22                LDA ret_val
    6202/    292C : F0 01                BEQ .mem_good
    6203/    292E : 60                   RTS
    6204/    292F :                      .mem_good:
    6205/    292F : A5 2A                LDA dict_ptr
    6206/    2931 : 99 2E 08             STA AUX_STACK+$1,Y
    6207/    2934 : A5 2B                LDA dict_ptr+$1
    6208/    2936 : 99 2F 08             STA AUX_STACK+$2,Y
    6209/    2939 : A9 62                LDA #$62
    6210/    293B : 4C 20 1F             JMP TokenArgThread
    6211/    293E :                      
    6212/    293E :                     WORD_THEN:
    6213/    293E : 04 54 48 45 4E       FCB $4,"THEN"
    6214/    2943 : 8B 29                FDB WORD_ELSE
    6215/    2945 : 76                   FCB $76
    6216/    2946 :                      
    6217/    2946 :                     CODE_THEN:
    6218/    2946 : 05                   FCB $5
    6219/    2947 : C0                   FCB $C0
    6220/    2948 : AC 71 08             LDY aux_stack_ptr
    6221/    294B :                      .loop:
    6222/    294B : C0 44                CPY #$44
    6223/    294D : D0 05                BNE .stack_good
    6224/    294F :                      .error_exit:
    6225/    294F : A9 16                LDA #$16
    6226/    2951 : 85 22                STA ret_val
    6227/    2953 : 60                   RTS
    6228/    2954 :                      .stack_good:
    6229/    2954 : B9 2D 08             LDA AUX_STACK,Y
    6230/    2957 : C9 06                CMP #$6
    6231/    2959 : F0 0A                BEQ .process_skip
    6232/    295B : C9 03                CMP #$3
    6233/    295D : F0 06                BEQ .process_skip
    6234/    295F : C9 04                CMP #$4
    6235/    2961 : F0 08                BEQ .process_if
    6236/    2963 : D0 EA                BNE .error_exit
    6237/    2965 :                      .process_skip:
    6238/    2965 : C8                   INY
    6239/    2966 : C8                   INY
    6240/    2967 : C8                   INY
    6241/    2968 : 4C 4B 29             JMP .loop
    6242/    296B :                      .process_if:
    6243/    296B : A9 06                LDA #$6
    6244/    296D : 99 2D 08             STA AUX_STACK,Y
    6245/    2970 : B9 2E 08             LDA AUX_STACK+$1,Y
    6246/    2973 : 85 24                STA ret_address
    6247/    2975 : B9 2F 08             LDA AUX_STACK+$2,Y
    6248/    2978 : 85 25                STA ret_address+$1
    6249/    297A : 38                   SEC
    6250/    297B : A5 2A                LDA dict_ptr
    6251/    297D : E9 01                SBC #$1
    6252/    297F : A0 01                LDY #$1
    6253/    2981 : 91 24                STA (ret_address),Y
    6254/    2983 : A5 2B                LDA dict_ptr+$1
    6255/    2985 : E9 00                SBC #$0
    6256/    2987 : C8                   INY
    6257/    2988 : 91 24                STA (ret_address),Y
    6258/    298A : 60                   RTS
    6259/    298B :                      
    6260/    298B :                     WORD_ELSE:
    6261/    298B : 04 45 4C 53 45       FCB $4,"ELSE"
    6262/    2990 : D2 29                FDB WORD_LSHIFT
    6263/    2992 : 78                   FCB $78
    6264/    2993 :                      
    6265/    2993 :                     CODE_ELSE:
    6266/    2993 : 05                   FCB $5
    6267/    2994 : C0                   FCB $C0
    6268/    2995 : AD 72 08             LDA aux_stack_count
    6269/    2998 : F0 0A                BEQ .error_exit
    6270/    299A : AC 71 08             LDY aux_stack_ptr
    6271/    299D : B9 2D 08             LDA AUX_STACK,Y
    6272/    29A0 : C9 04                CMP #$4
    6273/    29A2 : F0 05                BEQ .process_if
    6274/    29A4 :                      .error_exit:
    6275/    29A4 : A9 16                LDA #$16
    6276/    29A6 : 85 22                STA ret_val
    6277/    29A8 : 60                   RTS
    6278/    29A9 :                      .process_if:
    6279/    29A9 : B9 2E 08             LDA AUX_STACK+$1,Y
    6280/    29AC : 85 24                STA ret_address
    6281/    29AE : B9 2F 08             LDA AUX_STACK+$2,Y
    6282/    29B1 : 85 25                STA ret_address+$1
    6283/    29B3 : A5 2A                LDA dict_ptr
    6284/    29B5 : 99 2E 08             STA AUX_STACK+$1,Y
    6285/    29B8 : A5 2B                LDA dict_ptr+$1
    6286/    29BA : 99 2F 08             STA AUX_STACK+$2,Y
    6287/    29BD : 18                   CLC
    6288/    29BE : A5 2A                LDA dict_ptr
    6289/    29C0 : 69 02                ADC #$2
    6290/    29C2 : A0 01                LDY #$1
    6291/    29C4 : 91 24                STA (ret_address),Y
    6292/    29C6 : A5 2B                LDA dict_ptr+$1
    6293/    29C8 : 69 00                ADC #$0
    6294/    29CA : C8                   INY
    6295/    29CB : 91 24                STA (ret_address),Y
    6296/    29CD : A9 5E                LDA #$5E
    6297/    29CF : 4C 20 1F             JMP TokenArgThread
    6298/    29D2 :                      
    6299/    29D2 :                     WORD_LSHIFT:
    6300/    29D2 : 02 4C 53             FCB $2,"LS"
    6301/    29D5 : E8 29                FDB WORD_RSHIFT
    6302/    29D7 : 7A                   FCB $7A
    6303/    29D8 :                      
    6304/    29D8 :                     CODE_LSHIFT:
    6305/    29D8 : 05                   FCB $5
    6306/    29D9 : 1A                   FCB $1A
    6307/    29DA : 20 0E 2C             JSR SHIFT_STUB
    6308/    29DD :                      .shift:
    6309/    29DD : 16 0A                ASL $A,X
    6310/    29DF : 36 0B                ROL $B,X
    6311/    29E1 : D6 01                DEC $1,X
    6312/    29E3 : D0 F8                BNE .shift
    6313/    29E5 : 4C A3 1F             JMP CODE_DROP+$2
    6314/    29E8 :                      
    6315/    29E8 :                     WORD_RSHIFT:
    6316/    29E8 : 02 52 53             FCB $2,"RS"
    6317/    29EB : FE 29                FDB WORD_ABS
    6318/    29ED : 7C                   FCB $7C
    6319/    29EE :                      
    6320/    29EE :                     CODE_RSHIFT:
    6321/    29EE : 05                   FCB $5
    6322/    29EF : 1A                   FCB $1A
    6323/    29F0 : 20 0E 2C             JSR SHIFT_STUB
    6324/    29F3 :                      .shift:
    6325/    29F3 : 56 0B                LSR $B,X
    6326/    29F5 : 76 0A                ROR $A,X
    6327/    29F7 : D6 01                DEC $1,X
    6328/    29F9 : D0 F8                BNE .shift
    6329/    29FB : 4C A3 1F             JMP CODE_DROP+$2
    6330/    29FE :                      
    6331/    29FE :                     WORD_ABS:
    6332/    29FE : 03 41 42 53          FCB $3,"ABS"
    6333/    2A02 : 0E 2A                FDB WORD_PI
    6334/    2A04 : 7E                   FCB $7E
    6335/    2A05 :                      
    6336/    2A05 :                     CODE_ABS:
    6337/    2A05 : 05                   FCB $5
    6338/    2A06 : 09                   FCB $9
    6339/    2A07 : B5 08                LDA $8,X
    6340/    2A09 : 29 7F                AND #$7F
    6341/    2A0B : 95 08                STA $8,X
    6342/    2A0D : 60                   RTS
    6343/    2A0E :                      
    6344/    2A0E :                     WORD_PI:
    6345/    2A0E : 02 50 49             FCB $2,"PI"
    6346/    2A11 : 23 2A                FDB WORD_SIN
    6347/    2A13 : 80                   FCB $80
    6348/    2A14 :                      
    6349/    2A14 :                     CODE_PI:
    6350/    2A14 : 05                   FCB $5
    6351/    2A15 : 04                   FCB $4
    6352/    2A16 : 20 38 2C             JSR PUSH_STUB
    6353/    2A19 : 01 59 53 26 59 41    FCB $1,$59,$53,$26,$59,$41,$31,$0,$0
                    31 00 00          
    6354/    2A22 : 60                   RTS
    6355/    2A23 :                      
    6356/    2A23 :                     WORD_SIN:
    6357/    2A23 : 03 53 49 4E          FCB $3,"SIN"
    6358/    2A27 : 37 2A                FDB WORD_COS
    6359/    2A29 : 82                   FCB $82
    6360/    2A2A :                      
    6361/    2A2A :                     CODE_SIN:
    6362/    2A2A : 05                   FCB $5
    6363/    2A2B : 09                   FCB $9
    6364/    2A2C : 20 E5 12             JSR CORDIC_Trig
    6365/    2A2F : A2 56                LDX #R3
    6366/    2A31 : 20 C1 14             JSR CORDIC_Pack
    6367/    2A34 : 4C FB 14             JMP CORDIC_Push
    6368/    2A37 :                      
    6369/    2A37 :                     WORD_COS:
    6370/    2A37 : 03 43 4F 53          FCB $3,"COS"
    6371/    2A3B : 50 2A                FDB WORD_TAN
    6372/    2A3D : 84                   FCB $84
    6373/    2A3E :                      
    6374/    2A3E :                     CODE_COS:
    6375/    2A3E : 05                   FCB $5
    6376/    2A3F : 09                   FCB $9
    6377/    2A40 : 20 E5 12             JSR CORDIC_Trig
    6378/    2A43 : A2 00                LDX #$0
    6379/    2A45 : 8E 16 08             STX CORDIC_end_sign
    6380/    2A48 : A2 4C                LDX #R2
    6381/    2A4A : 20 C1 14             JSR CORDIC_Pack
    6382/    2A4D : 4C FB 14             JMP CORDIC_Push
    6383/    2A50 :                      
    6384/    2A50 :                     WORD_TAN:
    6385/    2A50 : 03 54 41 4E          FCB $3,"TAN"
    6386/    2A54 : B6 2A                FDB WORD_DEG
    6387/    2A56 : 86                   FCB $86
    6388/    2A57 :                      
    6389/    2A57 :                     CODE_TAN:
    6390/    2A57 : 05                   FCB $5
    6391/    2A58 : 09                   FCB $9
    6392/    2A59 : 20 E5 12             JSR CORDIC_Trig
    6393/    2A5C : C9 00                CMP #$0
    6394/    2A5E : F0 12                BEQ .divide
    6395/    2A60 :                      .const:
    6396/    2A60 : A4 5C                LDY R3+$6
    6397/    2A62 : F0 09                BEQ .push0
    6398/    2A64 :                      .error:
    6399/    2A64 : AE 04 08             LDX stack_X
    6400/    2A67 : D8                   CLD
    6401/    2A68 : A9 18                LDA #$18
    6402/    2A6A : 85 22                STA ret_val
    6403/    2A6C : 60                   RTS
    6404/    2A6D :                      .push0:
    6405/    2A6D : A2 56                LDX #R3
    6406/    2A6F : 4C FB 14             JMP CORDIC_Push
    6407/    2A72 :                      .divide:
    6408/    2A72 : A2 4C                LDX #R2
    6409/    2A74 : 20 C1 14             JSR CORDIC_Pack
    6410/    2A77 : A9 88                LDA #R_ans
    6411/    2A79 : A0 38                LDY #R0
    6412/    2A7B : 20 3A 0C             JSR CopyRegs
    6413/    2A7E : A9 00                LDA #$0
    6414/    2A80 : A2 56                LDX #R3
    6415/    2A82 : 20 C1 14             JSR CORDIC_Pack
    6416/    2A85 : A9 88                LDA #R_ans
    6417/    2A87 : A0 42                LDY #R1
    6418/    2A89 : 20 3A 0C             JSR CopyRegs
    6419/    2A8C : 20 33 10             JSR BCD_Div
    6420/    2A8F : 4C FB 14             JMP CORDIC_Push
    6421/    2A92 :                      
    6422/    2A92 :                     WORD_ASIN:
    6423/    2A92 : 04 41 53 49 4E       FCB $4,"ASIN"
    6424/    2A97 : 9D 2A                FDB WORD_ACOS
    6425/    2A99 : 88                   FCB $88
    6426/    2A9A :                      
    6427/    2A9A :                     CODE_ASIN:
    6428/    2A9A : 05                   FCB $5
    6429/    2A9B : 09                   FCB $9
    6430/    2A9C : 60                   RTS
    6431/    2A9D :                      
    6432/    2A9D :                     WORD_ACOS:
    6433/    2A9D : 04 41 43 4F 53       FCB $4,"ACOS"
    6434/    2AA2 : A8 2A                FDB WORD_ATAN
    6435/    2AA4 : 8A                   FCB $8A
    6436/    2AA5 :                      
    6437/    2AA5 :                     CODE_ACOS:
    6438/    2AA5 : 05                   FCB $5
    6439/    2AA6 : 09                   FCB $9
    6440/    2AA7 : 60                   RTS
    6441/    2AA8 :                      
    6442/    2AA8 :                     WORD_ATAN:
    6443/    2AA8 : 04 41 54 41 4E       FCB $4,"ATAN"
    6444/    2AAD : B6 2A                FDB WORD_DEG
    6445/    2AAF : 8C                   FCB $8C
    6446/    2AB0 :                      
    6447/    2AB0 :                     CODE_ATAN:
    6448/    2AB0 : 05                   FCB $5
    6449/    2AB1 : 09                   FCB $9
    6450/    2AB2 : 20 9F 13             JSR CORDIC_Atan
    6451/    2AB5 : 60                   RTS
    6452/    2AB6 :                      
    6453/    2AB6 :                     WORD_DEG:
    6454/    2AB6 : 03 44 45 47          FCB $3,"DEG"
    6455/    2ABA : 78 01                FDB dict_begin
    6456/    2ABC : 8E                   FCB $8E
    6457/    2ABD :                      
    6458/    2ABD :                     CODE_DEG:
    6459/    2ABD : 05                   FCB $5
    6460/    2ABE : 09                   FCB $9
    6461/    2ABF : 20 0F 1E             JSR StackAddItem
    6462/    2AC2 : 20 38 2C             JSR PUSH_STUB
    6463/    2AC5 : 01 00 00 00 00 00    FCB $1,$0,$0,$0,$0,$0,$90,$1,$0
                    90 01 00          
    6464/    2ACE : 20 50 0C             JSR TosR0R1
    6465/    2AD1 : 20 33 10             JSR BCD_Div
    6466/    2AD4 : 20 A3 1F             JSR CODE_DROP+$2
    6467/    2AD7 : 20 67 0C             JSR RansTos
    6468/    2ADA : 20 0F 1E             JSR StackAddItem
    6469/    2ADD : 20 38 2C             JSR PUSH_STUB
    6470/    2AE0 : 01 80 26 63 79 70    FCB $1,$80,$26,$63,$79,$70,$15,$0,$0
                    15 00 00          
    6471/    2AE9 : 20 50 0C             JSR TosR0R1
    6472/    2AEC : 20 86 0F             JSR BCD_Mult
    6473/    2AEF : 20 A3 1F             JSR CODE_DROP+$2
    6474/    2AF2 : 4C 67 0C             JMP RansTos
    6475/    2AF5 :                      
    6476/    2AF5 :                     JUMP_TABLE:
    6477/    2AF5 : 69 1F                FDB CODE_DUP
    6478/    2AF7 : 82 1F                FDB CODE_SWAP
    6479/    2AF9 : A1 1F                FDB CODE_DROP
    6480/    2AFB : B4 1F                FDB CODE_OVER
    6481/    2AFD : CC 1F                FDB CODE_ROT
    6482/    2AFF : F1 1F                FDB CODE_MIN_ROT
    6483/    2B01 : 17 20                FDB CODE_CLEAR
    6484/    2B03 : 24 20                FDB CODE_ADD
    6485/    2B05 : 7C 20                FDB CODE_SUB
    6486/    2B07 : C2 20                FDB CODE_MULT
    6487/    2B09 : 40 21                FDB CODE_DIV
    6488/    2B0B : BF 21                FDB CODE_TICK
    6489/    2B0D : FE 21                FDB CODE_EXEC
    6490/    2B0F : 59 22                FDB CODE_STORE
    6491/    2B11 : 79 22                FDB CODE_FETCH
    6492/    2B13 : 99 22                FDB CODE_CSTORE
    6493/    2B15 : B5 22                FDB CODE_CFETCH
    6494/    2B17 : D3 22                FDB CODE_COLON
    6495/    2B19 : 27 23                FDB CODE_SEMI
    6496/    2B1B : 37 23                FDB CODE_FLOAT
    6497/    2B1D : 44 23                FDB CODE_HEX
    6498/    2B1F : 51 23                FDB CODE_STRING
    6499/    2B21 : 62 23                FDB CODE_HALT
    6500/    2B23 : 6E 23                FDB CODE_VAR
    6501/    2B25 : D1 23                FDB CODE_VAR_THREAD
    6502/    2B27 : FA 23                FDB CODE_STO
    6503/    2B29 : 81 24                FDB CODE_FREE
    6504/    2B2B : 9D 24                FDB CODE_SECONDARY
    6505/    2B2D : C9 24                FDB CODE_EXIT
    6506/    2B2F : D8 24                FDB CODE_BREAK
    6507/    2B31 : EA 24                FDB CODE_QUIT
    6508/    2B33 : 10 25                FDB CODE_STO_THREAD
    6509/    2B35 : 2D 25                FDB CODE_DO
    6510/    2B37 : 55 25                FDB CODE_DO_THREAD
    6511/    2B39 : 9D 25                FDB CODE_LOOP
    6512/    2B3B : EE 25                FDB CODE_LOOP_THREAD
    6513/    2B3D : 52 26                FDB CODE_EQUAL
    6514/    2B3F : 73 26                FDB CODE_GT
    6515/    2B41 : B0 26                FDB CODE_LT
    6516/    2B43 : BE 26                FDB CODE_NEQ
    6517/    2B45 : DA 26                FDB CODE_I
    6518/    2B47 : 0D 27                FDB CODE_J
    6519/    2B49 : 27 27                FDB CODE_K
    6520/    2B4B : 40 27                FDB CODE_EXIT_THREAD
    6521/    2B4D : 7E 27                FDB CODE_BEGIN
    6522/    2B4F : A3 27                FDB CODE_AGAIN
    6523/    2B51 : D3 27                FDB CODE_AGAIN_THREAD
    6524/    2B53 : F6 27                FDB CODE_UNTIL
    6525/    2B55 : 26 28                FDB CODE_UNTIL_THREAD
    6526/    2B57 : 61 28                FDB CODE_MAX
    6527/    2B59 : 80 28                FDB CODE_MIN
    6528/    2B5B : 92 28                FDB CODE_AND
    6529/    2B5D : AA 28                FDB CODE_OR
    6530/    2B5F : C3 28                FDB CODE_XOR
    6531/    2B61 : DC 28                FDB CODE_NOT
    6532/    2B63 : F9 28                FDB CODE_LEAVE
    6533/    2B65 : 18 29                FDB CODE_LEAVE_THREAD
    6534/    2B67 : 23 29                FDB CODE_IF
    6535/    2B69 : 46 29                FDB CODE_THEN
    6536/    2B6B : 93 29                FDB CODE_ELSE
    6537/    2B6D : D8 29                FDB CODE_LSHIFT
    6538/    2B6F : EE 29                FDB CODE_RSHIFT
    6539/    2B71 : 05 2A                FDB CODE_ABS
    6540/    2B73 : 14 2A                FDB CODE_PI
    6541/    2B75 : 2A 2A                FDB CODE_SIN
    6542/    2B77 : 3E 2A                FDB CODE_COS
    6543/    2B79 : 57 2A                FDB CODE_TAN
    6544/    2B7B : 9A 2A                FDB CODE_ASIN
    6545/    2B7D : A5 2A                FDB CODE_ACOS
    6546/    2B7F : B0 2A                FDB CODE_ATAN
    6547/    2B81 : BD 2A                FDB CODE_DEG
    6548/    2B83 :                      
    6549/    2B83 :                     HEX_RECALC:
    6550/    2B83 : 18                   CLC
    6551/    2B84 : B5 0C                LDA $C,X
    6552/    2B86 : 75 0E                ADC $E,X
    6553/    2B88 : 95 0A                STA $A,X
    6554/    2B8A : B5 0D                LDA $D,X
    6555/    2B8C : 75 0F                ADC $F,X
    6556/    2B8E : 95 0B                STA $B,X
    6557/    2B90 : 4C A3 1F             JMP CODE_DROP+$2
    6558/    2B93 :                      
    6559/    2B93 :                     COPY_STUB:
    6560/    2B93 : 95 00                STA $0,X
    6561/    2B95 : A0 01                LDY #$1
    6562/    2B97 :                      .loop:
    6563/    2B97 : E8                   INX
    6564/    2B98 : B1 30                LDA (exec_ptr),Y
    6565/    2B9A : 95 00                STA $0,X
    6566/    2B9C : C8                   INY
    6567/    2B9D : C0 09                CPY #$9
    6568/    2B9F : D0 F6                BNE .loop
    6569/    2BA1 : 68                   PLA
    6570/    2BA2 : AA                   TAX
    6571/    2BA3 : A9 08                LDA #$8
    6572/    2BA5 : 4C 5F 1E             JMP IncExecPtr
    6573/    2BA8 :                      
    6574/    2BA8 :                     COMPARISON_STUB:
    6575/    2BA8 : B5 00                LDA $0,X
    6576/    2BAA : C9 01                CMP #$1
    6577/    2BAC : D0 06                BNE .not_float
    6578/    2BAE : 20 84 20             JSR CODE_SUB.float
    6579/    2BB1 : A9 01                LDA #$1
    6580/    2BB3 : 60                   RTS
    6581/    2BB4 :                      .not_float:
    6582/    2BB4 : C9 03                CMP #$3
    6583/    2BB6 : D0 06                BNE .not_hex
    6584/    2BB8 : 20 94 20             JSR CODE_SUB.hex
    6585/    2BBB : A9 03                LDA #$3
    6586/    2BBD : 60                   RTS
    6587/    2BBE :                      .not_hex:
    6588/    2BBE : A9 0C                LDA #$C
    6589/    2BC0 : 85 22                STA ret_val
    6590/    2BC2 : 68                   PLA
    6591/    2BC3 : 68                   PLA
    6592/    2BC4 : 60                   RTS
    6593/    2BC5 :                      
    6594/    2BC5 :                     WITHIN_WORD:
    6595/    2BC5 : AD 73 08             LDA aux_word_counter
    6596/    2BC8 : D0 07                BNE .good
    6597/    2BCA : A9 12                LDA #$12
    6598/    2BCC : 85 22                STA ret_val
    6599/    2BCE : 68                   PLA
    6600/    2BCF : 68                   PLA
    6601/    2BD0 : 60                   RTS
    6602/    2BD1 :                      .good:
    6603/    2BD1 : 60                   RTS
    6604/    2BD2 :                      
    6605/    2BD2 :                     MIN_MAX_STUB:
    6606/    2BD2 : 20 0F 1E             JSR StackAddItem
    6607/    2BD5 : 20 B6 1F             JSR CODE_OVER+$2
    6608/    2BD8 : 20 0F 1E             JSR StackAddItem
    6609/    2BDB : 20 B6 1F             JSR CODE_OVER+$2
    6610/    2BDE : 20 75 26             JSR CODE_GT+$2
    6611/    2BE1 : A5 22                LDA ret_val
    6612/    2BE3 : F0 08                BEQ .comparison_good
    6613/    2BE5 : 68                   PLA
    6614/    2BE6 : 68                   PLA
    6615/    2BE7 : 20 A3 1F             JSR CODE_DROP+$2
    6616/    2BEA : 4C A3 1F             JMP CODE_DROP+$2
    6617/    2BED :                      .comparison_good:
    6618/    2BED : 60                   RTS
    6619/    2BEE :                      
    6620/    2BEE :                     LOGIC_STUB:
    6621/    2BEE : B5 07                LDA $7,X
    6622/    2BF0 : C9 01                CMP #$1
    6623/    2BF2 : D0 06                BNE .good
    6624/    2BF4 : 68                   PLA
    6625/    2BF5 : 68                   PLA
    6626/    2BF6 : A9 0C                LDA #$C
    6627/    2BF8 : 85 22                STA ret_val
    6628/    2BFA :                      .good:
    6629/    2BFA : B5 01                LDA $1,X
    6630/    2BFC : 60                   RTS
    6631/    2BFD :                      
    6632/    2BFD :                     AUX_STUB:
    6633/    2BFD : 20 B1 18             JSR AuxPopShort
    6634/    2C00 : A5 22                LDA ret_val
    6635/    2C02 : F0 03                BEQ .pop_good
    6636/    2C04 : 68                   PLA
    6637/    2C05 : 68                   PLA
    6638/    2C06 : 60                   RTS
    6639/    2C07 :                      .pop_good:
    6640/    2C07 : AC 71 08             LDY aux_stack_ptr
    6641/    2C0A : B9 2A 08             LDA AUX_STACK-$3,Y
    6642/    2C0D : 60                   RTS
    6643/    2C0E :                      
    6644/    2C0E :                     SHIFT_STUB:
    6645/    2C0E : B5 07                LDA $7,X
    6646/    2C10 : 15 10                ORA $10,X
    6647/    2C12 : F0 07                BEQ .hex_raw
    6648/    2C14 : A9 0C                LDA #$C
    6649/    2C16 : 85 22                STA ret_val
    6650/    2C18 : 68                   PLA
    6651/    2C19 : 68                   PLA
    6652/    2C1A : 60                   RTS
    6653/    2C1B :                      .hex_raw:
    6654/    2C1B : 38                   SEC
    6655/    2C1C : B5 01                LDA $1,X
    6656/    2C1E : E9 10                SBC #$10
    6657/    2C20 : B5 02                LDA $2,X
    6658/    2C22 : E9 00                SBC #$0
    6659/    2C24 : 90 08                BCC .zero_check
    6660/    2C26 : A9 00                LDA #$0
    6661/    2C28 : 95 0A                STA $A,X
    6662/    2C2A : 95 0B                STA $B,X
    6663/    2C2C : F0 05                BEQ .done
    6664/    2C2E :                      .zero_check:
    6665/    2C2E : B5 01                LDA $1,X
    6666/    2C30 : F0 01                BEQ .done
    6667/    2C32 : 60                   RTS
    6668/    2C33 :                      .done:
    6669/    2C33 : 68                   PLA
    6670/    2C34 : 68                   PLA
    6671/    2C35 : 4C A3 1F             JMP CODE_DROP+$2
    6672/    2C38 :                      
    6673/    2C38 :                     PUSH_STUB:
    6674/    2C38 : 68                   PLA
    6675/    2C39 : 85 24                STA ret_address
    6676/    2C3B : 68                   PLA
    6677/    2C3C : 85 25                STA ret_address+$1
    6678/    2C3E : 8A                   TXA
    6679/    2C3F : 48                   PHA
    6680/    2C40 : A0 01                LDY #$1
    6681/    2C42 :                      .loop:
    6682/    2C42 : B1 24                LDA (ret_address),Y
    6683/    2C44 : 95 00                STA $0,X
    6684/    2C46 : E8                   INX
    6685/    2C47 : C8                   INY
    6686/    2C48 : C0 0A                CPY #$A
    6687/    2C4A : D0 F6                BNE .loop
    6688/    2C4C : 68                   PLA
    6689/    2C4D : AA                   TAX
    6690/    2C4E : 18                   CLC
    6691/    2C4F : A5 24                LDA ret_address
    6692/    2C51 : 69 0A                ADC #$A
    6693/    2C53 : 85 24                STA ret_address
    6694/    2C55 : 90 02                BCC .skip
    6695/    2C57 : E6 25                INC ret_address+$1
    6696/    2C59 :                      .skip:
    6697/    2C59 : 6C 24 00             JMP (ret_address)
    6698/    2C5C :                      
    6699/    2C5C :                     PUSH_STUB_0:
    6700/    2C5C : 20 38 2C             JSR PUSH_STUB
    6701/    2C5F : 01 00 00 00 00 00    FCB $1,$0,$0,$0,$0,$0,$0,$0,$0
                    00 00 00          
    6702/    2C68 : 60                   RTS
    6703/    2C69 :                      
    6704/    2C69 :                     PUSH_STUB_1:
    6705/    2C69 : 20 38 2C             JSR PUSH_STUB
    6706/    2C6C : 01 00 00 00 00 00    FCB $1,$0,$0,$0,$0,$0,$10,$0,$0
                    10 00 00          
    6707/    2C75 : 60                   RTS
    6708/    2C76 :                      
    6709/    2C76 :                     main:
    6710/    2C76 : 20 61 0A             JSR setup
    6711/    2C79 : 20 C4 8C             JSR tests
    6712/    2C7C : 20 82 8E             JSR file_tests
    6713/    2C7F : 20 42 91             JSR stats
    6714/    2C82 : 20 C2 0A             JSR GfxSetup
    6715/    2C85 : 20 C8 18             JSR InitForth
    6716/    2C88 :                      .input_loop:
    6717/    2C88 : AD 75 01             LDA mode
    6718/    2C8B : C9 40                CMP #$40
    6719/    2C8D : F0 15                BEQ .mode_good
    6720/    2C8F : A0 00                LDY #$0
    6721/    2C91 : 98                   TYA
    6722/    2C92 : 91 2E                STA (dict_save),Y
    6723/    2C94 : C8                   INY
    6724/    2C95 : 91 2E                STA (dict_save),Y
    6725/    2C97 : C8                   INY
    6726/    2C98 : 91 2E                STA (dict_save),Y
    6727/    2C9A : A9 40                LDA #$40
    6728/    2C9C : 8D 75 01             STA mode
    6729/    2C9F : A9 02                LDA #$2
    6730/    2CA1 : 4C 82 2D             JMP .error_sub
    6731/    2CA4 :                      .mode_good:
    6732/    2CA4 : A5 2E                LDA dict_save
    6733/    2CA6 : 85 2A                STA dict_ptr
    6734/    2CA8 : A5 2F                LDA dict_save+$1
    6735/    2CAA : 85 2B                STA dict_ptr+$1
    6736/    2CAC : 20 69 16             JSR DrawStack
    6737/    2CAF : 20 F3 18             JSR ReadLine
    6738/    2CB2 :                      .process_loop:
    6739/    2CB2 : 20 4F 1A             JSR LineWord
    6740/    2CB5 : A5 22                LDA ret_val
    6741/    2CB7 : F0 03                BEQ .no_word_error
    6742/    2CB9 : 4C 82 2D             JMP .error_sub
    6743/    2CBC :                      .no_word_error:
    6744/    2CBC : AD 19 08             LDA new_word_len
    6745/    2CBF : F0 C7                BEQ .input_loop
    6746/    2CC1 : 20 93 1A             JSR FindWord
    6747/    2CC4 : A5 22                LDA ret_val
    6748/    2CC6 : F0 5D                BEQ .word_not_found
    6749/    2CC8 : AD 75 01             LDA mode
    6750/    2CCB : C9 40                CMP #$40
    6751/    2CCD : D0 32                BNE .compile_word
    6752/    2CCF :                      .immediate:
    6753/    2CCF : A0 3C                LDY #$3C
    6754/    2CD1 : A5 22                LDA ret_val
    6755/    2CD3 : 8D 00 08             STA temp_thread
    6756/    2CD6 : C9 38                CMP #$38
    6757/    2CD8 : F0 0A                BEQ .insert_address
    6758/    2CDA : C9 32                CMP #$32
    6759/    2CDC : F0 06                BEQ .insert_address
    6760/    2CDE : 8C 01 08             STY temp_thread+$1
    6761/    2CE1 : 4C F6 2C             JMP .jump_thread
    6762/    2CE4 :                      .insert_address:
    6763/    2CE4 : 18                   CLC
    6764/    2CE5 : A5 32                LDA obj_address
    6765/    2CE7 : 69 03                ADC #$3
    6766/    2CE9 : 8D 01 08             STA temp_thread+$1
    6767/    2CEC : A5 33                LDA obj_address+$1
    6768/    2CEE : 69 00                ADC #$0
    6769/    2CF0 : 8D 02 08             STA temp_thread+$2
    6770/    2CF3 : 8C 03 08             STY temp_thread+$3
    6771/    2CF6 :                      .jump_thread:
    6772/    2CF6 : A9 00                LDA #temp_thread # $100
    6773/    2CF8 : 85 30                STA exec_ptr
    6774/    2CFA : A9 08                LDA #temp_thread/$100
    6775/    2CFC : 85 31                STA exec_ptr+$1
    6776/    2CFE : 4C F5 1D             JMP ExecThread
    6777/    2D01 :                      .compile_word:
    6778/    2D01 : A5 22                LDA ret_val
    6779/    2D03 : A8                   TAY
    6780/    2D04 : B9 F3 2A             LDA JUMP_TABLE-$2,Y
    6781/    2D07 : 85 24                STA ret_address
    6782/    2D09 : B9 F4 2A             LDA JUMP_TABLE-$1,Y
    6783/    2D0C : 85 25                STA ret_address+$1
    6784/    2D0E : A0 01                LDY #$1
    6785/    2D10 : B1 24                LDA (ret_address),Y
    6786/    2D12 : 29 40                AND #$40
    6787/    2D14 : D0 B9                BNE .immediate
    6788/    2D16 : A5 22                LDA ret_val
    6789/    2D18 : 20 88 1E             JSR WriteToken
    6790/    2D1B : A5 22                LDA ret_val
    6791/    2D1D : F0 03                BEQ .no_compile_error
    6792/    2D1F : 4C 82 2D             JMP .error_sub
    6793/    2D22 :                      .no_compile_error:
    6794/    2D22 : 4C B2 2C             JMP .process_loop
    6795/    2D25 :                      .word_not_found:
    6796/    2D25 : 20 EC 1A             JSR CheckData
    6797/    2D28 : A5 88                LDA R_ans
    6798/    2D2A : C9 04                CMP #$4
    6799/    2D2C : D0 05                BNE .input_good
    6800/    2D2E : A9 02                LDA #$2
    6801/    2D30 : 4C 82 2D             JMP .error_sub
    6802/    2D33 :                      .input_good:
    6803/    2D33 : AD 75 01             LDA mode
    6804/    2D36 : C9 40                CMP #$40
    6805/    2D38 : D0 2F                BNE .compile_value
    6806/    2D3A : A9 07                LDA #$7
    6807/    2D3C : CD 74 01             CMP stack_count
    6808/    2D3F : B0 05                BCS .no_overflow
    6809/    2D41 : A9 08                LDA #$8
    6810/    2D43 : 4C 82 2D             JMP .error_sub
    6811/    2D46 :                      .no_overflow:
    6812/    2D46 : 20 0F 1E             JSR StackAddItem
    6813/    2D49 : 86 00                STX $0 ;dest
    6814/    2D4B : A9 00                LDA #$0
    6815/    2D4D : 85 01                STA $1 ;dest
    6816/    2D4F : A9 88                LDA # (R_ans) # $100
    6817/    2D51 : 85 0F                STA $F ;MemCopy.source
    6818/    2D53 : A9 00                LDA # (R_ans)/$100
    6819/    2D55 : 85 10                STA $10 ;MemCopy.source
    6820/    2D57 : A5 00                LDA $0 ;dest
    6821/    2D59 : 85 11                STA $11 ;MemCopy.dest
    6822/    2D5B : A5 01                LDA $1 ;dest
    6823/    2D5D : 85 12                STA $12 ;MemCopy.dest
    6824/    2D5F : A9 09                LDA #$9
    6825/    2D61 : 85 13                STA $13 ;MemCopy.count
    6826/    2D63 : 20 AD 0B             JSR MemCopy
    6827/    2D66 : 4C B2 2C             JMP .process_loop
    6828/    2D69 :                      .compile_value:
    6829/    2D69 : A5 88                LDA R_ans
    6830/    2D6B : A0 28                LDY #$28
    6831/    2D6D : C9 01                CMP #$1
    6832/    2D6F : F0 17                BEQ .value_compile
    6833/    2D71 : A0 2A                LDY #$2A
    6834/    2D73 : C9 03                CMP #$3
    6835/    2D75 : F0 11                BEQ .value_compile
    6836/    2D77 : A0 2C                LDY #$2C
    6837/    2D79 : C9 02                CMP #$2
    6838/    2D7B : F0 0B                BEQ .value_compile
    6839/    2D7D : 00                   BRK
    6840/    2D7E : 00                   BRK
    6841/    2D7F : 4C B2 2C             JMP .process_loop
    6842/    2D82 :                      .error_sub:
    6843/    2D82 : 20 09 18             JSR ErrorMsg
    6844/    2D85 : 4C 88 2C             JMP .input_loop
    6845/    2D88 :                      .value_compile:
    6846/    2D88 : 84 03                STY $3 ;type
    6847/    2D8A : A9 09                LDA #$9
    6848/    2D8C : 20 69 1E             JSR AllocMem
    6849/    2D8F : A5 22                LDA ret_val
    6850/    2D91 : F0 03                BEQ .float_alloc_good
    6851/    2D93 : 4C 82 2D             JMP .error_sub
    6852/    2D96 :                      .float_alloc_good:
    6853/    2D96 : A5 03                LDA $3 ;type
    6854/    2D98 : A0 00                LDY #$0
    6855/    2D9A : 91 2A                STA (dict_ptr),Y
    6856/    2D9C :                      .loop:
    6857/    2D9C : C8                   INY
    6858/    2D9D : B9 88 00             LDA R_ans,Y
    6859/    2DA0 : 91 2A                STA (dict_ptr),Y
    6860/    2DA2 : C0 08                CPY #$8
    6861/    2DA4 : D0 F6                BNE .loop
    6862/    2DA6 : A5 2C                LDA new_dict_ptr
    6863/    2DA8 : 85 2A                STA dict_ptr
    6864/    2DAA : A5 2D                LDA new_dict_ptr+$1
    6865/    2DAC : 85 2B                STA dict_ptr+$1
    6866/    2DAE : 4C B2 2C             JMP .process_loop
    6867/    2DB1 : 60                   RTS
    6868/    2DB2 :                      
    6869/    2DB2 :                     code_end:
    6870/    2DB2 :                     
    6871/    2DB2 :                     
    6872/    2DB2 : =$2DB2              EEPROM set *
    6873/    2DB2 :                     
    6874/    2DB2 :                     	OUTRADIX 10
    6875/    2DB2 :                     
    6876/    2DB2 :                     AddCommas MACRO num
    6877/    2DB2 :                     comma_ret set "\{num}"
    6878/    2DB2 :                     	IF num<1000
    6879/    2DB2 :                     		EXITM
    6880/    2DB2 :                     	ELSE
    6881/    2DB2 :                     comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    6882/    2DB2 :                     	ENDIF
    6883/    2DB2 :                     	ENDM
    6884/    2DB2 :                     
    6885/    2DB2 :                     ;Display memory usage in console
    6886/    2DB2 :                     ;===============================
 
    6887/    2DB2 :                     	MESSAGE " "
Memory usage
    6888/    2DB2 :                     	MESSAGE "Memory usage"
============
    6889/    2DB2 :                     	MESSAGE "============"
    6890/    2DB2 : (MACRO)             	AddCommas EEPROM-$900
    6890/    2DB2 : =9394               comma_ret set "\{EEPROM-$900}"
    6890/    2DB2 : =>FALSE                     IF EEPROM-$900<1000
    6890/    2DB2 :                                     EXITM
    6890/    2DB2 : =>TRUE                      ELSE
    6890/    2DB2 : =9,394              comma_ret set "\{substr(comma_ret,0,strlen(comma_ret)-3)},\{substr(comma_ret,strlen(comma_ret)-3,strlen(comma_ret))}"
    6890/    2DB2 : [6890]                      ENDIF
ROM size:	9,394 bytes (114%) of 8k ROM
    6891/    2DB2 :                     	MESSAGE "ROM size:	\{comma_ret} bytes (\{100*(EEPROM-$900)/$2000}%) of 8k ROM"
    6892/    2DB2 :                     	;AddCommas GENRAM-$200
    6893/    2DB2 :                     	;MESSAGE "RAM size:	\{comma_ret} bytes (\{100*(GENRAM-$200)/($4000-$200)}%) of 15.8k bank"
    6894/    2DB2 :                     	;Tell script that prints assembler output to stop outputting
    6895/    2DB2 :                     	;Eliminates double output (because of multiple passes???)
END
    6896/    2DB2 :                     	MESSAGE "END"
 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 2 - 9/26/2021 0:20:37


  Symbol Table (* = unused):
  --------------------------

*ADD_STRING :                  203C C | *ARCHITECTURE :  i386-unknown-win32 - |
 ATANH_TABLE :                 113B C |  ATAN_TABLE :                  10D9 C |
 AUX_STACK :                    82D C | *AUX_STUB :                    2BFD C |
 AUX_STUB.pop_good :           2C07 C | *AddTest :                     8BD1 C |
 AddTest.done :                8C1E C |  AllocMem :                    1E69 C |
 AllocMem.mem_good :           1E87 C |  AuxPopShort :                 18B1 C |
 AuxPopShort.stack_good :      18BB C |  AuxPushShort :                1892 C |
 AuxPushShort.mem_good :       18A1 C |  BCD_Add :                      E9F C |
 BCD_Add.._1961.skip :          EE4 C |  BCD_Add.._1964.skip :          EF4 C |
 BCD_Add.._1965.skip :          EFE C |  BCD_Add.R1_good :              EB9 C |
 BCD_Add.add_loop :             F29 C |  BCD_Add.carry_done :           F61 C |
*BCD_Add.do_add :               F24 C |  BCD_Add.do_shift :             EFE C |
 BCD_Add.do_sign :              F04 C |  BCD_Add.done :                 F78 C |
 BCD_Add.ignore :               F6A C |  BCD_Add.invert_R0 :            F15 C |
 BCD_Add.no_carry :             F50 C |  BCD_Add.no_carry2 :            F5F C |
 BCD_Add.no_copy :              F73 C |  BCD_Add.no_zero_exit :         EB1 C |
 BCD_Add.not_neg :              EED C |  BCD_Add.not_same :             F53 C |
 BCD_Add.same_sign :            F18 C |  BCD_Add.zero_copy_exit :       EA9 C |
 BCD_Add.zero_exit :            F82 C |  BCD_CORDIC :                  11AD C |
 BCD_CORDIC.._2038.skip :      12A4 C |  BCD_CORDIC.._2040.skip :      12C6 C |
 BCD_CORDIC.X_done :           1264 C |  BCD_CORDIC.Y_done :           1295 C |
 BCD_CORDIC.add_X :            1259 C |  BCD_CORDIC.add_X_loop :       125A C |
 BCD_CORDIC.add_Y :            128A C |  BCD_CORDIC.add_Y_loop :       128B C |
 BCD_CORDIC.add_Z :            121D C |  BCD_CORDIC.add_Z_loop :       121E C |
 BCD_CORDIC.compare_done :     11FC C |  BCD_CORDIC.load_atan :        11DA C |
 BCD_CORDIC.load_done :        11E4 C |  BCD_CORDIC.loop_inner :       11F9 C |
 BCD_CORDIC.loop_outer :       11F4 C |  BCD_CORDIC.no_inc :           12BE C |
*BCD_CORDIC.sub_X :            124B C |  BCD_CORDIC.sub_X_loop :       124C C |
*BCD_CORDIC.sub_Y :            127C C |  BCD_CORDIC.sub_Y_loop :       127D C |
*BCD_CORDIC.sub_Z :            1207 C |  BCD_CORDIC.sub_Z_loop :       1208 C |
 BCD_CORDIC.z_done :           1230 C |  BCD_Div :                     1033 C |
 BCD_Div.add_back :            108E C |  BCD_Div.add_loop :            1093 C |
 BCD_Div.div_loop :            107E C |  BCD_Div.loop :                1079 C |
 BCD_Div.loop_outer :          1074 C |  BCD_Div.no_zero_exit :        103C C |
 BCD_Div.sticky_loop :         10B3 C | *BCD_Div.zero_exit :           10CE C |
 BCD_Exp_diff :                 E57 C |  BCD_Mult :                     F86 C |
 BCD_Mult.add_loop :            FDE C |  BCD_Mult.add_skip :            FF0 C |
 BCD_Mult.loop :                FC4 C |  BCD_Mult.mult_loop :           FD9 C |
 BCD_Mult.no_carry :            FEC C |  BCD_Mult.no_zero_exit :        F9F C |
 BCD_Mult.ret_zero :            F9C C |  BCD_Mult.shift :              100B C |
 BCD_Mult.shift_done :         1010 C |  BCD_Mult.sticky_loop :        1014 C |
 BCD_Mult.zero_exit :          102F C |  BCD_Pack :                     E35 C |
 BCD_Pack.no_rev :              E40 C |  BCD_Pack.no_underflow :        E47 C |
 BCD_Pack.overflow_done :       E50 C |  BCD_RevExp :                   BE1 C |
 BCD_RevSig :                   BEF C |  BCD_RevSig.loop :              BF2 C |
 BCD_Reverse :                  BCF C |  BCD_Reverse.loop :             BD4 C |
 BCD_Round :                    DF0 C |  BCD_Round.no_carry :           E17 C |
 BCD_Round.no_round :           E18 C |  BCD_Round.round_loop :         DFB C |
 BCD_StickyRound :              E67 C |  BCD_StickyRound.no_round :     E9E C |
 BCD_StickyRound.not_50 :       E81 C |  BCD_StickyRound.round :        E83 C |
 BCD_StickyRound.round_done :   E9E C |  BCD_StickyRound.round_even :   E79 C |
 BCD_StickyRound.round_loop :   E88 C |  BCD_Unpack :                   E19 C |
 BCD_Unpack.no_reverse :        E2E C | *BIGENDIAN :                      0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  1 - |
 CODE_ABS :                    2A05 C |  CODE_ACOS :                   2AA5 C |
 CODE_ADD :                    2024 C |  CODE_ADD.float :              202C C |
 CODE_ADD.not_float :          2038 C |  CODE_AGAIN :                  27A3 C |
 CODE_AGAIN.loop :             27A5 C |  CODE_AGAIN.pop_good :         27AD C |
 CODE_AGAIN.type_good :        27C0 C |  CODE_AGAIN_THREAD :           27D3 C |
 CODE_AGAIN_THREAD.no_exit_early :                                     27DF C |
 CODE_AND :                    2892 C |  CODE_ASIN :                   2A9A C |
 CODE_ATAN :                   2AB0 C |  CODE_BEGIN :                  277E C |
 CODE_BEGIN.mem_good :         278A C |  CODE_BREAK :                  24D8 C |
 CODE_CFETCH :                 22B5 C |  CODE_CLEAR :                  2017 C |
 CODE_COLON :                  22D3 C |  CODE_COLON.error_exit :       22E9 C |
 CODE_COLON.name_word :        22EE C |  CODE_COLON.not_compile :      22E1 C |
 CODE_COLON.word_not_found :   22F7 C |  CODE_COS :                    2A3E C |
 CODE_CSTORE :                 2299 C |  CODE_DEG :                    2ABD C |
 CODE_DIV :                    2140 C |  CODE_DO :                     252D C |
 CODE_DO.mem_good :            2539 C |  CODE_DO_THREAD :              2555 C |
 CODE_DO_THREAD.loop :         257A C |  CODE_DO_THREAD.mem_good :     2563 C |
 CODE_DROP :                   1FA1 C |  CODE_DUP :                    1F69 C |
 CODE_DUP.dup_loop :           1F6F C |  CODE_ELSE :                   2993 C |
 CODE_ELSE.error_exit :        29A4 C |  CODE_ELSE.process_if :        29A9 C |
 CODE_EQUAL :                  2652 C |  CODE_EQUAL.false :            2662 C |
 CODE_EQUAL.not_float :        2665 C |  CODE_EXEC :                   21FE C |
 CODE_EXEC.no_c :              222C C |  CODE_EXEC.primitive :         2222 C |
 CODE_EXEC.secondary :         222F C |  CODE_EXIT :                   24C9 C |
 CODE_EXIT_THREAD :            2740 C |  CODE_EXIT_THREAD.done :       2762 C |
 CODE_EXIT_THREAD.loop :       2749 C |  CODE_EXIT_THREAD.no_dec :     276A C |
 CODE_FETCH :                  2279 C |  CODE_FLOAT :                  2337 C |
 CODE_FREE :                   2481 C |  CODE_GT :                     2673 C |
 CODE_GT.false :               26A8 C |  CODE_GT.hex_false :           2692 C |
 CODE_GT.not_hex :             2698 C |  CODE_HALT :                   2362 C |
 CODE_HEX :                    2344 C |  CODE_I :                      26DA C |
 CODE_I.count_good :           26EB C |  CODE_I.error_exit :           26E4 C |
 CODE_I.loop :                 26F7 C |  CODE_I.push_stack :           26EE C |
 CODE_IF :                     2923 C |  CODE_IF.mem_good :            292F C |
 CODE_J :                      270D C |  CODE_K :                      2727 C |
 CODE_LEAVE :                  28F9 C |  CODE_LEAVE.mem_good :         2905 C |
 CODE_LEAVE_THREAD :           2918 C |  CODE_LOOP :                   259D C |
 CODE_LOOP.loop :              259F C |  CODE_LOOP.loop_done :         25DB C |
 CODE_LOOP.pop_good :          25A7 C |  CODE_LOOP.process_leave :     25BE C |
 CODE_LOOP_THREAD :            25EE C |  CODE_LOOP_THREAD.copy_loop :  2614 C |
 CODE_LOOP_THREAD.loop :       25F7 C |  CODE_LOOP_THREAD.loop_done :  263C C |
 CODE_LSHIFT :                 29D8 C |  CODE_LSHIFT.shift :           29DD C |
 CODE_LT :                     26B0 C |  CODE_MAX :                    2861 C |
 CODE_MAX.drop :               286A C |  CODE_MAX.nip :                2870 C |
 CODE_MIN :                    2880 C |  CODE_MIN_ROT :                1FF1 C |
 CODE_MIN_ROT.min_rot_loop :   1FF7 C |  CODE_MULT :                   20C2 C |
 CODE_NEQ :                    26BE C |  CODE_NEQ.no_error :           26C8 C |
 CODE_NOT :                    28DC C |  CODE_NOT.set :                28E7 C |
 CODE_NOT.set_true :           28EC C |  CODE_OR :                     28AA C |
 CODE_OVER :                   1FB4 C |  CODE_OVER.over_loop :         1FBA C |
 CODE_PI :                     2A14 C |  CODE_QUIT :                   24EA C |
 CODE_ROT :                    1FCC C |  CODE_ROT.rot_loop :           1FD2 C |
 CODE_RSHIFT :                 29EE C |  CODE_RSHIFT.shift :           29F3 C |
 CODE_SECONDARY :              249D C |  CODE_SEMI :                   2327 C |
 CODE_SIN :                    2A2A C |  CODE_STO :                    23FA C |
 CODE_STO.copy_data :          2456 C |  CODE_STO.count_good :         242B C |
 CODE_STO.error_exit :         2433 C |  CODE_STO.error_type :         244F C |
 CODE_STO.immediate :          241F C |  CODE_STO.loop :               245C C |
 CODE_STO.type_good :          2454 C |  CODE_STO.word_exists :        2447 C |
 CODE_STO.word_found :         2438 C |  CODE_STORE :                  2259 C |
*CODE_STO_CHAR :               2474 C |  CODE_STO_THREAD :             2510 C |
 CODE_STRING :                 2351 C |  CODE_SUB :                    207C C |
 CODE_SUB.float :              2084 C |  CODE_SUB.hex :                2094 C |
 CODE_SUB.not_float :          208D C |  CODE_SUB.not_raw_hex :        20A4 C |
 CODE_SUB.not_smart_hex :      20B8 C |  CODE_SWAP :                   1F82 C |
 CODE_SWAP.swap_loop :         1F88 C |  CODE_TAN :                    2A57 C |
*CODE_TAN.const :              2A60 C |  CODE_TAN.divide :             2A72 C |
*CODE_TAN.error :              2A64 C |  CODE_TAN.push0 :              2A6D C |
 CODE_THEN :                   2946 C |  CODE_THEN.error_exit :        294F C |
 CODE_THEN.loop :              294B C |  CODE_THEN.process_if :        296B C |
 CODE_THEN.process_skip :      2965 C |  CODE_THEN.stack_good :        2954 C |
 CODE_TICK :                   21BF C |  CODE_TICK.error_exit :        21C9 C |
 CODE_TICK.word_found :        21D0 C |  CODE_UNTIL :                  27F6 C |
 CODE_UNTIL.loop :             27F8 C |  CODE_UNTIL.pop_good :         2800 C |
 CODE_UNTIL.type_good :        2813 C |  CODE_UNTIL_THREAD :           2826 C |
 CODE_UNTIL_THREAD.done :      2852 C |  CODE_UNTIL_THREAD.handle :    284A C |
 CODE_UNTIL_THREAD.no_exit_early :                                     2832 C |
 CODE_UNTIL_THREAD.not_float : 283D C |  CODE_UNTIL_THREAD.string :    2848 C |
 CODE_VAR :                    236E C |  CODE_VAR.error_exit :         2378 C |
 CODE_VAR.loop :               23BC C |  CODE_VAR.no_error :           239E C |
 CODE_VAR.var_create :         2386 C |  CODE_VAR.word_found :         237F C |
 CODE_VAR_THREAD :             23D1 C |  CODE_VAR_THREAD.loop :        23E2 C |
 CODE_XOR :                    28C3 C |  COMPARISON_STUB :             2BA8 C |
 COMPARISON_STUB.not_float :   2BB4 C |  COMPARISON_STUB.not_hex :     2BBE C |
*CONSTPI :        3.141592653589793 - |  COPY_STUB :                   2B93 C |
 COPY_STUB.loop :              2B97 C | *CORDIC_AsinAcos :             140E C |
 CORDIC_AsinAcos.loop :        1470 C |  CORDIC_AsinAcos.no_ret_zero : 14A1 C |
 CORDIC_AsinAcos.no_shift :    14B4 C |  CORDIC_AsinAcos.not_one :     1454 C |
 CORDIC_AsinAcos.not_zero :    1426 C |  CORDIC_AsinAcos.range_good :  1465 C |
 CORDIC_AsinAcos.ret_zero :    149A C |  CORDIC_AsinAcos.return_0 :    1415 C |
 CORDIC_Atan :                 139F C |  CORDIC_Atan.loop :            13BD C |
 CORDIC_Atan.no_ret_zero :     13EE C |  CORDIC_Atan.no_shift :        1401 C |
 CORDIC_Atan.not_zero :        13B1 C |  CORDIC_Atan.ret_zero :        13E7 C |
 CORDIC_Atan.return_0 :        13A7 C |  CORDIC_Atrig1 :               1398 C |
 CORDIC_COMPARE_TABLE :        11A7 C |  CORDIC_Compare_Y :            119D C |
 CORDIC_Compare_Y_R5 :         11A2 C |  CORDIC_Compare_Z :            1196 C |
 CORDIC_MarkSign :             12D3 C |  CORDIC_MarkSign.sign_pos :    12E1 C |
 CORDIC_Pack :                 14C1 C |  CORDIC_Pack.no_sign :         14FA C |
 CORDIC_Pack.skip_cleanup :    14EB C |  CORDIC_Push :                 14FB C |
 CORDIC_ShiftR0 :              12C9 C |  CORDIC_Trig :                 12E5 C |
 CORDIC_Trig.loop :            134A C |  CORDIC_Trig.no_ret_zero :     1378 C |
 CORDIC_Trig.no_shift :        138B C |  CORDIC_Trig.not_one :         132E C |
 CORDIC_Trig.not_zero :        1300 C |  CORDIC_Trig.range_good :      133F C |
 CORDIC_Trig.ret_zero :        1371 C |  CORDIC_Trig.return_0 :        12EF C |
 CORDIC_comparator :            817 C |  CORDIC_end_sign :              816 C |
 CORDIC_halve :                 811 C |  CORDIC_loop_inner :            812 C |
 CORDIC_loop_outer :            813 C |  CORDIC_shift_count :           814 C |
 CORDIC_sign :                  810 C |  CORDIC_sign_temp :             815 C |
 CheckData :                   1AEC C |  CheckData.add_digit :         1D2D C |
 CheckData.dec_exp_count :     1BD9 C |  CheckData.decimal_good :      1C29 C |
 CheckData.digit :             1D20 C |  CheckData.digit_good :        1BDE C |
 CheckData.digit_ok :          1BEC C |  CheckData.digit_zero :        1BCC C |
 CheckData.exp_check :         1BF0 C |  CheckData.exp_count_done :    1CA9 C |
 CheckData.exp_count_good :    1C79 C |  CheckData.exp_count_neg :     1CA3 C |
 CheckData.exp_count_neg2 :    1CB3 C |  CheckData.exp_digit :         1BFF C |
 CheckData.exp_digit_ok :      1C07 C |  CheckData.exp_good :          1C2E C |
 CheckData.exp_loop :          1C0C C |  CheckData.exp_min_loop :      1CA3 C |
 CheckData.exp_no_neg_bit :    1CF6 C |  CheckData.exp_pos_loop :      1C9A C |
 CheckData.exp_positive :      1C8C C |  CheckData.exp_positive2 :     1CE3 C |
 CheckData.first_exp :         1C43 C |  CheckData.float_done :        1C67 C |
 CheckData.float_first_done :  1BB1 C |  CheckData.float_next :        1BF6 C |
 CheckData.float_no_neg :      1BAC C |  CheckData.float_not_digit :   1C20 C |
 CheckData.float_not_exp :     1BB1 C |  CheckData.float_success :     1D0D C |
 CheckData.hex_char_next :     1B74 C |  CheckData.hex_done :          1B7E C |
 CheckData.hex_error :         1B82 C |  CheckData.hex_rot_loop :      1D16 C |
 CheckData.hex_rotate :        1D12 C |  CheckData.is_digit_no :       1D2B C |
 CheckData.loop_float :        1BB1 C |  CheckData.loop_hex :          1B4A C |
 CheckData.loop_str :          1B14 C |  CheckData.minus_good :        1C60 C |
 CheckData.no_dec_yet :        1BF6 C |  CheckData.no_exp_overflow :   1CEC C |
 CheckData.no_implied_0 :      1C34 C |  CheckData.not_decimal_point : 1C3A C |
 CheckData.not_digit :         1B62 C |  CheckData.not_exp :           1C51 C |
 CheckData.not_hex :           1B83 C |  CheckData.not_minus :         1C66 C |
 CheckData.not_single_quote :  1B11 C |  CheckData.not_string :        1B36 C |
 CheckData.not_zero_len :      1AF6 C |  CheckData.positive :          1D00 C |
 CheckData.second_digit :      1D47 C |  CheckData.shift_loop :        1D02 C |
 CheckData.str_done :          1B2B C |  CheckData.str_return :        1B35 C |
 CheckData.string_too_long :   1B2A C |
 CheckData.string_unterminated :                                       1B2A C |
 CheckData.zero_loop :         1AFA C |  CheckData.zero_ret :          1C70 C |
 CompareRans :                 8AD0 C |  CompareRans.failed :          8ADF C |
 CompareRans.loop :            8AD2 C |  CopyNew :                     8A4F C |
 CopyNew.loop :                8A51 C |  CopyNew.loop_done :           8A5C C |
 CopyRegs :                     C3A C |  CopyRegs.swap_loop :           C46 C |
*DATE :                   9/26/2021 - | *DIV_FLOAT :                   2148 C |
 DIV_FLOAT.no_error :          2153 C |  DebugBuff :                   8A91 C |
 DebugBuff.._362.str_addr :    8AA6 C |  DebugBuff.._362.str_skip :    8AA8 C |
 DebugBuff.loop :              8A95 C |  DebugRans :                   8A63 C |
 DebugRans.._338.str_addr :    8A77 C |  DebugRans.._338.str_skip :    8A79 C |
 DebugRans.loop :              8A67 C |  DebugText :                   D000 C |
 DebugText.done :              D00D C |  DebugText.loop :              D002 C |
 DictEnd :                     1E18 C |  DictEnd.alloc_good :          1E22 C |
 DictEnd.no_end_token :        1E33 C |  DictEnd.skip :                1E33 C |
 DigitHigh :                   1503 C |  DigitLow :                    1516 C |
*DivTest :                     8C73 C |  DivTest.done :                8CC0 C |
 DrawFloat :                   1527 C |  DrawFloat.._2197.no_carry :   152D C |
 DrawFloat.loop :              157B C |  DrawFloat.positive :          1554 C |
 DrawFloat.positive_e :        15A8 C |  DrawHex :                     160F C |
 DrawStack :                   1669 C |  DrawStack.._2846.str_addr :   1692 C |
 DrawStack.._2846.str_skip :   1699 C |  DrawStack.item_done :         1715 C |
 DrawStack.loop :              16B9 C |  DrawStack.loop_line :         1731 C |
 DrawStack.no_item :           1715 C |  DrawStack.not_float :         16F1 C |
 DrawStack.not_hex :           1715 C |  DrawStack.not_str :           1703 C |
 DrawString :                  163F C |  DrawString.done :             1661 C |
 DrawString.loop :             164A C |  EEPROM :                      2DB2 - |
 ERROR_MSG_COMPILE_ONLY :      17B5 C |  ERROR_MSG_DIV_ZERO :          1797 C |
 ERROR_MSG_IMMED_ONLY :        17A6 C |  ERROR_MSG_INPUT :             173D C |
 ERROR_MSG_OUT_OF_MEM :        17C4 C |  ERROR_MSG_RANGE :             17E2 C |
 ERROR_MSG_STACK_OVERFLOW :    176A C |  ERROR_MSG_STACK_UNDERFLOW :   1779 C |
 ERROR_MSG_STRING :            175B C |  ERROR_MSG_STRUCTURE :         17D3 C |
 ERROR_MSG_WORD_TOO_LONG :     174C C |  ERROR_MSG_WRONG_TYPE :        1788 C |
 ERROR_TABLE :                 17F1 C |  ErrorMsg :                    1809 C |
 ErrorMsg.._3038.str_addr :    1824 C |  ErrorMsg.._3038.str_skip :    1834 C |
 ErrorMsg.._3108.str_addr :    1869 C |  ErrorMsg.._3108.str_skip :    1879 C |
 ErrorMsg.loop :               1889 C |  ExecThread :                  1DF5 C |
 ExecThread.loop :             1DF5 C |  ExecThread.no_error :         1E06 C |
 ExecToken :                   1D54 C |  ExecToken.address_ready :     1D63 C |
 ExecToken.exec_primitive :    1D74 C |  ExecToken.exec_word :         1D74 C |
 ExecToken.mode_check_done :   1DE6 C |  ExecToken.no_add_item :       1DA0 C |
 ExecToken.no_flags :          1DE6 C |  ExecToken.no_overflow :       1D9D C |
 ExecToken.no_underflow :      1D8B C |  ExecToken.not_same :          1DB8 C |
 ExecToken.skip :              1DF1 C |  ExecToken.type_check :        1DBD C |
 ExecToken.type_check_done :   1DD6 C |  ExecToken.type_good :         1DCC C |
 ExecToken.type_loop :         1DBF C | *FALSE :                          0 - |
 FORTH_WORDS :                 1F62 C | *FULLPMMU :                       1 - |
 FileInputTest :               8D96 C |
 FileInputTest.._1190.str_addr :                                       8DDD C |
 FileInputTest.._1190.str_skip :                                       8DE9 C |
 FileInputTest.._1210.str_addr :                                       8E0F C |
 FileInputTest.._1210.str_skip :                                       8E1B C |
 FileInputTest.._1230.str_addr :                                       8E29 C |
 FileInputTest.._1230.str_skip :                                       8E37 C |
 FileInputTest.._1250.no_carry :                                       8E64 C |
 FileInputTest.check_loop :    8D9B C |  FileInputTest.continue :      8DD7 C |
 FileInputTest.done :          8E59 C |  FileInputTest.fail_loop :     8E44 C |
 FileInputTest.failed_input :  8DDA C |  FileInputTest.letter :        8DA8 C |
 FileInputTest.letter2 :       8DBE C |  FileInputTest.letter_done :   8DAB C |
 FileInputTest.letter_done2 :  8DC1 C |  FindWord :                    1A93 C |
 FindWord.loop :               1AA0 C |  FindWord.loop_next :          1ABA C |
 FindWord.no_match :           1ABA C |  FindWord.not_found :          1ACF C |
 FindWord.str_loop :           1AAA C |  FindWord.word_found :         1AD2 C |
 GfxSetup :                     AC2 C | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HEX_RECALC :                  2B83 C |
 HEX_STUB :                    1F55 C |  HalfShift :                    C7E C |
 HalfShift.half_loop :          C83 C |  HalfShiftBackward :            CAD C |
 HalfShiftBackward.half_loop :  CAF C |  HalfShiftForward :             C99 C |
 HalfShiftForward.half_loop :   C9B C |  HalfShiftWide :                CBF C |
 HalfShiftWide.half_loop :      CC1 C |  HalfShiftWideForward :         CDF C |
 HalfShiftWideForward.half_loop :                                       CE1 C |
 HexFalse :                    1F49 C |  HexHigh :                     15D3 C |
 HexHigh.done :                15EA C |  HexHigh.print_digit :         15E5 C |
 HexLow :                      15F2 C |  HexLow.done :                 1607 C |
 HexLow.print_digit :          1602 C |  HexTrue :                     1F4F C |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - |  INV_K :                       10D2 C |
 IncDictPtr :                  1E55 C |  IncDictPtr.skip :             1E5E C |
 IncExecPtr :                  1E5F C |  IncExecPtr.done :             1E68 C |
 IncRansExp :                   C1A C |  InitForth :                   18C8 C |
*InputTest :                   890A C |  InputTest.._137.str_addr :    896F C |
 InputTest.._137.str_skip :    8977 C |  InputTest.._161.str_addr :    898E C |
 InputTest.._161.str_skip :    899A C |  InputTest.._185.str_addr :    89A8 C |
 InputTest.._185.str_skip :    89B6 C |  InputTest.._237.str_addr :    89CF C |
 InputTest.._237.str_skip :    89DF C |  InputTest.._262.str_addr :    8A04 C |
 InputTest.._262.str_skip :    8A0C C |  InputTest.._286.str_addr :    8A23 C |
 InputTest.._286.str_skip :    8A2E C |  InputTest.._307.no_carry :    8A41 C |
 InputTest.check_loop :        8923 C |  InputTest.continue :          8966 C |
 InputTest.done :              8A01 C |  InputTest.fail_loop :         89EC C |
 InputTest.failed :            896C C |  InputTest.letter :            8931 C |
 InputTest.letter2 :           8947 C |  InputTest.letter_done :       8934 C |
 InputTest.letter_done2 :      894A C |  InputTest.loop :              890C C |
 InputTest.loop_done :         8917 C |  JUMP_TABLE :                  2AF5 C |
 LCD_char :                     AF5 C |  LCD_char.._1765.skip :         AFE C |
 LCD_char.._1770.skip :         B06 C |  LCD_char.blank_loop :          B7C C |
 LCD_char.color :               B4C C |  LCD_char.if1 :                 AFF C |
 LCD_char.if2 :                 B07 C |  LCD_char.loop :                B33 C |
 LCD_char.loop.inner :          B44 C |  LCD_char.no_C :                B20 C |
 LCD_char.no_inv :              B7A C |  LCD_clrscr :                   AD1 C |
 LCD_clrscr.loop :              AE1 C |  LCD_print :                    B94 C |
 LCD_print.done :               BAC C |  LCD_print.loop :               B98 C |
*LISTON :                         1 - |  LOGIC_STUB :                  2BEE C |
 LOGIC_STUB.good :             2BFA C |  LineWord :                    1A4F C |
 LineWord.chars_left :         1A61 C |  LineWord.chars_left2 :        1A87 C |
 LineWord.found :              1A92 C |  LineWord.loop :               1A61 C |
 LineWord.not_space :          1A74 C |  LineWord.word_size_good :     1A87 C |
*MACEXP :                         7 - |  MIN_MAX_STUB :                2BD2 C |
 MIN_MAX_STUB.comparison_good :                                        2BED C |
*MOMCPU :                      6502 - | *MOMCPUNAME :                  6502 - |
*MULT_FLOAT :                  20CA C |  MaxReg :                       C08 C |
 MaxReg.loop :                  C0C C |  MemCopy :                      BAD C |
 MemCopy.loop :                 BAF C | *MultTest :                    8C22 C |
 MultTest.done :               8C6F C | *NESTMAX :                      100 - |
 NewToR :                      8A42 C |  NewToR.loop :                 8A44 C |
 NormRans :                     D6B C |  NormRans.adjust_exp :          DD9 C |
 NormRans.c2 :                  D80 C |  NormRans.done :                D89 C |
 NormRans.even_shift :          DAA C |  NormRans.fill_loop :           DD3 C |
 NormRans.loop :                D72 C |  NormRans.not_0 :               D99 C |
 NormRans.return :              DEF C |  NormRans.shift_loop :          DBC C |
*PACKING :                        0 - | *PADDING :                        1 - |
 PUSH_STUB :                   2C38 C |  PUSH_STUB.loop :              2C42 C |
 PUSH_STUB.skip :              2C59 C | *PUSH_STUB_0 :                 2C5C C |
*PUSH_STUB_1 :                 2C69 C |  R0 :                            38 C |
 R1 :                            42 C |  R2 :                            4C C |
 R3 :                            56 C |  R4 :                            60 C |
*R5 :                            6A C | *R6 :                            74 C |
 R7 :                            7E C | *RELAXED :                        0 - |
*RIOT_mem_begin :               800 C |  RIOT_mem_end :                 874 C |
 R_ans :                         88 C |  RansToBuff :                  8AC2 C |
 RansToBuff.loop :             8AC4 C |  RansTos :                      C67 C |
 RansTos.loop :                 C70 C |  ReadKey :                      ACD C |
 ReadLine :                    18F3 C |  ReadLine.._3172.str_addr :    1902 C |
 ReadLine.._3172.str_skip :    1919 C |  ReadLine.backspace_done :     197C C |
 ReadLine.backspace_scroll :   1976 C |  ReadLine.buffer_full :        1A1F C |
 ReadLine.cursor_done :        1A4B C |  ReadLine.draw :               1A3B C |
 ReadLine.draw_blank :         1A35 C |  ReadLine.draw_done :          1A1F C |
 ReadLine.key_E :              1992 C |  ReadLine.key_done :           19C8 C |
 ReadLine.key_read :           1939 C |  ReadLine.loop :               192D C |
 ReadLine.no_key :             1A1F C |  ReadLine.not_backspace :      197F C |
 ReadLine.not_enter :          194C C |  ReadLine.not_lower :          19C8 C |
 ReadLine.not_num :            19AE C |  ReadLine.not_upper :          19BB C |
 ReadLine.not_valid :          1A1F C |  ReadLine.scroll_buffer :      19F2 C |
 ReadLine.scroll_loop :        19FC C |  ReadLine.special_loop :       1981 C |
 ReadLine.special_next :       199C C |  Regs_end :                      92 C |
 SHIFT_STUB :                  2C0E C |  SHIFT_STUB.done :             2C33 C |
 SHIFT_STUB.hex_raw :          2C1B C |  SHIFT_STUB.zero_check :       2C2E C |
 ShiftR0 :                      CFD C |  ShiftR0.CORDIC :               D27 C |
 ShiftR0.both_digits :          D19 C |  ShiftR0.done :                 D6A C |
 ShiftR0.fill_loop :            D64 C |  ShiftR0.loop :                 D49 C |
 ShiftR0.no_half_shift :        D37 C |  ShiftR0.sticky_done :          D24 C |
 ShiftR0.sticky_loop :          D11 C |  StackAddItem :                1E0F C |
 SwapR0R1 :                     C28 C |  SwapR0R1.swap_loop :           C2A C |
*TIME :                     0:20:37 - | *TRUE :                           1 - |
 TestFail :                    8AE1 C |  TestFail.._401.str_addr :     8AE4 C |
 TestFail.._401.str_skip :     8AEC C |  TestFail.._421.str_addr :     8B03 C |
 TestFail.._421.str_skip :     8B0F C |  TestFail.._441.str_addr :     8B1D C |
 TestFail.._441.str_skip :     8B2B C |  TestFail.._482.str_addr :     8B44 C |
 TestFail.._482.str_skip :     8B54 C |  TestFail.._504.str_addr :     8B65 C |
 TestFail.._504.str_skip :     8B6A C |  TestFail.loop :               8AE1 C |
 TestsPassed :                 8B7B C |  TestsPassed.._530.str_addr :  8B7E C |
 TestsPassed.._530.str_skip :  8B86 C |  TestsPassed.._549.str_addr :  8B9D C |
 TestsPassed.._549.str_skip :  8BA9 C |  TestsPassed.._570.str_addr :  8BBA C |
 TestsPassed.._570.str_skip :  8BBD C |  TestsPassed.._586.no_carry :  8BD0 C |
 TokenArgThread :              1F20 C |  TokenArgThread.success :      1F2C C |
 TosR0R1 :                      C50 C |  TosR0R1.loop :                 C54 C |
*VERSION :                     142F - |  WITHIN_WORD :                 2BC5 C |
 WITHIN_WORD.good :            2BD1 C |  WORD_ABS :                    29FE C |
 WORD_ACOS :                   2A9D C |  WORD_ADD :                    201F C |
 WORD_AGAIN :                  279A C |  WORD_AGAIN_THREAD :           27CF C |
 WORD_AND :                    288B C | *WORD_ASIN :                   2A92 C |
 WORD_ATAN :                   2AA8 C |  WORD_BEGIN :                  2775 C |
 WORD_BREAK :                  24D4 C |  WORD_CFETCH :                 22AF C |
 WORD_CLEAR :                  200E C |  WORD_COLON :                  22CE C |
 WORD_COS :                    2A37 C |  WORD_CSTORE :                 2293 C |
 WORD_DEG :                    2AB6 C |  WORD_DIV :                    213B C |
 WORD_DO :                     2527 C |  WORD_DO_THREAD :              2551 C |
 WORD_DROP :                   1F99 C | *WORD_DUP :                    1F62 C |
 WORD_ELSE :                   298B C |  WORD_EQUAL :                  264D C |
 WORD_EXEC :                   21F6 C |  WORD_EXIT :                   24C1 C |
 WORD_EXIT_THREAD :            273C C |  WORD_FETCH :                  2274 C |
 WORD_FLOAT :                  2333 C |  WORD_FREE :                   2479 C |
 WORD_GT :                     266E C |  WORD_HALT :                   235A C |
 WORD_HEX :                    2340 C |  WORD_I :                      26D5 C |
 WORD_IF :                     291D C |  WORD_J :                      2708 C |
 WORD_K :                      2722 C |  WORD_LEAVE :                  28F0 C |
 WORD_LEAVE_THREAD :           2914 C |  WORD_LOOP :                   2595 C |
 WORD_LOOP_THREAD :            25EA C |  WORD_LSHIFT :                 29D2 C |
 WORD_LT :                     26AB C |  WORD_MAX :                    285A C |
 WORD_MIN :                    2879 C |  WORD_MIN_ROT :                1FE9 C |
 WORD_MULT :                   20BD C |  WORD_NEQ :                    26B8 C |
 WORD_NOT :                    28D5 C |  WORD_OR :                     28A4 C |
 WORD_OVER :                   1FAC C |  WORD_PI :                     2A0E C |
 WORD_QUIT :                   24E2 C |  WORD_ROT :                    1FC5 C |
 WORD_RSHIFT :                 29E8 C |  WORD_SECONDARY :              2499 C |
 WORD_SEMI :                   2322 C |  WORD_SIN :                    2A23 C |
 WORD_STO :                    23F3 C |  WORD_STORE :                  2254 C |
 WORD_STO_CHAR :               246F C |  WORD_STO_THREAD :             250C C |
 WORD_STRING :                 234D C |  WORD_SUB :                    2077 C |
 WORD_SWAP :                   1F7A C |  WORD_TAN :                    2A50 C |
 WORD_THEN :                   293E C |  WORD_TICK :                   21BA C |
 WORD_UNTIL :                  27ED C |  WORD_UNTIL_THREAD :           2822 C |
 WORD_VAR :                    2367 C |  WORD_VAR_THREAD :             23CD C |
 WORD_XOR :                    28BC C |  WriteHeader :                 1EC9 C |
 WriteHeader.alloc_good :      1EE8 C |  WriteHeader.header_loop :     1F00 C |
 WriteHeader.name_loop :       1EEF C |  WriteHeader.return :          1F12 C |
 WriteToken :                  1E88 C |  WriteToken.add_address :      1E9B C |
 WriteToken.return :           1EC0 C |  WriteToken.success :          1EA5 C |
 ZeroReg :                      BFD C |  ZeroReg.loop :                 C01 C |
 add_not_string :              203D C |  add_not_string.mixed_add :    2058 C |
 add_not_string.no_swap :      2072 C |  add_not_string.not_mixed1 :   2068 C |
 add_not_string.not_raw_hex :  2054 C |  aux_stack_count :              872 C |
 aux_stack_ptr :                871 C |  aux_word_counter :             873 C |
*code_begin :                   900 C | *code_end :                    2DB2 C |
 comma_ret :                  9,394 - |  counter1 :                    8D2D C |
 counter2 :                    8D2F C | *debug_fonts :                 D5A8 C |
 dict_begin :                   178 C |  dict_end :                     800 C |
 dict_ptr :                      2A C |  dict_save :                     2E C |
 div_not_float :               2159 C |  div_not_float.div_underflow : 21A5 C |
 div_not_float.div_zero_check :                                        2171 C |
 div_not_float.loop :          2181 C |  div_not_float.loop_next :     21A7 C |
 div_not_float.not_raw_hex :   21B5 C |  dummy :                         20 C |
 exec_ptr :                      30 C |  failed1 :                     8D31 C |
 failed2 :                     8D33 C |  file_tests :                  8E82 C |
 file_tests.._1346.str_addr :  8EB7 C |  file_tests.._1346.str_skip :  8EDA C |
 file_tests.._1364.skip :      8EF0 C |  file_tests.._1391.str_addr :  8F56 C |
 file_tests.._1391.str_skip :  8F75 C |  file_tests.._1410.str_addr :  8F87 C |
 file_tests.._1410.str_skip :  8F8C C |  file_tests.._1430.str_addr :  8FC2 C |
 file_tests.._1430.str_skip :  8FE5 C |  file_tests.._1449.str_addr :  8FF6 C |
 file_tests.._1449.str_skip :  9016 C |  file_tests.._1468.str_addr :  903C C |
 file_tests.._1468.str_skip :  904E C |  file_tests.._1487.str_addr :  908A C |
 file_tests.._1487.str_skip :  9096 C |  file_tests.._1506.str_addr :  90BC C |
 file_tests.._1506.str_skip :  90C8 C |  file_tests.._1525.str_addr :  90D6 C |
 file_tests.._1525.str_skip :  90E4 C |  file_tests.._1546.str_addr :  90F5 C |
 file_tests.._1546.str_skip :  9105 C |  file_tests.._1565.str_addr :  9123 C |
 file_tests.._1565.str_skip :  9125 C |  file_tests.done :             8FB1 C |
 file_tests.fail_loop :        9087 C |  file_tests.failed :           9075 C |
 file_tests.failed_carry_done :                                        9087 C |
 file_tests.failed_done :      9039 C |  file_tests.file_end :         8F42 C |
 file_tests.floop :            9112 C |  file_tests.loop :             8EE5 C |
 file_tests.loop_comment :     8F37 C |  file_tests.not_A :            8F18 C |
 file_tests.not_I :            8EFD C |  file_tests.not_M :            8F33 C |
 file_tests.not_Z :            8F52 C |  file_tests.not_comment :      8F44 C |
 file_tests.not_newline :      8F4B C |  file_tests.some_failed :      8FF3 C |
 font1 :                       D02F C |  font2 :                       D18D C |
 font3 :                       D2EB C |  font4 :                       D449 C |
*font_counter :                D5A7 C |  font_inverted :                173 C |
 font_ptr :                      28 C |  font_table :                   903 C |
*global_error :                 130 C | *halt_no_test :                D01F C |
 halt_no_test.._112.skip :     D02C C |  halt_no_test.if0 :            D02E C |
*halt_test :                   D00E C |  halt_test.no_match :          D01E C |
 hex_table :                    BB9 C |  inc_line :                    8D64 C |
 inc_line.carry_done :         8D79 C |  input_buff :                   133 C |
 input_buff_begin :             131 C |  input_buff_end :               132 C |
 line_num :                    8D35 C |  line_num.._1143.str_addr :    8D38 C |
 line_num.._1143.str_skip :    8D3B C |  main :                        2C76 C |
 main.compile_value :          2D69 C |  main.compile_word :           2D01 C |
 main.error_sub :              2D82 C |  main.float_alloc_good :       2D96 C |
 main.immediate :              2CCF C |  main.input_good :             2D33 C |
 main.input_loop :             2C88 C |  main.insert_address :         2CE4 C |
 main.jump_thread :            2CF6 C |  main.loop :                   2D9C C |
 main.mode_good :              2CA4 C |  main.no_compile_error :       2D22 C |
 main.no_overflow :            2D46 C |  main.no_word_error :          2CBC C |
 main.process_loop :           2CB2 C |  main.value_compile :          2D88 C |
 main.word_not_found :         2D25 C |  math_a :                       807 C |
 math_b :                       808 C |  math_c :                       809 C |
*math_d :                       80A C |  math_fill :                    80E C |
 math_hi :                      806 C |  math_lo :                      805 C |
 math_max :                     80D C |  math_ptr1 :                     34 C |
 math_ptr2 :                     36 C |  math_signs :                   80B C |
 math_sticky :                  80C C |  mode :                         175 C |
 mult_not_float :              20D6 C |  mult_not_float.loop :         211D C |
 mult_not_float.loop_next :    212E C |  mult_not_float.mult_sub :     2115 C |
 mult_not_float.not_raw_hex :  2136 C |  new_dict_ptr :                  2C C |
 new_word_buff :                81A C |  new_word_len :                 819 C |
 obj_address :                   32 C |  read2 :                       8E65 C |
 read_file_line :              8D7A C |  read_file_line.loop :         8D7F C |
 read_file_line.loop_done :    8D8F C |  ret_address :                   24 C |
 ret_val :                       22 C |  screen_ptr :                    26 C |
 setup :                        A61 C |  setup.loop :                   A73 C |
 setup.loop_begin :             A71 C |  shift_counter :                80F C |
 special_chars :               18E1 C |  stack_X :                      804 C |
 stack_count :                  174 C |  stats :                       9142 C |
 stats.._1592.str_addr :       9145 C |  stats.._1592.str_skip :       915B C |
 stats.._1611.str_addr :       916E C |  stats.._1611.str_skip :       9184 C |
 stats.._1630.str_addr :       9197 C |  stats.._1630.str_skip :       919A C |
 temp_thread :                  800 C |  test_buff :                   8900 C |
 test_count :                   176 C |  tests :                       8CC4 C |
 tests.._1100.str_addr :       8CEF C |  tests.._1100.str_skip :       8D0D C |

    946 symbols
     60 unused symbols

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 3 - 9/26/2021 0:20:37


  Defined Macros:
  ---------------

AddCommas                             |

      1 macro

 AS V1.42 Beta [Bld 157] - Source File processed.asm - Page 4 - 9/26/2021 0:20:37


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.30 seconds assembly time

   6896 lines source file
   6902 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
